// Code generated by generators/resource/main.go; DO NOT EDIT.

package provider

import (
	"context"

	tfsdk "github.com/hashicorp/terraform-plugin-framework"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func init() {
	RegisterResourceType("aws_appmesh_virtual_service", awsAppmeshVirtualService)
}

// awsAppmeshVirtualService returns the Terraform aws_appmesh_virtual_service resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::AppMesh::VirtualService resource type.
func awsAppmeshVirtualService(ctx context.Context) (tfsdk.ResourceType, error) {
	// Subproperty definitions.

	// Definition: Tag
	// Property: Key
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	tagKeyAttribute := schema.Attribute{}
	tagKeyAttribute.Type = types.StringType
	tagKeyAttribute.Optional = true

	// Definition: Tag
	// Property: Value
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	tagValueAttribute := schema.Attribute{}
	tagValueAttribute.Type = types.StringType
	tagValueAttribute.Optional = true

	// Property references for Tag:
	tagAttributes := make(map[string]schema.Attribute, 2)
	tagAttributes["key"] = tagKeyAttribute
	tagAttributes["value"] = tagValueAttribute

	// Definition: VirtualNodeServiceProvider
	// Property: VirtualNodeName
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	virtualNodeServiceProviderVirtualNodeNameAttribute := schema.Attribute{}
	virtualNodeServiceProviderVirtualNodeNameAttribute.Type = types.StringType
	virtualNodeServiceProviderVirtualNodeNameAttribute.Optional = true

	// Property references for VirtualNodeServiceProvider:
	virtualNodeServiceProviderAttributes := make(map[string]schema.Attribute, 1)
	virtualNodeServiceProviderAttributes["virtual_node_name"] = virtualNodeServiceProviderVirtualNodeNameAttribute

	// Definition: VirtualRouterServiceProvider
	// Property: VirtualRouterName
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	virtualRouterServiceProviderVirtualRouterNameAttribute := schema.Attribute{}
	virtualRouterServiceProviderVirtualRouterNameAttribute.Type = types.StringType
	virtualRouterServiceProviderVirtualRouterNameAttribute.Optional = true

	// Property references for VirtualRouterServiceProvider:
	virtualRouterServiceProviderAttributes := make(map[string]schema.Attribute, 1)
	virtualRouterServiceProviderAttributes["virtual_router_name"] = virtualRouterServiceProviderVirtualRouterNameAttribute

	// Definition: VirtualServiceProvider
	// Property: VirtualNode
	// CloudFormation resource type schema:
	/*
	   {
	     "$ref": "#/definitions/VirtualNodeServiceProvider"
	   }
	*/
	virtualServiceProviderVirtualNodeAttribute := schema.Attribute{}
	virtualServiceProviderVirtualNodeAttribute.Attributes = schema.SingleNestedAttributes(virtualNodeServiceProviderAttributes)
	virtualServiceProviderVirtualNodeAttribute.Optional = true

	// Definition: VirtualServiceProvider
	// Property: VirtualRouter
	// CloudFormation resource type schema:
	/*
	   {
	     "$ref": "#/definitions/VirtualRouterServiceProvider"
	   }
	*/
	virtualServiceProviderVirtualRouterAttribute := schema.Attribute{}
	virtualServiceProviderVirtualRouterAttribute.Attributes = schema.SingleNestedAttributes(virtualRouterServiceProviderAttributes)
	virtualServiceProviderVirtualRouterAttribute.Optional = true

	// Property references for VirtualServiceProvider:
	virtualServiceProviderAttributes := make(map[string]schema.Attribute, 2)
	virtualServiceProviderAttributes["virtual_node"] = virtualServiceProviderVirtualNodeAttribute
	virtualServiceProviderAttributes["virtual_router"] = virtualServiceProviderVirtualRouterAttribute

	// Definition: VirtualServiceSpec
	// Property: Provider
	// CloudFormation resource type schema:
	/*
	   {
	     "$ref": "#/definitions/VirtualServiceProvider"
	   }
	*/
	virtualServiceSpecProviderAttribute := schema.Attribute{}
	virtualServiceSpecProviderAttribute.Attributes = schema.SingleNestedAttributes(virtualServiceProviderAttributes)
	virtualServiceSpecProviderAttribute.Optional = true

	// Property references for VirtualServiceSpec:
	virtualServiceSpecAttributes := make(map[string]schema.Attribute, 1)
	virtualServiceSpecAttributes["provider"] = virtualServiceSpecProviderAttribute

	// Root property definition.

	// Definition: AwsAppmeshVirtualService
	// Property: Arn
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceArnAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceArnAttribute.Type = types.StringType
	awsAppmeshVirtualServiceArnAttribute.Computed = true

	// Definition: AwsAppmeshVirtualService
	// Property: Id
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceIdAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceIdAttribute.Type = types.StringType
	awsAppmeshVirtualServiceIdAttribute.Computed = true

	// Definition: AwsAppmeshVirtualService
	// Property: MeshName
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceMeshNameAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceMeshNameAttribute.Type = types.StringType
	awsAppmeshVirtualServiceMeshNameAttribute.Required = true

	// Definition: AwsAppmeshVirtualService
	// Property: MeshOwner
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceMeshOwnerAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceMeshOwnerAttribute.Type = types.StringType
	awsAppmeshVirtualServiceMeshOwnerAttribute.Optional = true

	// Definition: AwsAppmeshVirtualService
	// Property: ResourceOwner
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceResourceOwnerAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceResourceOwnerAttribute.Type = types.StringType
	awsAppmeshVirtualServiceResourceOwnerAttribute.Computed = true

	// Definition: AwsAppmeshVirtualService
	// Property: Spec
	// CloudFormation resource type schema:
	/*
	   {
	     "$ref": "#/definitions/VirtualServiceSpec"
	   }
	*/
	awsAppmeshVirtualServiceSpecAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceSpecAttribute.Attributes = schema.SingleNestedAttributes(virtualServiceSpecAttributes)
	awsAppmeshVirtualServiceSpecAttribute.Required = true

	// Definition: AwsAppmeshVirtualService
	// Property: Tags
	// CloudFormation resource type schema:
	/*
	   {
	     "items": {
	       "$ref": "#/definitions/Tag"
	     },
	     "type": "array",
	     "uniqueItems": false
	   }
	*/
	awsAppmeshVirtualServiceTagsAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceTagsAttributeOptions := schema.ListNestedAttributesOptions{}
	awsAppmeshVirtualServiceTagsAttribute.Attributes = schema.ListNestedAttributes(tagAttributes, awsAppmeshVirtualServiceTagsAttributeOptions)
	awsAppmeshVirtualServiceTagsAttribute.Optional = true

	// Definition: AwsAppmeshVirtualService
	// Property: Uid
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceUidAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceUidAttribute.Type = types.StringType
	awsAppmeshVirtualServiceUidAttribute.Computed = true

	// Definition: AwsAppmeshVirtualService
	// Property: VirtualServiceName
	// CloudFormation resource type schema:
	/*
	   {
	     "type": "string"
	   }
	*/
	awsAppmeshVirtualServiceVirtualServiceNameAttribute := schema.Attribute{}
	awsAppmeshVirtualServiceVirtualServiceNameAttribute.Type = types.StringType
	awsAppmeshVirtualServiceVirtualServiceNameAttribute.Required = true

	// Property references for AwsAppmeshVirtualService:
	awsAppmeshVirtualServiceAttributes := make(map[string]schema.Attribute, 9)
	awsAppmeshVirtualServiceAttributes["arn"] = awsAppmeshVirtualServiceArnAttribute
	awsAppmeshVirtualServiceAttributes["id"] = awsAppmeshVirtualServiceIdAttribute
	awsAppmeshVirtualServiceAttributes["mesh_name"] = awsAppmeshVirtualServiceMeshNameAttribute
	awsAppmeshVirtualServiceAttributes["mesh_owner"] = awsAppmeshVirtualServiceMeshOwnerAttribute
	awsAppmeshVirtualServiceAttributes["resource_owner"] = awsAppmeshVirtualServiceResourceOwnerAttribute
	awsAppmeshVirtualServiceAttributes["spec"] = awsAppmeshVirtualServiceSpecAttribute
	awsAppmeshVirtualServiceAttributes["tags"] = awsAppmeshVirtualServiceTagsAttribute
	awsAppmeshVirtualServiceAttributes["uid"] = awsAppmeshVirtualServiceUidAttribute
	awsAppmeshVirtualServiceAttributes["virtual_service_name"] = awsAppmeshVirtualServiceVirtualServiceNameAttribute

	schema := schema.Schema{
		Version:    1,
		Attributes: awsAppmeshVirtualServiceAttributes,
	}

	resourceType := NewGenericResourceType(
		"AWS::AppMesh::VirtualService",
		"aws_appmesh_virtual_service",
		schema,
	)

	return resourceType, nil
}
