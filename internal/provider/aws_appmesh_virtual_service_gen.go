// Code generated by generators/resource/main.go; DO NOT EDIT.

package provider

import (
	"context"

	tfsdk "github.com/hashicorp/terraform-plugin-framework"
	"github.com/hashicorp/terraform-plugin-framework/schema"
)

func init() {
	RegisterResourceType("aws_appmesh_virtual_service", resourceAwsAppmeshVirtualService)
}

// resourceAwsAppmeshVirtualService returns the Terraform aws_appmesh_virtual_service resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::AppMesh::VirtualService resource type.
func resourceAwsAppmeshVirtualService(ctx context.Context) (tfsdk.ResourceType, error) {

	// Tag
	/*
	   {
	     "additionalProperties": false,
	     "properties": {
	       "Key": {
	         "type": "string"
	       },
	       "Value": {
	         "type": "string"
	       }
	     },
	     "required": [
	       "Value",
	       "Key"
	     ],
	     "type": "object"
	   }
	*/
	defnTagAttribute := schema.Attribute{}

	// VirtualRouterServiceProvider
	/*
	   {
	     "additionalProperties": false,
	     "properties": {
	       "VirtualRouterName": {
	         "type": "string"
	       }
	     },
	     "required": [
	       "VirtualRouterName"
	     ],
	     "type": "object"
	   }
	*/
	defnVirtualRouterServiceProviderAttribute := schema.Attribute{}

	// VirtualNodeServiceProvider
	/*
	   {
	     "additionalProperties": false,
	     "properties": {
	       "VirtualNodeName": {
	         "type": "string"
	       }
	     },
	     "required": [
	       "VirtualNodeName"
	     ],
	     "type": "object"
	   }
	*/
	defnVirtualNodeServiceProviderAttribute := schema.Attribute{}

	// VirtualServiceProvider
	/*
	   {
	     "additionalProperties": false,
	     "properties": {
	       "VirtualNode": {
	         "$ref": "#/definitions/VirtualNodeServiceProvider"
	       },
	       "VirtualRouter": {
	         "$ref": "#/definitions/VirtualRouterServiceProvider"
	       }
	     },
	     "type": "object"
	   }
	*/
	defnVirtualServiceProviderAttribute := schema.Attribute{}

	// VirtualServiceSpec
	/*
	   {
	     "additionalProperties": false,
	     "properties": {
	       "Provider": {
	         "$ref": "#/definitions/VirtualServiceProvider"
	       }
	     },
	     "type": "object"
	   }
	*/
	defnVirtualServiceSpecAttribute := schema.Attribute{}

	// Spec
	/*
	   {
	     "$ref": "#/definitions/VirtualServiceSpec"
	   }
	*/
	propSpecAttribute := schema.Attribute{}

	// Uid
	/*
	   {
	     "type": "string"
	   }
	*/
	propUidAttribute := schema.Attribute{}

	// MeshName
	/*
	   {
	     "type": "string"
	   }
	*/
	propMeshNameAttribute := schema.Attribute{}

	// Id
	/*
	   {
	     "type": "string"
	   }
	*/
	propIdAttribute := schema.Attribute{}

	// VirtualServiceName
	/*
	   {
	     "type": "string"
	   }
	*/
	propVirtualServiceNameAttribute := schema.Attribute{}

	// MeshOwner
	/*
	   {
	     "type": "string"
	   }
	*/
	propMeshOwnerAttribute := schema.Attribute{}

	// ResourceOwner
	/*
	   {
	     "type": "string"
	   }
	*/
	propResourceOwnerAttribute := schema.Attribute{}

	// Arn
	/*
	   {
	     "type": "string"
	   }
	*/
	propArnAttribute := schema.Attribute{}

	// Tags
	/*
	   {
	     "items": {
	       "$ref": "#/definitions/Tag"
	     },
	     "type": "array",
	     "uniqueItems": false
	   }
	*/
	propTagsAttribute := schema.Attribute{}

	attributes := make(map[string]schema.Attribute)
	attributes["arn"] = propArnAttribute
	attributes["id"] = propIdAttribute
	attributes["mesh_name"] = propMeshNameAttribute
	attributes["mesh_owner"] = propMeshOwnerAttribute
	attributes["resource_owner"] = propResourceOwnerAttribute
	attributes["spec"] = propSpecAttribute
	attributes["tags"] = propTagsAttribute
	attributes["uid"] = propUidAttribute
	attributes["virtual_service_name"] = propVirtualServiceNameAttribute

	schema := schema.Schema{
		Version:    1,
		Attributes: attributes,
	}

	resourceType := NewGenericResourceType(
		"AWS::AppMesh::VirtualService",
		"aws_appmesh_virtual_service",
		schema,
	)

	return resourceType, nil
}
