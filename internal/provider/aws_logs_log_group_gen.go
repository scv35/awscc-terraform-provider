// Code generated by generators/resource/main.go; DO NOT EDIT.

package provider

import (
	"context"

	tfsdk "github.com/hashicorp/terraform-plugin-framework"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func init() {
	RegisterResourceType("aws_logs_log_group", awsLogsLogGroup)
}

// awsLogsLogGroup returns the Terraform aws_logs_log_group resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::Logs::LogGroup resource type.
func awsLogsLogGroup(ctx context.Context) (tfsdk.ResourceType, error) {
	// Subproperty definitions.

	// Root property definition.

	// Definition: AwsLogsLogGroup
	// Property: Arn
	// CloudFormation Resource Type Schema:
	/*
	   {
	     "description": "The CloudWatch log group ARN.",
	     "type": "string"
	   }
	*/
	awsLogsLogGroupArnAttribute := schema.Attribute{}
	awsLogsLogGroupArnAttribute.Type = types.StringType
	awsLogsLogGroupArnAttribute.Computed = true
	awsLogsLogGroupArnAttribute.Description = `The CloudWatch log group ARN.`

	// Definition: AwsLogsLogGroup
	// Property: KmsKeyId
	// CloudFormation Resource Type Schema:
	/*
	   {
	     "description": "The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.",
	     "maxLength": 256,
	     "pattern": "^arn:[a-z0-9-]+:kms:[a-z0-9-]+:\\d{12}:(key|alias)/.+$",
	     "type": "string"
	   }
	*/
	awsLogsLogGroupKmsKeyIdAttribute := schema.Attribute{}
	awsLogsLogGroupKmsKeyIdAttribute.Type = types.StringType
	awsLogsLogGroupKmsKeyIdAttribute.Optional = true
	awsLogsLogGroupKmsKeyIdAttribute.Description = `The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.`

	// Definition: AwsLogsLogGroup
	// Property: LogGroupName
	// CloudFormation Resource Type Schema:
	/*
	   {
	     "description": "The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group.",
	     "maxLength": 512,
	     "minLength": 1,
	     "pattern": "^[.\\-_/#A-Za-z0-9]{1,512}$",
	     "type": "string"
	   }
	*/
	awsLogsLogGroupLogGroupNameAttribute := schema.Attribute{}
	awsLogsLogGroupLogGroupNameAttribute.Type = types.StringType
	awsLogsLogGroupLogGroupNameAttribute.Optional = true
	awsLogsLogGroupLogGroupNameAttribute.Description = `The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group.`

	// Definition: AwsLogsLogGroup
	// Property: RetentionInDays
	// CloudFormation Resource Type Schema:
	/*
	   {
	     "description": "The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.",
	     "enum": [
	       1,
	       3,
	       5,
	       7,
	       14,
	       30,
	       60,
	       90,
	       120,
	       150,
	       180,
	       365,
	       400,
	       545,
	       731,
	       1827,
	       3653
	     ],
	     "type": "integer"
	   }
	*/
	awsLogsLogGroupRetentionInDaysAttribute := schema.Attribute{}
	awsLogsLogGroupRetentionInDaysAttribute.Type = types.NumberType
	awsLogsLogGroupRetentionInDaysAttribute.Optional = true
	awsLogsLogGroupRetentionInDaysAttribute.Description = `The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.`

	awsLogsLogGroupAttributes := make(map[string]schema.Attribute, 4)
	awsLogsLogGroupAttributes["arn"] = awsLogsLogGroupArnAttribute
	awsLogsLogGroupAttributes["kms_key_id"] = awsLogsLogGroupKmsKeyIdAttribute
	awsLogsLogGroupAttributes["log_group_name"] = awsLogsLogGroupLogGroupNameAttribute
	awsLogsLogGroupAttributes["retention_in_days"] = awsLogsLogGroupRetentionInDaysAttribute

	schema := schema.Schema{
		Version:    1,
		Attributes: awsLogsLogGroupAttributes,
	}

	resourceType := NewGenericResourceType(
		"AWS::Logs::LogGroup",
		"aws_logs_log_group",
		schema,
	)

	return resourceType, nil
}
