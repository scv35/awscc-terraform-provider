// Code generated by generators/resource/main.go; DO NOT EDIT.

package rds

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	"github.com/hashicorp/terraform-provider-awscc/internal/validate"
)

func init() {
	registry.AddResourceFactory("awscc_rds_db_instance", dBInstanceResource)
}

// dBInstanceResource returns the Terraform awscc_rds_db_instance resource.
// This Terraform resource corresponds to the CloudFormation AWS::RDS::DBInstance resource.
func dBInstanceResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]tfsdk.Attribute{
		"allocated_storage": {
			// Property: AllocatedStorage
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The amount of storage (in gigabytes) to be initially allocated for the database instance.",
			//	  "pattern": "^[0-9]*$",
			//	  "type": "string"
			//	}
			Description: "The amount of storage (in gigabytes) to be initially allocated for the database instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.StringMatch(regexp.MustCompile("^[0-9]*$"), ""),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"allow_major_version_upgrade": {
			// Property: AllowMajorVersionUpgrade
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether major version upgrades are allowed. Changing this parameter doesn't result in an outage and the change is asynchronously applied as soon as possible.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"associated_roles": {
			// Property: AssociatedRoles
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The AWS Identity and Access Management (IAM) roles associated with the DB instance.",
			//	  "items": {
			//	    "additionalProperties": false,
			//	    "properties": {
			//	      "FeatureName": {
			//	        "description": "The name of the feature associated with the AWS Identity and Access Management (IAM) role. IAM roles that are associated with a DB instance grant permission for the DB instance to access other AWS services on your behalf.",
			//	        "type": "string"
			//	      },
			//	      "RoleArn": {
			//	        "description": "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.",
			//	        "type": "string"
			//	      }
			//	    },
			//	    "required": [
			//	      "FeatureName",
			//	      "RoleArn"
			//	    ],
			//	    "type": "object"
			//	  },
			//	  "type": "array"
			//	}
			Description: "The AWS Identity and Access Management (IAM) roles associated with the DB instance.",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"feature_name": {
						// Property: FeatureName
						Description: "The name of the feature associated with the AWS Identity and Access Management (IAM) role. IAM roles that are associated with a DB instance grant permission for the DB instance to access other AWS services on your behalf.",
						Type:        types.StringType,
						Required:    true,
					},
					"role_arn": {
						// Property: RoleArn
						Description: "The Amazon Resource Name (ARN) of the IAM role that is associated with the DB instance.",
						Type:        types.StringType,
						Required:    true,
					},
				},
			),
			Optional: true,
			Computed: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"auto_minor_version_upgrade": {
			// Property: AutoMinorVersionUpgrade
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether minor engine upgrades are applied automatically to the DB instance during the maintenance window. By default, minor engine upgrades are applied automatically.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"availability_zone": {
			// Property: AvailabilityZone
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.",
			//	  "type": "string"
			//	}
			Description: "The Availability Zone (AZ) where the database will be created. For information on AWS Regions and Availability Zones.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"backup_retention_period": {
			// Property: BackupRetentionPeriod
			// CloudFormation resource type schema:
			//
			//	{
			//	  "default": 1,
			//	  "description": "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
			//	  "minimum": 0,
			//	  "type": "integer"
			//	}
			Description: "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.IntAtLeast(0),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				DefaultValue(types.Int64Value(1)),
				resource.UseStateForUnknown(),
			},
		},
		"ca_certificate_identifier": {
			// Property: CACertificateIdentifier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The identifier of the CA certificate for this DB instance.",
			//	  "type": "string"
			//	}
			Description: "The identifier of the CA certificate for this DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"character_set_name": {
			// Property: CharacterSetName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "For supported engines, indicates that the DB instance should be associated with the specified character set.",
			//	  "type": "string"
			//	}
			Description: "For supported engines, indicates that the DB instance should be associated with the specified character set.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"copy_tags_to_snapshot": {
			// Property: CopyTagsToSnapshot
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether to copy tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"custom_iam_instance_profile": {
			// Property: CustomIAMInstanceProfile
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:\n * The profile must exist in your account.\n * The profile must have an IAM role that Amazon EC2 has permissions to assume.\n * The instance profile name and the associated IAM role name must start with the prefix AWSRDSCustom .\nFor the list of permissions required for the IAM role, see Configure IAM and your VPC in the Amazon RDS User Guide .\n\nThis setting is required for RDS Custom.",
			//	  "type": "string"
			//	}
			Description: "The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance. The instance profile must meet the following requirements:\n * The profile must exist in your account.\n * The profile must have an IAM role that Amazon EC2 has permissions to assume.\n * The instance profile name and the associated IAM role name must start with the prefix AWSRDSCustom .\nFor the list of permissions required for the IAM role, see Configure IAM and your VPC in the Amazon RDS User Guide .\n\nThis setting is required for RDS Custom.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"db_cluster_identifier": {
			// Property: DBClusterIdentifier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The identifier of the DB cluster that the instance will belong to.",
			//	  "type": "string"
			//	}
			Description: "The identifier of the DB cluster that the instance will belong to.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"db_instance_arn": {
			// Property: DBInstanceArn
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The Amazon Resource Name (ARN) for the DB instance.",
			//	  "type": "string"
			//	}
			Description: "The Amazon Resource Name (ARN) for the DB instance.",
			Type:        types.StringType,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"db_instance_class": {
			// Property: DBInstanceClass
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.",
			//	  "type": "string"
			//	}
			Description: "The compute and memory capacity of the DB instance, for example, db.m4.large. Not all DB instance classes are available in all AWS Regions, or for all database engines.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"db_instance_identifier": {
			// Property: DBInstanceIdentifier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.",
			//	  "maxLength": 63,
			//	  "minLength": 1,
			//	  "pattern": "^$|^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$",
			//	  "type": "string"
			//	}
			Description: "A name for the DB instance. If you specify a name, AWS CloudFormation converts it to lowercase. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.StringLenBetween(1, 63),
				validate.StringMatch(regexp.MustCompile("^$|^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$"), ""),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"db_name": {
			// Property: DBName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The meaning of this parameter differs according to the database engine you use.",
			//	  "pattern": "^$|^[_a-zA-Z][a-zA-Z0-9_]{0,63}$",
			//	  "type": "string"
			//	}
			Description: "The meaning of this parameter differs according to the database engine you use.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.StringMatch(regexp.MustCompile("^$|^[_a-zA-Z][a-zA-Z0-9_]{0,63}$"), ""),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"db_parameter_group_name": {
			// Property: DBParameterGroupName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
			//	  "type": "string"
			//	}
			Description: "The name of an existing DB parameter group or a reference to an AWS::RDS::DBParameterGroup resource created in the template.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"db_security_groups": {
			// Property: DBSecurityGroups
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
			//	  "items": {
			//	    "type": "string"
			//	  },
			//	  "type": "array",
			//	  "uniqueItems": true
			//	}
			Description: "A list of the DB security groups to assign to the DB instance. The list can include both the name of existing DB security groups or references to AWS::RDS::DBSecurityGroup resources created in the template.",
			Type:        types.ListType{ElemType: types.StringType},
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.UniqueItems(),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"db_snapshot_identifier": {
			// Property: DBSnapshotIdentifier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.",
			//	  "type": "string"
			//	}
			Description: "The name or Amazon Resource Name (ARN) of the DB snapshot that's used to restore the DB instance. If you're restoring from a shared manual DB snapshot, you must specify the ARN of the snapshot.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
			// DBSnapshotIdentifier is a write-only property.
		},
		"db_subnet_group_name": {
			// Property: DBSubnetGroupName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.",
			//	  "type": "string"
			//	}
			Description: "A DB subnet group to associate with the DB instance. If you update this value, the new subnet group must be a subnet group in a new VPC.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"dbi_resource_id": {
			// Property: DbiResourceId
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
			//	  "type": "string"
			//	}
			Description: "The AWS Region-unique, immutable identifier for the DB instance. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB instance is accessed.",
			Type:        types.StringType,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"delete_automated_backups": {
			// Property: DeleteAutomatedBackups
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"deletion_protection": {
			// Property: DeletionProtection
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether the DB instance has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"domain": {
			// Property: Domain
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.",
			//	  "type": "string"
			//	}
			Description: "The Active Directory directory ID to create the DB instance in. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"domain_iam_role_name": {
			// Property: DomainIAMRoleName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
			//	  "type": "string"
			//	}
			Description: "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"enable_cloudwatch_logs_exports": {
			// Property: EnableCloudwatchLogsExports
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.",
			//	  "items": {
			//	    "type": "string"
			//	  },
			//	  "type": "array"
			//	}
			Description: "The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used.",
			Type:        types.ListType{ElemType: types.StringType},
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"enable_iam_database_authentication": {
			// Property: EnableIAMDatabaseAuthentication
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether to enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"enable_performance_insights": {
			// Property: EnablePerformanceInsights
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether to enable Performance Insights for the DB instance.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether to enable Performance Insights for the DB instance.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"endpoint": {
			// Property: Endpoint
			// CloudFormation resource type schema:
			//
			//	{
			//	  "additionalProperties": false,
			//	  "description": "Specifies the connection endpoint.",
			//	  "properties": {
			//	    "Address": {
			//	      "description": "Specifies the DNS address of the DB instance.",
			//	      "type": "string"
			//	    },
			//	    "HostedZoneId": {
			//	      "description": "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
			//	      "type": "string"
			//	    },
			//	    "Port": {
			//	      "description": "Specifies the port that the database engine is listening on.",
			//	      "type": "string"
			//	    }
			//	  },
			//	  "type": "object"
			//	}
			Description: "Specifies the connection endpoint.",
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"address": {
						// Property: Address
						Description: "Specifies the DNS address of the DB instance.",
						Type:        types.StringType,
						Computed:    true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
					"hosted_zone_id": {
						// Property: HostedZoneId
						Description: "Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.",
						Type:        types.StringType,
						Computed:    true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
					"port": {
						// Property: Port
						Description: "Specifies the port that the database engine is listening on.",
						Type:        types.StringType,
						Computed:    true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
				},
			),
			Optional: true,
			Computed: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"engine": {
			// Property: Engine
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The name of the database engine that you want to use for this DB instance.",
			//	  "type": "string"
			//	}
			Description: "The name of the database engine that you want to use for this DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"engine_version": {
			// Property: EngineVersion
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The version number of the database engine to use.",
			//	  "type": "string"
			//	}
			Description: "The version number of the database engine to use.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"iops": {
			// Property: Iops
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The number of I/O operations per second (IOPS) that the database provisions.",
			//	  "type": "integer"
			//	}
			Description: "The number of I/O operations per second (IOPS) that the database provisions.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"kms_key_id": {
			// Property: KmsKeyId
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The ARN of the AWS Key Management Service (AWS KMS) master key that's used to encrypt the DB instance.",
			//	  "type": "string"
			//	}
			Description: "The ARN of the AWS Key Management Service (AWS KMS) master key that's used to encrypt the DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"license_model": {
			// Property: LicenseModel
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "License model information for this DB instance.",
			//	  "type": "string"
			//	}
			Description: "License model information for this DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"master_user_password": {
			// Property: MasterUserPassword
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The password for the master user.",
			//	  "type": "string"
			//	}
			Description: "The password for the master user.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
			// MasterUserPassword is a write-only property.
		},
		"master_username": {
			// Property: MasterUsername
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The master user name for the DB instance.",
			//	  "maxLength": 128,
			//	  "minLength": 1,
			//	  "pattern": "^[a-zA-Z][a-zA-Z0-9_]{0,127}$",
			//	  "type": "string"
			//	}
			Description: "The master user name for the DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.StringLenBetween(1, 128),
				validate.StringMatch(regexp.MustCompile("^[a-zA-Z][a-zA-Z0-9_]{0,127}$"), ""),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"max_allocated_storage": {
			// Property: MaxAllocatedStorage
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.",
			//	  "type": "integer"
			//	}
			Description: "The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"monitoring_interval": {
			// Property: MonitoringInterval
			// CloudFormation resource type schema:
			//
			//	{
			//	  "default": 0,
			//	  "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
			//	  "type": "integer"
			//	}
			Description: "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				DefaultValue(types.Int64Value(0)),
				resource.UseStateForUnknown(),
			},
		},
		"monitoring_role_arn": {
			// Property: MonitoringRoleArn
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.",
			//	  "type": "string"
			//	}
			Description: "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"multi_az": {
			// Property: MultiAZ
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Specifies whether the database instance is a multiple Availability Zone deployment.",
			//	  "type": "boolean"
			//	}
			Description: "Specifies whether the database instance is a multiple Availability Zone deployment.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"nchar_character_set_name": {
			// Property: NcharCharacterSetName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The name of the NCHAR character set for the Oracle DB instance. This parameter doesn't apply to RDS Custom.",
			//	  "type": "string"
			//	}
			Description: "The name of the NCHAR character set for the Oracle DB instance. This parameter doesn't apply to RDS Custom.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"network_type": {
			// Property: NetworkType
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The network type of the DB cluster.",
			//	  "type": "string"
			//	}
			Description: "The network type of the DB cluster.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"option_group_name": {
			// Property: OptionGroupName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Indicates that the DB instance should be associated with the specified option group.",
			//	  "type": "string"
			//	}
			Description: "Indicates that the DB instance should be associated with the specified option group.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"performance_insights_kms_key_id": {
			// Property: PerformanceInsightsKMSKeyId
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
			//	  "type": "string"
			//	}
			Description: "The AWS KMS key identifier for encryption of Performance Insights data. The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"performance_insights_retention_period": {
			// Property: PerformanceInsightsRetentionPeriod
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).",
			//	  "type": "integer"
			//	}
			Description: "The amount of time, in days, to retain Performance Insights data. Valid values are 7 or 731 (2 years).",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"port": {
			// Property: Port
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The port number on which the database accepts connections.",
			//	  "pattern": "^\\d*$",
			//	  "type": "string"
			//	}
			Description: "The port number on which the database accepts connections.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.StringMatch(regexp.MustCompile("^\\d*$"), ""),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
			// Port is a write-only property.
		},
		"preferred_backup_window": {
			// Property: PreferredBackupWindow
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.",
			//	  "type": "string"
			//	}
			Description: "The daily time range during which automated backups are created if automated backups are enabled, using the BackupRetentionPeriod parameter.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"preferred_maintenance_window": {
			// Property: PreferredMaintenanceWindow
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
			//	  "type": "string"
			//	}
			Description: "he weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"processor_features": {
			// Property: ProcessorFeatures
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.",
			//	  "items": {
			//	    "additionalProperties": false,
			//	    "properties": {
			//	      "Name": {
			//	        "description": "The name of the processor feature. Valid names are coreCount and threadsPerCore.",
			//	        "enum": [
			//	          "coreCount",
			//	          "threadsPerCore"
			//	        ],
			//	        "type": "string"
			//	      },
			//	      "Value": {
			//	        "description": "The value of a processor feature name.",
			//	        "type": "string"
			//	      }
			//	    },
			//	    "type": "object"
			//	  },
			//	  "type": "array"
			//	}
			Description: "The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"name": {
						// Property: Name
						Description: "The name of the processor feature. Valid names are coreCount and threadsPerCore.",
						Type:        types.StringType,
						Optional:    true,
						Computed:    true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringInSlice([]string{
								"coreCount",
								"threadsPerCore",
							}),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
					"value": {
						// Property: Value
						Description: "The value of a processor feature name.",
						Type:        types.StringType,
						Optional:    true,
						Computed:    true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
				},
			),
			Optional: true,
			Computed: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"promotion_tier": {
			// Property: PromotionTier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "default": 1,
			//	  "description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.",
			//	  "minimum": 0,
			//	  "type": "integer"
			//	}
			Description: "A value that specifies the order in which an Aurora Replica is promoted to the primary instance after a failure of the existing primary instance.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.IntAtLeast(0),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				DefaultValue(types.Int64Value(1)),
				resource.UseStateForUnknown(),
			},
		},
		"publicly_accessible": {
			// Property: PubliclyAccessible
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.",
			//	  "type": "boolean"
			//	}
			Description: "Indicates whether the DB instance is an internet-facing instance. If you specify true, AWS CloudFormation creates an instance with a publicly resolvable DNS name, which resolves to a public IP address. If you specify false, AWS CloudFormation creates an internal instance with a DNS name that resolves to a private IP address.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"replica_mode": {
			// Property: ReplicaMode
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The open mode of an Oracle read replica. The default is open-read-only.",
			//	  "type": "string"
			//	}
			Description: "The open mode of an Oracle read replica. The default is open-read-only.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"source_db_instance_identifier": {
			// Property: SourceDBInstanceIdentifier
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "If you want to create a Read Replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of Read Replicas.",
			//	  "type": "string"
			//	}
			Description: "If you want to create a Read Replica DB instance, specify the ID of the source DB instance. Each DB instance can have a limited number of Read Replicas.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
			// SourceDBInstanceIdentifier is a write-only property.
		},
		"source_region": {
			// Property: SourceRegion
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The ID of the region that contains the source DB instance for the Read Replica.",
			//	  "type": "string"
			//	}
			Description: "The ID of the region that contains the source DB instance for the Read Replica.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
			// SourceRegion is a write-only property.
		},
		"storage_encrypted": {
			// Property: StorageEncrypted
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether the DB instance is encrypted. By default, it isn't encrypted.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"storage_throughput": {
			// Property: StorageThroughput
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Specifies the storage throughput for the DB instance.",
			//	  "type": "integer"
			//	}
			Description: "Specifies the storage throughput for the DB instance.",
			Type:        types.Int64Type,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"storage_type": {
			// Property: StorageType
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Specifies the storage type to be associated with the DB instance.",
			//	  "type": "string"
			//	}
			Description: "Specifies the storage type to be associated with the DB instance.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "Tags to assign to the DB instance.",
			//	  "insertionOrder": false,
			//	  "items": {
			//	    "additionalProperties": false,
			//	    "description": "A key-value pair to associate with a resource.",
			//	    "properties": {
			//	      "Key": {
			//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			//	        "maxLength": 128,
			//	        "minLength": 1,
			//	        "type": "string"
			//	      },
			//	      "Value": {
			//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			//	        "maxLength": 256,
			//	        "minLength": 0,
			//	        "type": "string"
			//	      }
			//	    },
			//	    "required": [
			//	      "Key"
			//	    ],
			//	    "type": "object"
			//	  },
			//	  "type": "array",
			//	  "uniqueItems": false
			//	}
			Description: "Tags to assign to the DB instance.",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Required:    true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringLenBetween(1, 128),
						},
					},
					"value": {
						// Property: Value
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Optional:    true,
						Computed:    true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringLenBetween(0, 256),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							resource.UseStateForUnknown(),
						},
					},
				},
			),
			Optional: true,
			Computed: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				Multiset(),
				resource.UseStateForUnknown(),
			},
		},
		"tde_credential_arn": {
			// Property: TdeCredentialArn
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The ARN from the key store with which to associate the instance for TDE encryption.",
			//	  "type": "string"
			//	}
			Description: "The ARN from the key store with which to associate the instance for TDE encryption.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"tde_credential_password": {
			// Property: TdeCredentialPassword
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The password for the given ARN from the key store in order to access the device.",
			//	  "type": "string"
			//	}
			Description: "The password for the given ARN from the key store in order to access the device.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
			// TdeCredentialPassword is a write-only property.
		},
		"timezone": {
			// Property: Timezone
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server.",
			//	  "type": "string"
			//	}
			Description: "The time zone of the DB instance. The time zone parameter is currently supported only by Microsoft SQL Server.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
				resource.RequiresReplace(),
			},
		},
		"use_default_processor_features": {
			// Property: UseDefaultProcessorFeatures
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A value that indicates whether the DB instance class of the DB instance uses its default processor features.",
			//	  "type": "boolean"
			//	}
			Description: "A value that indicates whether the DB instance class of the DB instance uses its default processor features.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
		"vpc_security_groups": {
			// Property: VPCSecurityGroups
			// CloudFormation resource type schema:
			//
			//	{
			//	  "description": "A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.",
			//	  "items": {
			//	    "type": "string"
			//	  },
			//	  "type": "array",
			//	  "uniqueItems": true
			//	}
			Description: "A list of the VPC security group IDs to assign to the DB instance. The list can include both the physical IDs of existing VPC security groups and references to AWS::EC2::SecurityGroup resources created in the template.",
			Type:        types.ListType{ElemType: types.StringType},
			Optional:    true,
			Computed:    true,
			Validators: []tfsdk.AttributeValidator{
				validate.UniqueItems(),
			},
			PlanModifiers: []tfsdk.AttributePlanModifier{
				resource.UseStateForUnknown(),
			},
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
		PlanModifiers: []tfsdk.AttributePlanModifier{
			resource.UseStateForUnknown(),
		},
	}

	schema := tfsdk.Schema{
		Description: "The AWS::RDS::DBInstance resource creates an Amazon RDS DB instance.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::RDS::DBInstance").WithTerraformTypeName("awscc_rds_db_instance")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithSyntheticIDAttribute(true)
	opts = opts.WithAttributeNameMap(map[string]string{
		"address":                               "Address",
		"allocated_storage":                     "AllocatedStorage",
		"allow_major_version_upgrade":           "AllowMajorVersionUpgrade",
		"associated_roles":                      "AssociatedRoles",
		"auto_minor_version_upgrade":            "AutoMinorVersionUpgrade",
		"availability_zone":                     "AvailabilityZone",
		"backup_retention_period":               "BackupRetentionPeriod",
		"ca_certificate_identifier":             "CACertificateIdentifier",
		"character_set_name":                    "CharacterSetName",
		"copy_tags_to_snapshot":                 "CopyTagsToSnapshot",
		"custom_iam_instance_profile":           "CustomIAMInstanceProfile",
		"db_cluster_identifier":                 "DBClusterIdentifier",
		"db_instance_arn":                       "DBInstanceArn",
		"db_instance_class":                     "DBInstanceClass",
		"db_instance_identifier":                "DBInstanceIdentifier",
		"db_name":                               "DBName",
		"db_parameter_group_name":               "DBParameterGroupName",
		"db_security_groups":                    "DBSecurityGroups",
		"db_snapshot_identifier":                "DBSnapshotIdentifier",
		"db_subnet_group_name":                  "DBSubnetGroupName",
		"dbi_resource_id":                       "DbiResourceId",
		"delete_automated_backups":              "DeleteAutomatedBackups",
		"deletion_protection":                   "DeletionProtection",
		"domain":                                "Domain",
		"domain_iam_role_name":                  "DomainIAMRoleName",
		"enable_cloudwatch_logs_exports":        "EnableCloudwatchLogsExports",
		"enable_iam_database_authentication":    "EnableIAMDatabaseAuthentication",
		"enable_performance_insights":           "EnablePerformanceInsights",
		"endpoint":                              "Endpoint",
		"engine":                                "Engine",
		"engine_version":                        "EngineVersion",
		"feature_name":                          "FeatureName",
		"hosted_zone_id":                        "HostedZoneId",
		"iops":                                  "Iops",
		"key":                                   "Key",
		"kms_key_id":                            "KmsKeyId",
		"license_model":                         "LicenseModel",
		"master_user_password":                  "MasterUserPassword",
		"master_username":                       "MasterUsername",
		"max_allocated_storage":                 "MaxAllocatedStorage",
		"monitoring_interval":                   "MonitoringInterval",
		"monitoring_role_arn":                   "MonitoringRoleArn",
		"multi_az":                              "MultiAZ",
		"name":                                  "Name",
		"nchar_character_set_name":              "NcharCharacterSetName",
		"network_type":                          "NetworkType",
		"option_group_name":                     "OptionGroupName",
		"performance_insights_kms_key_id":       "PerformanceInsightsKMSKeyId",
		"performance_insights_retention_period": "PerformanceInsightsRetentionPeriod",
		"port":                                  "Port",
		"preferred_backup_window":               "PreferredBackupWindow",
		"preferred_maintenance_window":          "PreferredMaintenanceWindow",
		"processor_features":                    "ProcessorFeatures",
		"promotion_tier":                        "PromotionTier",
		"publicly_accessible":                   "PubliclyAccessible",
		"replica_mode":                          "ReplicaMode",
		"role_arn":                              "RoleArn",
		"source_db_instance_identifier":         "SourceDBInstanceIdentifier",
		"source_region":                         "SourceRegion",
		"storage_encrypted":                     "StorageEncrypted",
		"storage_throughput":                    "StorageThroughput",
		"storage_type":                          "StorageType",
		"tags":                                  "Tags",
		"tde_credential_arn":                    "TdeCredentialArn",
		"tde_credential_password":               "TdeCredentialPassword",
		"timezone":                              "Timezone",
		"use_default_processor_features":        "UseDefaultProcessorFeatures",
		"value":                                 "Value",
		"vpc_security_groups":                   "VPCSecurityGroups",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/DBSnapshotIdentifier",
		"/properties/MasterUserPassword",
		"/properties/Port",
		"/properties/SourceDBInstanceIdentifier",
		"/properties/SourceRegion",
		"/properties/TdeCredentialPassword",
	})
	opts = opts.WithCreateTimeoutInMinutes(2160).WithDeleteTimeoutInMinutes(2160)

	opts = opts.WithUpdateTimeoutInMinutes(2160)

	v, err := NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
