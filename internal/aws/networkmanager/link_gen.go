// Code generated by generators/resource/main.go; DO NOT EDIT.

package networkmanager

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("awscc_networkmanager_link", linkResourceType)
}

// linkResourceType returns the Terraform awscc_networkmanager_link resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::NetworkManager::Link resource type.
func linkResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"bandwidth": {
			// Property: Bandwidth
			// CloudFormation resource type schema:
			// {
			//   "additionalProperties": false,
			//   "description": "The bandwidth for the link.",
			//   "properties": {
			//     "DownloadSpeed": {
			//       "description": "Download speed in Mbps.",
			//       "type": "integer"
			//     },
			//     "UploadSpeed": {
			//       "description": "Upload speed in Mbps.",
			//       "type": "integer"
			//     }
			//   },
			//   "type": "object"
			// }
			Description: "The bandwidth for the link.",
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"download_speed": {
						// Property: DownloadSpeed
						Description: "Download speed in Mbps.",
						Type:        types.NumberType,
						Optional:    true,
					},
					"upload_speed": {
						// Property: UploadSpeed
						Description: "Upload speed in Mbps.",
						Type:        types.NumberType,
						Optional:    true,
					},
				},
			),
			Required: true,
		},
		"description": {
			// Property: Description
			// CloudFormation resource type schema:
			// {
			//   "description": "The description of the link.",
			//   "type": "string"
			// }
			Description: "The description of the link.",
			Type:        types.StringType,
			Optional:    true,
		},
		"global_network_id": {
			// Property: GlobalNetworkId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the global network.",
			//   "type": "string"
			// }
			Description: "The ID of the global network.",
			Type:        types.StringType,
			Required:    true,
			// GlobalNetworkId is a force-new attribute.
		},
		"link_arn": {
			// Property: LinkArn
			// CloudFormation resource type schema:
			// {
			//   "description": "The Amazon Resource Name (ARN) of the link.",
			//   "type": "string"
			// }
			Description: "The Amazon Resource Name (ARN) of the link.",
			Type:        types.StringType,
			Computed:    true,
		},
		"link_id": {
			// Property: LinkId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the link.",
			//   "type": "string"
			// }
			Description: "The ID of the link.",
			Type:        types.StringType,
			Computed:    true,
		},
		"provider": {
			// Property: Provider
			// CloudFormation resource type schema:
			// {
			//   "description": "The provider of the link.",
			//   "type": "string"
			// }
			Description: "The provider of the link.",
			Type:        types.StringType,
			Optional:    true,
		},
		"site_id": {
			// Property: SiteId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the site",
			//   "type": "string"
			// }
			Description: "The ID of the site",
			Type:        types.StringType,
			Required:    true,
			// SiteId is a force-new attribute.
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "The tags for the link.",
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "A key-value pair to associate with a link resource.",
			//     "properties": {
			//       "Key": {
			//         "type": "string"
			//       },
			//       "Value": {
			//         "type": "string"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Description: "The tags for the link.",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Type:     types.StringType,
						Optional: true,
					},
					"value": {
						// Property: Value
						Type:     types.StringType,
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"type": {
			// Property: Type
			// CloudFormation resource type schema:
			// {
			//   "description": "The type of the link.",
			//   "type": "string"
			// }
			Description: "The type of the link.",
			Type:        types.StringType,
			Optional:    true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := tfsdk.Schema{
		Description: "The AWS::NetworkManager::Link type describes a link.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::NetworkManager::Link").WithTerraformTypeName("awscc_networkmanager_link").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_networkmanager_link", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
