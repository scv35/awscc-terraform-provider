// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package route53resolver

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_route53resolver_resolver_rule_association", resolverRuleAssociationDataSourceType)
}

// resolverRuleAssociationDataSourceType returns the Terraform awscc_route53resolver_resolver_rule_association data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::Route53Resolver::ResolverRuleAssociation resource type.
func resolverRuleAssociationDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			// {
			//   "description": "The name of an association between a Resolver rule and a VPC.",
			//   "type": "string"
			// }
			Description: "The name of an association between a Resolver rule and a VPC.",
			Type:        types.StringType,
			Computed:    true,
		},
		"resolver_rule_association_id": {
			// Property: ResolverRuleAssociationId
			// CloudFormation resource type schema:
			// {
			//   "description": "Primary Identifier for Resolver Rule Association",
			//   "type": "string"
			// }
			Description: "Primary Identifier for Resolver Rule Association",
			Type:        types.StringType,
			Computed:    true,
		},
		"resolver_rule_id": {
			// Property: ResolverRuleId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the Resolver rule that you associated with the VPC that is specified by VPCId.",
			//   "type": "string"
			// }
			Description: "The ID of the Resolver rule that you associated with the VPC that is specified by VPCId.",
			Type:        types.StringType,
			Computed:    true,
		},
		"vpc_id": {
			// Property: VPCId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the VPC that you associated the Resolver rule with.",
			//   "type": "string"
			// }
			Description: "The ID of the VPC that you associated the Resolver rule with.",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::Route53Resolver::ResolverRuleAssociation",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::Route53Resolver::ResolverRuleAssociation").WithTerraformTypeName("awscc_route53resolver_resolver_rule_association")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"name":                         "Name",
		"resolver_rule_association_id": "ResolverRuleAssociationId",
		"resolver_rule_id":             "ResolverRuleId",
		"vpc_id":                       "VPCId",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return singularDataSourceType, nil
}
