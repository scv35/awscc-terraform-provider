// Code generated by generators/resource/main.go; DO NOT EDIT.

package s3

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
	providertypes "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/types"
)

func init() {
	registry.AddResourceTypeFactory("aws_s3_storage_lens", storageLensResourceType)
}

// storageLensResourceType returns the Terraform aws_s3_storage_lens resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::S3::StorageLens resource type.
func storageLensResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"storage_lens_configuration": {
			// Property: StorageLensConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "description": "Specifies the details of Amazon S3 Storage Lens configuration.",
			     "properties": {
			       "AccountLevel": {
			         "additionalProperties": false,
			         "description": "Account-level metrics configurations.",
			         "properties": {
			           "ActivityMetrics": {
			             "additionalProperties": false,
			             "description": "Enables activity metrics.",
			             "properties": {
			               "IsEnabled": {
			                 "description": "Specifies whether activity metrics are enabled or disabled.",
			                 "type": "boolean"
			               }
			             },
			             "$ref": "#/definitions/ActivityMetrics",
			             "type": "object"
			           },
			           "BucketLevel": {
			             "additionalProperties": false,
			             "description": "Bucket-level metrics configurations.",
			             "properties": {
			               "ActivityMetrics": {
			                 "additionalProperties": false,
			                 "description": "Enables activity metrics.",
			                 "properties": {
			                   "IsEnabled": {
			                     "description": "Specifies whether activity metrics are enabled or disabled.",
			                     "type": "boolean"
			                   }
			                 },
			                 "$ref": "#/definitions/ActivityMetrics",
			                 "type": "object"
			               },
			               "PrefixLevel": {
			                 "additionalProperties": false,
			                 "description": "Prefix-level metrics configurations.",
			                 "properties": {
			                   "StorageMetrics": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "IsEnabled": {
			                         "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
			                         "type": "boolean"
			                       },
			                       "SelectionCriteria": {
			                         "additionalProperties": false,
			                         "description": "Selection criteria for prefix-level metrics.",
			                         "properties": {
			                           "Delimiter": {
			                             "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
			                             "type": "string"
			                           },
			                           "MaxDepth": {
			                             "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
			                             "type": "integer"
			                           },
			                           "MinStorageBytesPercentage": {
			                             "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
			                             "type": "number"
			                           }
			                         },
			                         "$ref": "#/definitions/SelectionCriteria",
			                         "type": "object"
			                       }
			                     },
			                     "$ref": "#/definitions/PrefixLevelStorageMetrics",
			                     "type": "object"
			                   }
			                 },
			                 "$ref": "#/definitions/PrefixLevel",
			                 "required": [
			                   "StorageMetrics"
			                 ],
			                 "type": "object"
			               }
			             },
			             "$ref": "#/definitions/BucketLevel",
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/AccountLevel",
			         "required": [
			           "BucketLevel"
			         ],
			         "type": "object"
			       },
			       "AwsOrg": {
			         "additionalProperties": false,
			         "description": "The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.",
			         "properties": {
			           "Arn": {
			             "description": "The Amazon Resource Name (ARN) of the specified resource.",
			             "$ref": "#/definitions/Arn",
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/AwsOrg",
			         "required": [
			           "Arn"
			         ],
			         "type": "object"
			       },
			       "DataExport": {
			         "additionalProperties": false,
			         "description": "Specifies how Amazon S3 Storage Lens metrics should be exported.",
			         "properties": {
			           "S3BucketDestination": {
			             "additionalProperties": false,
			             "description": "S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.",
			             "properties": {
			               "AccountId": {
			                 "description": "The AWS account ID that owns the destination S3 bucket.",
			                 "type": "string"
			               },
			               "Arn": {
			                 "description": "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.",
			                 "type": "string"
			               },
			               "Encryption": {
			                 "description": "Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).",
			                 "$ref": "#/definitions/Encryption",
			                 "type": "object"
			               },
			               "Format": {
			                 "description": "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.",
			                 "enum": [
			                   "CSV",
			                   "Parquet"
			                 ],
			                 "type": "string"
			               },
			               "OutputSchemaVersion": {
			                 "description": "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.",
			                 "enum": [
			                   "V_1"
			                 ],
			                 "type": "string"
			               },
			               "Prefix": {
			                 "description": "The prefix to use for Amazon S3 Storage Lens export.",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/S3BucketDestination",
			             "required": [
			               "OutputSchemaVersion",
			               "Format",
			               "AccountId",
			               "Arn"
			             ],
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/DataExport",
			         "required": [
			           "S3BucketDestination"
			         ],
			         "type": "object"
			       },
			       "Exclude": {
			         "additionalProperties": false,
			         "description": "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
			         "properties": {
			           "Buckets": {
			             "insertionOrder": false,
			             "items": {
			               "description": "The Amazon Resource Name (ARN) of the specified resource.",
			               "$ref": "#/definitions/Arn",
			               "type": "string"
			             },
			             "type": "array",
			             "uniqueItems": true
			           },
			           "Regions": {
			             "insertionOrder": false,
			             "items": {
			               "description": "An AWS Region.",
			               "type": "string"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "$ref": "#/definitions/BucketsAndRegions",
			         "type": "object"
			       },
			       "Id": {
			         "description": "The ID that identifies the Amazon S3 Storage Lens configuration.",
			         "maxLength": 64,
			         "minLength": 1,
			         "pattern": "",
			         "$ref": "#/definitions/Id",
			         "type": "string"
			       },
			       "Include": {
			         "additionalProperties": false,
			         "description": "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
			         "properties": {
			           "Buckets": {
			             "insertionOrder": false,
			             "items": {
			               "description": "The Amazon Resource Name (ARN) of the specified resource.",
			               "$ref": "#/definitions/Arn",
			               "type": "string"
			             },
			             "type": "array",
			             "uniqueItems": true
			           },
			           "Regions": {
			             "insertionOrder": false,
			             "items": {
			               "description": "An AWS Region.",
			               "type": "string"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "$ref": "#/definitions/BucketsAndRegions",
			         "type": "object"
			       },
			       "IsEnabled": {
			         "description": "Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.",
			         "type": "boolean"
			       },
			       "StorageLensArn": {
			         "description": "The ARN for the Amazon S3 Storage Lens configuration.",
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/StorageLensConfiguration",
			     "required": [
			       "Id",
			       "AccountLevel",
			       "IsEnabled"
			     ],
			     "type": "object"
			   }
			*/
			Description: "Specifies the details of Amazon S3 Storage Lens configuration.",
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"account_level": {
						// Property: AccountLevel
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "Account-level metrics configurations.",
						     "properties": {
						       "ActivityMetrics": {
						         "additionalProperties": false,
						         "description": "Enables activity metrics.",
						         "properties": {
						           "IsEnabled": {
						             "description": "Specifies whether activity metrics are enabled or disabled.",
						             "type": "boolean"
						           }
						         },
						         "$ref": "#/definitions/ActivityMetrics",
						         "type": "object"
						       },
						       "BucketLevel": {
						         "additionalProperties": false,
						         "description": "Bucket-level metrics configurations.",
						         "properties": {
						           "ActivityMetrics": {
						             "additionalProperties": false,
						             "description": "Enables activity metrics.",
						             "properties": {
						               "IsEnabled": {
						                 "description": "Specifies whether activity metrics are enabled or disabled.",
						                 "type": "boolean"
						               }
						             },
						             "$ref": "#/definitions/ActivityMetrics",
						             "type": "object"
						           },
						           "PrefixLevel": {
						             "additionalProperties": false,
						             "description": "Prefix-level metrics configurations.",
						             "properties": {
						               "StorageMetrics": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "IsEnabled": {
						                     "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
						                     "type": "boolean"
						                   },
						                   "SelectionCriteria": {
						                     "additionalProperties": false,
						                     "description": "Selection criteria for prefix-level metrics.",
						                     "properties": {
						                       "Delimiter": {
						                         "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
						                         "type": "string"
						                       },
						                       "MaxDepth": {
						                         "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
						                         "type": "integer"
						                       },
						                       "MinStorageBytesPercentage": {
						                         "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
						                         "type": "number"
						                       }
						                     },
						                     "$ref": "#/definitions/SelectionCriteria",
						                     "type": "object"
						                   }
						                 },
						                 "$ref": "#/definitions/PrefixLevelStorageMetrics",
						                 "type": "object"
						               }
						             },
						             "$ref": "#/definitions/PrefixLevel",
						             "required": [
						               "StorageMetrics"
						             ],
						             "type": "object"
						           }
						         },
						         "$ref": "#/definitions/BucketLevel",
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/AccountLevel",
						     "required": [
						       "BucketLevel"
						     ],
						     "type": "object"
						   }
						*/
						Description: "Account-level metrics configurations.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"activity_metrics": {
									// Property: ActivityMetrics
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "Enables activity metrics.",
									     "properties": {
									       "IsEnabled": {
									         "description": "Specifies whether activity metrics are enabled or disabled.",
									         "type": "boolean"
									       }
									     },
									     "$ref": "#/definitions/ActivityMetrics",
									     "type": "object"
									   }
									*/
									Description: "Enables activity metrics.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"is_enabled": {
												// Property: IsEnabled
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Specifies whether activity metrics are enabled or disabled.",
												     "type": "boolean"
												   }
												*/
												Description: "Specifies whether activity metrics are enabled or disabled.",
												Type:        types.BoolType,
												Optional:    true,
											},
										},
									),
									Optional: true,
								},
								"bucket_level": {
									// Property: BucketLevel
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "Bucket-level metrics configurations.",
									     "properties": {
									       "ActivityMetrics": {
									         "additionalProperties": false,
									         "description": "Enables activity metrics.",
									         "properties": {
									           "IsEnabled": {
									             "description": "Specifies whether activity metrics are enabled or disabled.",
									             "type": "boolean"
									           }
									         },
									         "$ref": "#/definitions/ActivityMetrics",
									         "type": "object"
									       },
									       "PrefixLevel": {
									         "additionalProperties": false,
									         "description": "Prefix-level metrics configurations.",
									         "properties": {
									           "StorageMetrics": {
									             "additionalProperties": false,
									             "properties": {
									               "IsEnabled": {
									                 "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
									                 "type": "boolean"
									               },
									               "SelectionCriteria": {
									                 "additionalProperties": false,
									                 "description": "Selection criteria for prefix-level metrics.",
									                 "properties": {
									                   "Delimiter": {
									                     "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
									                     "type": "string"
									                   },
									                   "MaxDepth": {
									                     "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
									                     "type": "integer"
									                   },
									                   "MinStorageBytesPercentage": {
									                     "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
									                     "type": "number"
									                   }
									                 },
									                 "$ref": "#/definitions/SelectionCriteria",
									                 "type": "object"
									               }
									             },
									             "$ref": "#/definitions/PrefixLevelStorageMetrics",
									             "type": "object"
									           }
									         },
									         "$ref": "#/definitions/PrefixLevel",
									         "required": [
									           "StorageMetrics"
									         ],
									         "type": "object"
									       }
									     },
									     "$ref": "#/definitions/BucketLevel",
									     "type": "object"
									   }
									*/
									Description: "Bucket-level metrics configurations.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"activity_metrics": {
												// Property: ActivityMetrics
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "Enables activity metrics.",
												     "properties": {
												       "IsEnabled": {
												         "description": "Specifies whether activity metrics are enabled or disabled.",
												         "type": "boolean"
												       }
												     },
												     "$ref": "#/definitions/ActivityMetrics",
												     "type": "object"
												   }
												*/
												Description: "Enables activity metrics.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"is_enabled": {
															// Property: IsEnabled
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Specifies whether activity metrics are enabled or disabled.",
															     "type": "boolean"
															   }
															*/
															Description: "Specifies whether activity metrics are enabled or disabled.",
															Type:        types.BoolType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"prefix_level": {
												// Property: PrefixLevel
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "Prefix-level metrics configurations.",
												     "properties": {
												       "StorageMetrics": {
												         "additionalProperties": false,
												         "properties": {
												           "IsEnabled": {
												             "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
												             "type": "boolean"
												           },
												           "SelectionCriteria": {
												             "additionalProperties": false,
												             "description": "Selection criteria for prefix-level metrics.",
												             "properties": {
												               "Delimiter": {
												                 "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
												                 "type": "string"
												               },
												               "MaxDepth": {
												                 "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
												                 "type": "integer"
												               },
												               "MinStorageBytesPercentage": {
												                 "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
												                 "type": "number"
												               }
												             },
												             "$ref": "#/definitions/SelectionCriteria",
												             "type": "object"
												           }
												         },
												         "$ref": "#/definitions/PrefixLevelStorageMetrics",
												         "type": "object"
												       }
												     },
												     "$ref": "#/definitions/PrefixLevel",
												     "required": [
												       "StorageMetrics"
												     ],
												     "type": "object"
												   }
												*/
												Description: "Prefix-level metrics configurations.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"storage_metrics": {
															// Property: StorageMetrics
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "IsEnabled": {
															         "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
															         "type": "boolean"
															       },
															       "SelectionCriteria": {
															         "additionalProperties": false,
															         "description": "Selection criteria for prefix-level metrics.",
															         "properties": {
															           "Delimiter": {
															             "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
															             "type": "string"
															           },
															           "MaxDepth": {
															             "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
															             "type": "integer"
															           },
															           "MinStorageBytesPercentage": {
															             "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
															             "type": "number"
															           }
															         },
															         "$ref": "#/definitions/SelectionCriteria",
															         "type": "object"
															       }
															     },
															     "$ref": "#/definitions/PrefixLevelStorageMetrics",
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"is_enabled": {
																		// Property: IsEnabled
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "Specifies whether prefix-level storage metrics are enabled or disabled.",
																		     "type": "boolean"
																		   }
																		*/
																		Description: "Specifies whether prefix-level storage metrics are enabled or disabled.",
																		Type:        types.BoolType,
																		Optional:    true,
																	},
																	"selection_criteria": {
																		// Property: SelectionCriteria
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "additionalProperties": false,
																		     "description": "Selection criteria for prefix-level metrics.",
																		     "properties": {
																		       "Delimiter": {
																		         "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
																		         "type": "string"
																		       },
																		       "MaxDepth": {
																		         "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
																		         "type": "integer"
																		       },
																		       "MinStorageBytesPercentage": {
																		         "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
																		         "type": "number"
																		       }
																		     },
																		     "$ref": "#/definitions/SelectionCriteria",
																		     "type": "object"
																		   }
																		*/
																		Description: "Selection criteria for prefix-level metrics.",
																		Attributes: schema.SingleNestedAttributes(
																			map[string]schema.Attribute{
																				"delimiter": {
																					// Property: Delimiter
																					// CloudFormation resource type schema:
																					/*
																					   {
																					     "description": "Delimiter to divide S3 key into hierarchy of prefixes.",
																					     "type": "string"
																					   }
																					*/
																					Description: "Delimiter to divide S3 key into hierarchy of prefixes.",
																					Type:        types.StringType,
																					Optional:    true,
																				},
																				"max_depth": {
																					// Property: MaxDepth
																					// CloudFormation resource type schema:
																					/*
																					   {
																					     "description": "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
																					     "type": "integer"
																					   }
																					*/
																					Description: "Max depth of prefixes of S3 key that Amazon S3 Storage Lens will analyze.",
																					Type:        types.NumberType,
																					Optional:    true,
																				},
																				"min_storage_bytes_percentage": {
																					// Property: MinStorageBytesPercentage
																					// CloudFormation resource type schema:
																					/*
																					   {
																					     "description": "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
																					     "type": "number"
																					   }
																					*/
																					Description: "The minimum storage bytes threshold for the prefixes to be included in the analysis.",
																					Type:        types.NumberType,
																					Optional:    true,
																				},
																			},
																		),
																		Optional: true,
																	},
																},
															),
															Required: true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Required: true,
								},
							},
						),
						Required: true,
					},
					"aws_org": {
						// Property: AwsOrg
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.",
						     "properties": {
						       "Arn": {
						         "description": "The Amazon Resource Name (ARN) of the specified resource.",
						         "$ref": "#/definitions/Arn",
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/AwsOrg",
						     "required": [
						       "Arn"
						     ],
						     "type": "object"
						   }
						*/
						Description: "The AWS Organizations ARN to use in the Amazon S3 Storage Lens configuration.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"arn": {
									// Property: Arn
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "The Amazon Resource Name (ARN) of the specified resource.",
									     "$ref": "#/definitions/Arn",
									     "type": "string"
									   }
									*/
									Description: "The Amazon Resource Name (ARN) of the specified resource.",
									Type:        types.StringType,
									Required:    true,
								},
							},
						),
						Optional: true,
					},
					"data_export": {
						// Property: DataExport
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "Specifies how Amazon S3 Storage Lens metrics should be exported.",
						     "properties": {
						       "S3BucketDestination": {
						         "additionalProperties": false,
						         "description": "S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.",
						         "properties": {
						           "AccountId": {
						             "description": "The AWS account ID that owns the destination S3 bucket.",
						             "type": "string"
						           },
						           "Arn": {
						             "description": "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.",
						             "type": "string"
						           },
						           "Encryption": {
						             "description": "Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).",
						             "$ref": "#/definitions/Encryption",
						             "type": "object"
						           },
						           "Format": {
						             "description": "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.",
						             "enum": [
						               "CSV",
						               "Parquet"
						             ],
						             "type": "string"
						           },
						           "OutputSchemaVersion": {
						             "description": "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.",
						             "enum": [
						               "V_1"
						             ],
						             "type": "string"
						           },
						           "Prefix": {
						             "description": "The prefix to use for Amazon S3 Storage Lens export.",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/S3BucketDestination",
						         "required": [
						           "OutputSchemaVersion",
						           "Format",
						           "AccountId",
						           "Arn"
						         ],
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/DataExport",
						     "required": [
						       "S3BucketDestination"
						     ],
						     "type": "object"
						   }
						*/
						Description: "Specifies how Amazon S3 Storage Lens metrics should be exported.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"s3_bucket_destination": {
									// Property: S3BucketDestination
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.",
									     "properties": {
									       "AccountId": {
									         "description": "The AWS account ID that owns the destination S3 bucket.",
									         "type": "string"
									       },
									       "Arn": {
									         "description": "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.",
									         "type": "string"
									       },
									       "Encryption": {
									         "description": "Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).",
									         "$ref": "#/definitions/Encryption",
									         "type": "object"
									       },
									       "Format": {
									         "description": "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.",
									         "enum": [
									           "CSV",
									           "Parquet"
									         ],
									         "type": "string"
									       },
									       "OutputSchemaVersion": {
									         "description": "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.",
									         "enum": [
									           "V_1"
									         ],
									         "type": "string"
									       },
									       "Prefix": {
									         "description": "The prefix to use for Amazon S3 Storage Lens export.",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/S3BucketDestination",
									     "required": [
									       "OutputSchemaVersion",
									       "Format",
									       "AccountId",
									       "Arn"
									     ],
									     "type": "object"
									   }
									*/
									Description: "S3 bucket destination settings for the Amazon S3 Storage Lens metrics export.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"account_id": {
												// Property: AccountId
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The AWS account ID that owns the destination S3 bucket.",
												     "type": "string"
												   }
												*/
												Description: "The AWS account ID that owns the destination S3 bucket.",
												Type:        types.StringType,
												Required:    true,
											},
											"arn": {
												// Property: Arn
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.",
												     "type": "string"
												   }
												*/
												Description: "The ARN of the bucket to which Amazon S3 Storage Lens exports will be placed.",
												Type:        types.StringType,
												Required:    true,
											},
											"encryption": {
												// Property: Encryption
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).",
												     "$ref": "#/definitions/Encryption",
												     "type": "object"
												   }
												*/
												Description: "Configures the server-side encryption for Amazon S3 Storage Lens report files with either S3-managed keys (SSE-S3) or KMS-managed keys (SSE-KMS).",
												Type:        types.MapType{ElemType: types.StringType},
												Optional:    true,
											},
											"format": {
												// Property: Format
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.",
												     "enum": [
												       "CSV",
												       "Parquet"
												     ],
												     "type": "string"
												   }
												*/
												Description: "Specifies the file format to use when exporting Amazon S3 Storage Lens metrics export.",
												Type:        types.StringType,
												Required:    true,
											},
											"output_schema_version": {
												// Property: OutputSchemaVersion
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.",
												     "enum": [
												       "V_1"
												     ],
												     "type": "string"
												   }
												*/
												Description: "The version of the output schema to use when exporting Amazon S3 Storage Lens metrics.",
												Type:        types.StringType,
												Required:    true,
											},
											"prefix": {
												// Property: Prefix
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The prefix to use for Amazon S3 Storage Lens export.",
												     "type": "string"
												   }
												*/
												Description: "The prefix to use for Amazon S3 Storage Lens export.",
												Type:        types.StringType,
												Optional:    true,
											},
										},
									),
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"exclude": {
						// Property: Exclude
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
						     "properties": {
						       "Buckets": {
						         "insertionOrder": false,
						         "items": {
						           "description": "The Amazon Resource Name (ARN) of the specified resource.",
						           "$ref": "#/definitions/Arn",
						           "type": "string"
						         },
						         "type": "array",
						         "uniqueItems": true
						       },
						       "Regions": {
						         "insertionOrder": false,
						         "items": {
						           "description": "An AWS Region.",
						           "type": "string"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "$ref": "#/definitions/BucketsAndRegions",
						     "type": "object"
						   }
						*/
						Description: "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"buckets": {
									// Property: Buckets
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "description": "The Amazon Resource Name (ARN) of the specified resource.",
									       "$ref": "#/definitions/Arn",
									       "type": "string"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
								"regions": {
									// Property: Regions
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "description": "An AWS Region.",
									       "type": "string"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"id": {
						// Property: Id
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The ID that identifies the Amazon S3 Storage Lens configuration.",
						     "maxLength": 64,
						     "minLength": 1,
						     "pattern": "",
						     "$ref": "#/definitions/Id",
						     "type": "string"
						   }
						*/
						Description: "The ID that identifies the Amazon S3 Storage Lens configuration.",
						Type:        types.StringType,
						Required:    true,
						// Id is a force-new attribute.
					},
					"include": {
						// Property: Include
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
						     "properties": {
						       "Buckets": {
						         "insertionOrder": false,
						         "items": {
						           "description": "The Amazon Resource Name (ARN) of the specified resource.",
						           "$ref": "#/definitions/Arn",
						           "type": "string"
						         },
						         "type": "array",
						         "uniqueItems": true
						       },
						       "Regions": {
						         "insertionOrder": false,
						         "items": {
						           "description": "An AWS Region.",
						           "type": "string"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "$ref": "#/definitions/BucketsAndRegions",
						     "type": "object"
						   }
						*/
						Description: "S3 buckets and Regions to include/exclude in the Amazon S3 Storage Lens configuration.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"buckets": {
									// Property: Buckets
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "description": "The Amazon Resource Name (ARN) of the specified resource.",
									       "$ref": "#/definitions/Arn",
									       "type": "string"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
								"regions": {
									// Property: Regions
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "description": "An AWS Region.",
									       "type": "string"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"is_enabled": {
						// Property: IsEnabled
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.",
						     "type": "boolean"
						   }
						*/
						Description: "Specifies whether the Amazon S3 Storage Lens configuration is enabled or disabled.",
						Type:        types.BoolType,
						Required:    true,
					},
					"storage_lens_arn": {
						// Property: StorageLensArn
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The ARN for the Amazon S3 Storage Lens configuration.",
						     "type": "string"
						   }
						*/
						Description: "The ARN for the Amazon S3 Storage Lens configuration.",
						Type:        types.StringType,
						Computed:    true,
					},
				},
			),
			Required: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration.",
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "Key": {
			           "maxLength": 127,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         },
			         "Value": {
			           "maxLength": 255,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/Tag",
			       "required": [
			         "Key",
			         "Value"
			       ],
			       "type": "object"
			     },
			     "maxItems": 50,
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			Description: "A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration.",
			Attributes: providertypes.SetNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 127,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 255,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
				providertypes.SetNestedAttributesOptions{
					MaxItems: 50,
				},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "The AWS::S3::StorageLens resource is an Amazon S3 resource type that you can use to create Storage Lens configurations.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::S3::StorageLens").WithTerraformTypeName("aws_s3_storage_lens").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_s3_storage_lens", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
