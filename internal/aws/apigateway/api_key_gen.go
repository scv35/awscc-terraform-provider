// Code generated by generators/resource/main.go; DO NOT EDIT.

package apigateway

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_apigateway_api_key", apiKeyResourceType)
}

// apiKeyResourceType returns the Terraform aws_apigateway_api_key resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::ApiGateway::ApiKey resource type.
func apiKeyResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"api_key_id": {
			// Property: APIKeyId
			// CloudFormation resource type schema:
			// {
			//   "description": "A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs ",
			//   "type": "string"
			// }
			Description: "A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs ",
			Type:        types.StringType,
			Computed:    true,
		},
		"customer_id": {
			// Property: CustomerId
			// CloudFormation resource type schema:
			// {
			//   "description": "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.",
			//   "type": "string"
			// }
			Description: "An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.",
			Type:        types.StringType,
			Optional:    true,
		},
		"description": {
			// Property: Description
			// CloudFormation resource type schema:
			// {
			//   "description": "A description of the purpose of the API key.",
			//   "type": "string"
			// }
			Description: "A description of the purpose of the API key.",
			Type:        types.StringType,
			Optional:    true,
		},
		"enabled": {
			// Property: Enabled
			// CloudFormation resource type schema:
			// {
			//   "description": "Indicates whether the API key can be used by clients.",
			//   "type": "boolean"
			// }
			Description: "Indicates whether the API key can be used by clients.",
			Type:        types.BoolType,
			Optional:    true,
		},
		"generate_distinct_id": {
			// Property: GenerateDistinctId
			// CloudFormation resource type schema:
			// {
			//   "description": "Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.",
			//   "type": "boolean"
			// }
			Description: "Specifies whether the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.",
			Type:        types.BoolType,
			Optional:    true,
			Computed:    true,
			// GenerateDistinctId is a force-new attribute.
			// GenerateDistinctId is a write-only attribute.
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			// {
			//   "description": "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name.",
			//   "type": "string"
			// }
			Description: "A name for the API key. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the API key name.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			// Name is a force-new attribute.
		},
		"stage_keys": {
			// Property: StageKeys
			// CloudFormation resource type schema:
			// {
			//   "description": "A list of stages to associate with this API key.",
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "RestApiId": {
			//         "description": "The ID of a RestApi resource that includes the stage with which you want to associate the API key.",
			//         "type": "string"
			//       },
			//       "StageName": {
			//         "description": "The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property. ",
			//         "type": "string"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array",
			//   "uniqueItems": true
			// }
			Description: "A list of stages to associate with this API key.",
			// Ordered set.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"rest_api_id": {
						// Property: RestApiId
						// CloudFormation resource type schema:
						// {
						//   "description": "The ID of a RestApi resource that includes the stage with which you want to associate the API key.",
						//   "type": "string"
						// }
						Description: "The ID of a RestApi resource that includes the stage with which you want to associate the API key.",
						Type:        types.StringType,
						Optional:    true,
					},
					"stage_name": {
						// Property: StageName
						// CloudFormation resource type schema:
						// {
						//   "description": "The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property. ",
						//   "type": "string"
						// }
						Description: "The name of the stage with which to associate the API key. The stage must be included in the RestApi resource that you specified in the RestApiId property. ",
						Type:        types.StringType,
						Optional:    true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "An array of arbitrary tags (key-value pairs) to associate with the API key.",
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Key": {
			//         "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
			//         "maxLength": 128,
			//         "minLength": 1,
			//         "type": "string"
			//       },
			//       "Value": {
			//         "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			//         "maxLength": 256,
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Value",
			//       "Key"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array",
			//   "uniqueItems": false
			// }
			Description: "An array of arbitrary tags (key-value pairs) to associate with the API key.",
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						// {
						//   "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						//   "maxLength": 128,
						//   "minLength": 1,
						//   "type": "string"
						// }
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Type:        types.StringType,
						Required:    true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						// {
						//   "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						//   "maxLength": 256,
						//   "type": "string"
						// }
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"value": {
			// Property: Value
			// CloudFormation resource type schema:
			// {
			//   "description": "The value of the API key. Must be at least 20 characters long.",
			//   "type": "string"
			// }
			Description: "The value of the API key. Must be at least 20 characters long.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			// Value is a force-new attribute.
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::ApiGateway::ApiKey",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::ApiGateway::ApiKey").WithTerraformTypeName("aws_apigateway_api_key").WithTerraformSchema(schema)

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/GenerateDistinctId",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_apigateway_api_key", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
