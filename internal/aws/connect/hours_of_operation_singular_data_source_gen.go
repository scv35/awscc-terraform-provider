// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package connect

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_connect_hours_of_operation", hoursOfOperationDataSourceType)
}

// hoursOfOperationDataSourceType returns the Terraform awscc_connect_hours_of_operation data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::Connect::HoursOfOperation resource type.
func hoursOfOperationDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"config": {
			// Property: Config
			// CloudFormation resource type schema:
			// {
			//   "description": "Configuration information for the hours of operation: day, start time, and end time.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "Contains information about the hours of operation.",
			//     "properties": {
			//       "Day": {
			//         "description": "The day that the hours of operation applies to.",
			//         "enum": [
			//           "SUNDAY",
			//           "MONDAY",
			//           "TUESDAY",
			//           "WEDNESDAY",
			//           "THURSDAY",
			//           "FRIDAY",
			//           "SATURDAY"
			//         ],
			//         "type": "string"
			//       },
			//       "EndTime": {
			//         "additionalProperties": false,
			//         "description": "The end time that your contact center closes.",
			//         "properties": {
			//           "Hours": {
			//             "description": "The hours.",
			//             "maximum": 23,
			//             "minimum": 0,
			//             "type": "integer"
			//           },
			//           "Minutes": {
			//             "description": "The minutes.",
			//             "maximum": 59,
			//             "minimum": 0,
			//             "type": "integer"
			//           }
			//         },
			//         "required": [
			//           "Hours",
			//           "Minutes"
			//         ],
			//         "type": "object"
			//       },
			//       "StartTime": {
			//         "additionalProperties": false,
			//         "description": "The start time that your contact center opens.",
			//         "properties": {
			//           "Hours": {
			//             "description": "The hours.",
			//             "maximum": 23,
			//             "minimum": 0,
			//             "type": "integer"
			//           },
			//           "Minutes": {
			//             "description": "The minutes.",
			//             "maximum": 59,
			//             "minimum": 0,
			//             "type": "integer"
			//           }
			//         },
			//         "required": [
			//           "Hours",
			//           "Minutes"
			//         ],
			//         "type": "object"
			//       }
			//     },
			//     "required": [
			//       "Day",
			//       "StartTime",
			//       "EndTime"
			//     ],
			//     "type": "object"
			//   },
			//   "maxItems": 100,
			//   "type": "array",
			//   "uniqueItems": true
			// }
			Description: "Configuration information for the hours of operation: day, start time, and end time.",
			Attributes: tfsdk.SetNestedAttributes(
				map[string]tfsdk.Attribute{
					"day": {
						// Property: Day
						Description: "The day that the hours of operation applies to.",
						Type:        types.StringType,
						Computed:    true,
					},
					"end_time": {
						// Property: EndTime
						Description: "The end time that your contact center closes.",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"hours": {
									// Property: Hours
									Description: "The hours.",
									Type:        types.NumberType,
									Computed:    true,
								},
								"minutes": {
									// Property: Minutes
									Description: "The minutes.",
									Type:        types.NumberType,
									Computed:    true,
								},
							},
						),
						Computed: true,
					},
					"start_time": {
						// Property: StartTime
						Description: "The start time that your contact center opens.",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"hours": {
									// Property: Hours
									Description: "The hours.",
									Type:        types.NumberType,
									Computed:    true,
								},
								"minutes": {
									// Property: Minutes
									Description: "The minutes.",
									Type:        types.NumberType,
									Computed:    true,
								},
							},
						),
						Computed: true,
					},
				},
				tfsdk.SetNestedAttributesOptions{},
			),
			Computed: true,
		},
		"description": {
			// Property: Description
			// CloudFormation resource type schema:
			// {
			//   "description": "The description of the hours of operation.",
			//   "maxLength": 250,
			//   "minLength": 1,
			//   "type": "string"
			// }
			Description: "The description of the hours of operation.",
			Type:        types.StringType,
			Computed:    true,
		},
		"hours_of_operation_arn": {
			// Property: HoursOfOperationArn
			// CloudFormation resource type schema:
			// {
			//   "description": "The Amazon Resource Name (ARN) for the hours of operation.",
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The Amazon Resource Name (ARN) for the hours of operation.",
			Type:        types.StringType,
			Computed:    true,
		},
		"instance_arn": {
			// Property: InstanceArn
			// CloudFormation resource type schema:
			// {
			//   "description": "The identifier of the Amazon Connect instance.",
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The identifier of the Amazon Connect instance.",
			Type:        types.StringType,
			Computed:    true,
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			// {
			//   "description": "The name of the hours of operation.",
			//   "maxLength": 127,
			//   "minLength": 1,
			//   "type": "string"
			// }
			Description: "The name of the hours of operation.",
			Type:        types.StringType,
			Computed:    true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "One or more tags.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "A key-value pair to associate with a resource.",
			//     "properties": {
			//       "Key": {
			//         "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			//         "maxLength": 128,
			//         "minLength": 1,
			//         "pattern": "",
			//         "type": "string"
			//       },
			//       "Value": {
			//         "description": "The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			//         "maxLength": 256,
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Key",
			//       "Value"
			//     ],
			//     "type": "object"
			//   },
			//   "maxItems": 50,
			//   "type": "array",
			//   "uniqueItems": true
			// }
			Description: "One or more tags.",
			Attributes: tfsdk.SetNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Computed:    true,
					},
					"value": {
						// Property: Value
						Description: "The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Computed:    true,
					},
				},
				tfsdk.SetNestedAttributesOptions{},
			),
			Computed: true,
		},
		"time_zone": {
			// Property: TimeZone
			// CloudFormation resource type schema:
			// {
			//   "description": "The time zone of the hours of operation.",
			//   "type": "string"
			// }
			Description: "The time zone of the hours of operation.",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::Connect::HoursOfOperation",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::Connect::HoursOfOperation").WithTerraformTypeName("awscc_connect_hours_of_operation")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"config":                 "Config",
		"day":                    "Day",
		"description":            "Description",
		"end_time":               "EndTime",
		"hours":                  "Hours",
		"hours_of_operation_arn": "HoursOfOperationArn",
		"instance_arn":           "InstanceArn",
		"key":                    "Key",
		"minutes":                "Minutes",
		"name":                   "Name",
		"start_time":             "StartTime",
		"tags":                   "Tags",
		"time_zone":              "TimeZone",
		"value":                  "Value",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return singularDataSourceType, nil
}
