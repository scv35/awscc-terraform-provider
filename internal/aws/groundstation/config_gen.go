// Code generated by generators/resource/main.go; DO NOT EDIT.

package groundstation

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_groundstation_config", config)
}

// config returns the Terraform aws_groundstation_config resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::GroundStation::Config resource type.
func config(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"arn": {
			// Property: Arn
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"config_data": {
			// Property: ConfigData
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "AntennaDownlinkConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "SpectrumConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "Bandwidth": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Units": {
			                     "enum": [
			                       "GHz",
			                       "MHz",
			                       "kHz"
			                     ],
			                     "$ref": "#/definitions/BandwidthUnits",
			                     "type": "string"
			                   },
			                   "Value": {
			                     "type": "number"
			                   }
			                 },
			                 "$ref": "#/definitions/FrequencyBandwidth",
			                 "type": "object"
			               },
			               "CenterFrequency": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Units": {
			                     "enum": [
			                       "GHz",
			                       "MHz",
			                       "kHz"
			                     ],
			                     "$ref": "#/definitions/FrequencyUnits",
			                     "type": "string"
			                   },
			                   "Value": {
			                     "type": "number"
			                   }
			                 },
			                 "$ref": "#/definitions/Frequency",
			                 "type": "object"
			               },
			               "Polarization": {
			                 "enum": [
			                   "LEFT_HAND",
			                   "RIGHT_HAND",
			                   "NONE"
			                 ],
			                 "$ref": "#/definitions/Polarization",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/SpectrumConfig",
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/AntennaDownlinkConfig",
			         "type": "object"
			       },
			       "AntennaDownlinkDemodDecodeConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "DecodeConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "UnvalidatedJSON": {
			                 "pattern": "",
			                 "$ref": "#/definitions/JsonString",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/DecodeConfig",
			             "type": "object"
			           },
			           "DemodulationConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "UnvalidatedJSON": {
			                 "pattern": "",
			                 "$ref": "#/definitions/JsonString",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/DemodulationConfig",
			             "type": "object"
			           },
			           "SpectrumConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "Bandwidth": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Units": {
			                     "enum": [
			                       "GHz",
			                       "MHz",
			                       "kHz"
			                     ],
			                     "$ref": "#/definitions/BandwidthUnits",
			                     "type": "string"
			                   },
			                   "Value": {
			                     "type": "number"
			                   }
			                 },
			                 "$ref": "#/definitions/FrequencyBandwidth",
			                 "type": "object"
			               },
			               "CenterFrequency": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Units": {
			                     "enum": [
			                       "GHz",
			                       "MHz",
			                       "kHz"
			                     ],
			                     "$ref": "#/definitions/FrequencyUnits",
			                     "type": "string"
			                   },
			                   "Value": {
			                     "type": "number"
			                   }
			                 },
			                 "$ref": "#/definitions/Frequency",
			                 "type": "object"
			               },
			               "Polarization": {
			                 "enum": [
			                   "LEFT_HAND",
			                   "RIGHT_HAND",
			                   "NONE"
			                 ],
			                 "$ref": "#/definitions/Polarization",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/SpectrumConfig",
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/AntennaDownlinkDemodDecodeConfig",
			         "type": "object"
			       },
			       "AntennaUplinkConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "SpectrumConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "CenterFrequency": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Units": {
			                     "enum": [
			                       "GHz",
			                       "MHz",
			                       "kHz"
			                     ],
			                     "$ref": "#/definitions/FrequencyUnits",
			                     "type": "string"
			                   },
			                   "Value": {
			                     "type": "number"
			                   }
			                 },
			                 "$ref": "#/definitions/Frequency",
			                 "type": "object"
			               },
			               "Polarization": {
			                 "enum": [
			                   "LEFT_HAND",
			                   "RIGHT_HAND",
			                   "NONE"
			                 ],
			                 "$ref": "#/definitions/Polarization",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/UplinkSpectrumConfig",
			             "type": "object"
			           },
			           "TargetEirp": {
			             "additionalProperties": false,
			             "properties": {
			               "Units": {
			                 "enum": [
			                   "dBW"
			                 ],
			                 "$ref": "#/definitions/EirpUnits",
			                 "type": "string"
			               },
			               "Value": {
			                 "type": "number"
			               }
			             },
			             "$ref": "#/definitions/Eirp",
			             "type": "object"
			           },
			           "TransmitDisabled": {
			             "type": "boolean"
			           }
			         },
			         "$ref": "#/definitions/AntennaUplinkConfig",
			         "type": "object"
			       },
			       "DataflowEndpointConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "DataflowEndpointName": {
			             "type": "string"
			           },
			           "DataflowEndpointRegion": {
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/DataflowEndpointConfig",
			         "type": "object"
			       },
			       "S3RecordingConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketArn": {
			             "$ref": "#/definitions/BucketArn",
			             "type": "string"
			           },
			           "Prefix": {
			             "pattern": "",
			             "$ref": "#/definitions/S3KeyPrefix",
			             "type": "string"
			           },
			           "RoleArn": {
			             "$ref": "#/definitions/RoleArn",
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/S3RecordingConfig",
			         "type": "object"
			       },
			       "TrackingConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "Autotrack": {
			             "enum": [
			               "REQUIRED",
			               "PREFERRED",
			               "REMOVED"
			             ],
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/TrackingConfig",
			         "type": "object"
			       },
			       "UplinkEchoConfig": {
			         "additionalProperties": false,
			         "properties": {
			           "AntennaUplinkConfigArn": {
			             "type": "string"
			           },
			           "Enabled": {
			             "type": "boolean"
			           }
			         },
			         "$ref": "#/definitions/UplinkEchoConfig",
			         "type": "object"
			       }
			     },
			     "$ref": "#/definitions/ConfigData",
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"antenna_downlink_config": {
						// Property: AntennaDownlinkConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "SpectrumConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "Bandwidth": {
						             "additionalProperties": false,
						             "properties": {
						               "Units": {
						                 "enum": [
						                   "GHz",
						                   "MHz",
						                   "kHz"
						                 ],
						                 "$ref": "#/definitions/BandwidthUnits",
						                 "type": "string"
						               },
						               "Value": {
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/FrequencyBandwidth",
						             "type": "object"
						           },
						           "CenterFrequency": {
						             "additionalProperties": false,
						             "properties": {
						               "Units": {
						                 "enum": [
						                   "GHz",
						                   "MHz",
						                   "kHz"
						                 ],
						                 "$ref": "#/definitions/FrequencyUnits",
						                 "type": "string"
						               },
						               "Value": {
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/Frequency",
						             "type": "object"
						           },
						           "Polarization": {
						             "enum": [
						               "LEFT_HAND",
						               "RIGHT_HAND",
						               "NONE"
						             ],
						             "$ref": "#/definitions/Polarization",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/SpectrumConfig",
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/AntennaDownlinkConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"spectrum_config": {
									// Property: SpectrumConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Bandwidth": {
									         "additionalProperties": false,
									         "properties": {
									           "Units": {
									             "enum": [
									               "GHz",
									               "MHz",
									               "kHz"
									             ],
									             "$ref": "#/definitions/BandwidthUnits",
									             "type": "string"
									           },
									           "Value": {
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/FrequencyBandwidth",
									         "type": "object"
									       },
									       "CenterFrequency": {
									         "additionalProperties": false,
									         "properties": {
									           "Units": {
									             "enum": [
									               "GHz",
									               "MHz",
									               "kHz"
									             ],
									             "$ref": "#/definitions/FrequencyUnits",
									             "type": "string"
									           },
									           "Value": {
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/Frequency",
									         "type": "object"
									       },
									       "Polarization": {
									         "enum": [
									           "LEFT_HAND",
									           "RIGHT_HAND",
									           "NONE"
									         ],
									         "$ref": "#/definitions/Polarization",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/SpectrumConfig",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"bandwidth": {
												// Property: Bandwidth
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "Units": {
												         "enum": [
												           "GHz",
												           "MHz",
												           "kHz"
												         ],
												         "$ref": "#/definitions/BandwidthUnits",
												         "type": "string"
												       },
												       "Value": {
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/FrequencyBandwidth",
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"units": {
															// Property: Units
															// CloudFormation resource type schema:
															/*
															   {
															     "enum": [
															       "GHz",
															       "MHz",
															       "kHz"
															     ],
															     "$ref": "#/definitions/BandwidthUnits",
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"center_frequency": {
												// Property: CenterFrequency
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "Units": {
												         "enum": [
												           "GHz",
												           "MHz",
												           "kHz"
												         ],
												         "$ref": "#/definitions/FrequencyUnits",
												         "type": "string"
												       },
												       "Value": {
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/Frequency",
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"units": {
															// Property: Units
															// CloudFormation resource type schema:
															/*
															   {
															     "enum": [
															       "GHz",
															       "MHz",
															       "kHz"
															     ],
															     "$ref": "#/definitions/FrequencyUnits",
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"polarization": {
												// Property: Polarization
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "LEFT_HAND",
												       "RIGHT_HAND",
												       "NONE"
												     ],
												     "$ref": "#/definitions/Polarization",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"antenna_downlink_demod_decode_config": {
						// Property: AntennaDownlinkDemodDecodeConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DecodeConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "UnvalidatedJSON": {
						             "pattern": "",
						             "$ref": "#/definitions/JsonString",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/DecodeConfig",
						         "type": "object"
						       },
						       "DemodulationConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "UnvalidatedJSON": {
						             "pattern": "",
						             "$ref": "#/definitions/JsonString",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/DemodulationConfig",
						         "type": "object"
						       },
						       "SpectrumConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "Bandwidth": {
						             "additionalProperties": false,
						             "properties": {
						               "Units": {
						                 "enum": [
						                   "GHz",
						                   "MHz",
						                   "kHz"
						                 ],
						                 "$ref": "#/definitions/BandwidthUnits",
						                 "type": "string"
						               },
						               "Value": {
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/FrequencyBandwidth",
						             "type": "object"
						           },
						           "CenterFrequency": {
						             "additionalProperties": false,
						             "properties": {
						               "Units": {
						                 "enum": [
						                   "GHz",
						                   "MHz",
						                   "kHz"
						                 ],
						                 "$ref": "#/definitions/FrequencyUnits",
						                 "type": "string"
						               },
						               "Value": {
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/Frequency",
						             "type": "object"
						           },
						           "Polarization": {
						             "enum": [
						               "LEFT_HAND",
						               "RIGHT_HAND",
						               "NONE"
						             ],
						             "$ref": "#/definitions/Polarization",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/SpectrumConfig",
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/AntennaDownlinkDemodDecodeConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"decode_config": {
									// Property: DecodeConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "UnvalidatedJSON": {
									         "pattern": "",
									         "$ref": "#/definitions/JsonString",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/DecodeConfig",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"unvalidated_json": {
												// Property: UnvalidatedJSON
												// CloudFormation resource type schema:
												/*
												   {
												     "pattern": "",
												     "$ref": "#/definitions/JsonString",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"demodulation_config": {
									// Property: DemodulationConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "UnvalidatedJSON": {
									         "pattern": "",
									         "$ref": "#/definitions/JsonString",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/DemodulationConfig",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"unvalidated_json": {
												// Property: UnvalidatedJSON
												// CloudFormation resource type schema:
												/*
												   {
												     "pattern": "",
												     "$ref": "#/definitions/JsonString",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"spectrum_config": {
									// Property: SpectrumConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Bandwidth": {
									         "additionalProperties": false,
									         "properties": {
									           "Units": {
									             "enum": [
									               "GHz",
									               "MHz",
									               "kHz"
									             ],
									             "$ref": "#/definitions/BandwidthUnits",
									             "type": "string"
									           },
									           "Value": {
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/FrequencyBandwidth",
									         "type": "object"
									       },
									       "CenterFrequency": {
									         "additionalProperties": false,
									         "properties": {
									           "Units": {
									             "enum": [
									               "GHz",
									               "MHz",
									               "kHz"
									             ],
									             "$ref": "#/definitions/FrequencyUnits",
									             "type": "string"
									           },
									           "Value": {
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/Frequency",
									         "type": "object"
									       },
									       "Polarization": {
									         "enum": [
									           "LEFT_HAND",
									           "RIGHT_HAND",
									           "NONE"
									         ],
									         "$ref": "#/definitions/Polarization",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/SpectrumConfig",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"bandwidth": {
												// Property: Bandwidth
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "Units": {
												         "enum": [
												           "GHz",
												           "MHz",
												           "kHz"
												         ],
												         "$ref": "#/definitions/BandwidthUnits",
												         "type": "string"
												       },
												       "Value": {
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/FrequencyBandwidth",
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"units": {
															// Property: Units
															// CloudFormation resource type schema:
															/*
															   {
															     "enum": [
															       "GHz",
															       "MHz",
															       "kHz"
															     ],
															     "$ref": "#/definitions/BandwidthUnits",
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"center_frequency": {
												// Property: CenterFrequency
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "Units": {
												         "enum": [
												           "GHz",
												           "MHz",
												           "kHz"
												         ],
												         "$ref": "#/definitions/FrequencyUnits",
												         "type": "string"
												       },
												       "Value": {
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/Frequency",
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"units": {
															// Property: Units
															// CloudFormation resource type schema:
															/*
															   {
															     "enum": [
															       "GHz",
															       "MHz",
															       "kHz"
															     ],
															     "$ref": "#/definitions/FrequencyUnits",
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"polarization": {
												// Property: Polarization
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "LEFT_HAND",
												       "RIGHT_HAND",
												       "NONE"
												     ],
												     "$ref": "#/definitions/Polarization",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"antenna_uplink_config": {
						// Property: AntennaUplinkConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "SpectrumConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "CenterFrequency": {
						             "additionalProperties": false,
						             "properties": {
						               "Units": {
						                 "enum": [
						                   "GHz",
						                   "MHz",
						                   "kHz"
						                 ],
						                 "$ref": "#/definitions/FrequencyUnits",
						                 "type": "string"
						               },
						               "Value": {
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/Frequency",
						             "type": "object"
						           },
						           "Polarization": {
						             "enum": [
						               "LEFT_HAND",
						               "RIGHT_HAND",
						               "NONE"
						             ],
						             "$ref": "#/definitions/Polarization",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/UplinkSpectrumConfig",
						         "type": "object"
						       },
						       "TargetEirp": {
						         "additionalProperties": false,
						         "properties": {
						           "Units": {
						             "enum": [
						               "dBW"
						             ],
						             "$ref": "#/definitions/EirpUnits",
						             "type": "string"
						           },
						           "Value": {
						             "type": "number"
						           }
						         },
						         "$ref": "#/definitions/Eirp",
						         "type": "object"
						       },
						       "TransmitDisabled": {
						         "type": "boolean"
						       }
						     },
						     "$ref": "#/definitions/AntennaUplinkConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"spectrum_config": {
									// Property: SpectrumConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "CenterFrequency": {
									         "additionalProperties": false,
									         "properties": {
									           "Units": {
									             "enum": [
									               "GHz",
									               "MHz",
									               "kHz"
									             ],
									             "$ref": "#/definitions/FrequencyUnits",
									             "type": "string"
									           },
									           "Value": {
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/Frequency",
									         "type": "object"
									       },
									       "Polarization": {
									         "enum": [
									           "LEFT_HAND",
									           "RIGHT_HAND",
									           "NONE"
									         ],
									         "$ref": "#/definitions/Polarization",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/UplinkSpectrumConfig",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"center_frequency": {
												// Property: CenterFrequency
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "Units": {
												         "enum": [
												           "GHz",
												           "MHz",
												           "kHz"
												         ],
												         "$ref": "#/definitions/FrequencyUnits",
												         "type": "string"
												       },
												       "Value": {
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/Frequency",
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"units": {
															// Property: Units
															// CloudFormation resource type schema:
															/*
															   {
															     "enum": [
															       "GHz",
															       "MHz",
															       "kHz"
															     ],
															     "$ref": "#/definitions/FrequencyUnits",
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"polarization": {
												// Property: Polarization
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "LEFT_HAND",
												       "RIGHT_HAND",
												       "NONE"
												     ],
												     "$ref": "#/definitions/Polarization",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"target_eirp": {
									// Property: TargetEirp
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Units": {
									         "enum": [
									           "dBW"
									         ],
									         "$ref": "#/definitions/EirpUnits",
									         "type": "string"
									       },
									       "Value": {
									         "type": "number"
									       }
									     },
									     "$ref": "#/definitions/Eirp",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"units": {
												// Property: Units
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "dBW"
												     ],
												     "$ref": "#/definitions/EirpUnits",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"value": {
												// Property: Value
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "number"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"transmit_disabled": {
									// Property: TransmitDisabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"dataflow_endpoint_config": {
						// Property: DataflowEndpointConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DataflowEndpointName": {
						         "type": "string"
						       },
						       "DataflowEndpointRegion": {
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/DataflowEndpointConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"dataflow_endpoint_name": {
									// Property: DataflowEndpointName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"dataflow_endpoint_region": {
									// Property: DataflowEndpointRegion
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"s3_recording_config": {
						// Property: S3RecordingConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketArn": {
						         "$ref": "#/definitions/BucketArn",
						         "type": "string"
						       },
						       "Prefix": {
						         "pattern": "",
						         "$ref": "#/definitions/S3KeyPrefix",
						         "type": "string"
						       },
						       "RoleArn": {
						         "$ref": "#/definitions/RoleArn",
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/S3RecordingConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketArn
									// CloudFormation resource type schema:
									/*
									   {
									     "$ref": "#/definitions/BucketArn",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "pattern": "",
									     "$ref": "#/definitions/S3KeyPrefix",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleArn
									// CloudFormation resource type schema:
									/*
									   {
									     "$ref": "#/definitions/RoleArn",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"tracking_config": {
						// Property: TrackingConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Autotrack": {
						         "enum": [
						           "REQUIRED",
						           "PREFERRED",
						           "REMOVED"
						         ],
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/TrackingConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"autotrack": {
									// Property: Autotrack
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "REQUIRED",
									       "PREFERRED",
									       "REMOVED"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"uplink_echo_config": {
						// Property: UplinkEchoConfig
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "AntennaUplinkConfigArn": {
						         "type": "string"
						       },
						       "Enabled": {
						         "type": "boolean"
						       }
						     },
						     "$ref": "#/definitions/UplinkEchoConfig",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"antenna_uplink_config_arn": {
									// Property: AntennaUplinkConfigArn
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
			),
			Required: true,
		},
		"id": {
			// Property: Id
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			/*
			   {
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Required: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "Key": {
			           "pattern": "",
			           "type": "string"
			         },
			         "Value": {
			           "pattern": "",
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/Tag",
			       "type": "object"
			     },
			     "type": "array"
			   }
			*/
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"type": {
			// Property: Type
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "AWS Ground Station config resource type for CloudFormation.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::GroundStation::Config").WithTerraformTypeName("aws_groundstation_config").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_groundstation_config", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
