// Code generated by generators/resource/main.go; DO NOT EDIT.

package iotsitewise

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_iotsitewise_asset_model", assetModelResourceType)
}

// assetModelResourceType returns the Terraform aws_iotsitewise_asset_model resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::IoTSiteWise::AssetModel resource type.
func assetModelResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"asset_model_arn": {
			// Property: AssetModelArn
			// CloudFormation resource type schema:
			// {
			//   "description": "The ARN of the asset model, which has the following format.",
			//   "type": "string"
			// }
			Description: "The ARN of the asset model, which has the following format.",
			Type:        types.StringType,
			Computed:    true,
		},
		"asset_model_composite_models": {
			// Property: AssetModelCompositeModels
			// CloudFormation resource type schema:
			// {
			//   "description": "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "Contains a composite model definition in an asset model. This composite model definition is applied to all assets created from the asset model.",
			//     "properties": {
			//       "CompositeModelProperties": {
			//         "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model.",
			//         "insertionOrder": false,
			//         "items": {
			//           "additionalProperties": false,
			//           "description": "Contains information about an asset model property.",
			//           "properties": {
			//             "DataType": {
			//               "enum": [
			//                 "STRING",
			//                 "INTEGER",
			//                 "DOUBLE",
			//                 "BOOLEAN",
			//                 "STRUCT"
			//               ],
			//               "type": "string"
			//             },
			//             "DataTypeSpec": {
			//               "enum": [
			//                 "AWS/ALARM_STATE"
			//               ],
			//               "type": "string"
			//             },
			//             "LogicalId": {
			//               "description": "Customer provided ID for property.",
			//               "maxLength": 256,
			//               "minLength": 1,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Name": {
			//               "description": "The name of the asset model property.",
			//               "type": "string"
			//             },
			//             "Type": {
			//               "additionalProperties": false,
			//               "description": "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
			//               "properties": {
			//                 "Attribute": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "DefaultValue": {
			//                       "type": "string"
			//                     }
			//                   },
			//                   "type": "object"
			//                 },
			//                 "Metric": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "Expression": {
			//                       "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
			//                       "type": "string"
			//                     },
			//                     "Variables": {
			//                       "description": "The list of variables used in the expression.",
			//                       "insertionOrder": false,
			//                       "items": {
			//                         "additionalProperties": false,
			//                         "properties": {
			//                           "Name": {
			//                             "description": "The friendly name of the variable to be used in the expression.",
			//                             "type": "string"
			//                           },
			//                           "Value": {
			//                             "additionalProperties": false,
			//                             "properties": {
			//                               "HierarchyLogicalId": {
			//                                 "maxLength": 256,
			//                                 "minLength": 1,
			//                                 "pattern": "",
			//                                 "type": "string"
			//                               },
			//                               "PropertyLogicalId": {
			//                                 "maxLength": 256,
			//                                 "minLength": 1,
			//                                 "pattern": "",
			//                                 "type": "string"
			//                               }
			//                             },
			//                             "required": [
			//                               "PropertyLogicalId"
			//                             ],
			//                             "type": "object"
			//                           }
			//                         },
			//                         "required": [
			//                           "Name",
			//                           "Value"
			//                         ],
			//                         "type": "object"
			//                       },
			//                       "type": "array"
			//                     },
			//                     "Window": {
			//                       "additionalProperties": false,
			//                       "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
			//                       "properties": {
			//                         "Tumbling": {
			//                           "additionalProperties": false,
			//                           "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
			//                           "properties": {
			//                             "Interval": {
			//                               "description": "The time interval for the tumbling window.",
			//                               "type": "string"
			//                             },
			//                             "Offset": {
			//                               "description": "The shift or reference point on timeline for the contiguous time intervals.",
			//                               "type": "string"
			//                             }
			//                           },
			//                           "required": [
			//                             "Interval"
			//                           ],
			//                           "type": "object"
			//                         }
			//                       },
			//                       "type": "object"
			//                     }
			//                   },
			//                   "required": [
			//                     "Expression",
			//                     "Variables",
			//                     "Window"
			//                   ],
			//                   "type": "object"
			//                 },
			//                 "Transform": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "Expression": {
			//                       "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
			//                       "type": "string"
			//                     },
			//                     "Variables": {
			//                       "description": "The list of variables used in the expression.",
			//                       "insertionOrder": false,
			//                       "items": {
			//                         "additionalProperties": false,
			//                         "properties": {
			//                           "Name": {
			//                             "description": "The friendly name of the variable to be used in the expression.",
			//                             "type": "string"
			//                           },
			//                           "Value": {
			//                             "additionalProperties": false,
			//                             "properties": {
			//                               "HierarchyLogicalId": {
			//                                 "maxLength": 256,
			//                                 "minLength": 1,
			//                                 "pattern": "",
			//                                 "type": "string"
			//                               },
			//                               "PropertyLogicalId": {
			//                                 "maxLength": 256,
			//                                 "minLength": 1,
			//                                 "pattern": "",
			//                                 "type": "string"
			//                               }
			//                             },
			//                             "required": [
			//                               "PropertyLogicalId"
			//                             ],
			//                             "type": "object"
			//                           }
			//                         },
			//                         "required": [
			//                           "Name",
			//                           "Value"
			//                         ],
			//                         "type": "object"
			//                       },
			//                       "type": "array"
			//                     }
			//                   },
			//                   "required": [
			//                     "Expression",
			//                     "Variables"
			//                   ],
			//                   "type": "object"
			//                 },
			//                 "TypeName": {
			//                   "enum": [
			//                     "Measurement",
			//                     "Attribute",
			//                     "Transform",
			//                     "Metric"
			//                   ],
			//                   "type": "string"
			//                 }
			//               },
			//               "required": [
			//                 "TypeName"
			//               ],
			//               "type": "object"
			//             },
			//             "Unit": {
			//               "description": "The unit of the asset model property, such as Newtons or RPM.",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "LogicalId",
			//             "Name",
			//             "DataType",
			//             "Type"
			//           ],
			//           "type": "object"
			//         },
			//         "type": "array"
			//       },
			//       "Description": {
			//         "description": "A description for the asset composite model.",
			//         "type": "string"
			//       },
			//       "Name": {
			//         "description": "A unique, friendly name for the asset composite model.",
			//         "type": "string"
			//       },
			//       "Type": {
			//         "description": "The type of the composite model. For alarm composite models, this type is AWS/ALARM",
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Name",
			//       "Type"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Description: "The composite asset models that are part of this asset model. Composite asset models are asset models that contain specific properties.",
			// Multiset.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"composite_model_properties": {
						// Property: CompositeModelProperties
						// CloudFormation resource type schema:
						// {
						//   "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model.",
						//   "insertionOrder": false,
						//   "items": {
						//     "additionalProperties": false,
						//     "description": "Contains information about an asset model property.",
						//     "properties": {
						//       "DataType": {
						//         "enum": [
						//           "STRING",
						//           "INTEGER",
						//           "DOUBLE",
						//           "BOOLEAN",
						//           "STRUCT"
						//         ],
						//         "type": "string"
						//       },
						//       "DataTypeSpec": {
						//         "enum": [
						//           "AWS/ALARM_STATE"
						//         ],
						//         "type": "string"
						//       },
						//       "LogicalId": {
						//         "description": "Customer provided ID for property.",
						//         "maxLength": 256,
						//         "minLength": 1,
						//         "pattern": "",
						//         "type": "string"
						//       },
						//       "Name": {
						//         "description": "The name of the asset model property.",
						//         "type": "string"
						//       },
						//       "Type": {
						//         "additionalProperties": false,
						//         "description": "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
						//         "properties": {
						//           "Attribute": {
						//             "additionalProperties": false,
						//             "properties": {
						//               "DefaultValue": {
						//                 "type": "string"
						//               }
						//             },
						//             "type": "object"
						//           },
						//           "Metric": {
						//             "additionalProperties": false,
						//             "properties": {
						//               "Expression": {
						//                 "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
						//                 "type": "string"
						//               },
						//               "Variables": {
						//                 "description": "The list of variables used in the expression.",
						//                 "insertionOrder": false,
						//                 "items": {
						//                   "additionalProperties": false,
						//                   "properties": {
						//                     "Name": {
						//                       "description": "The friendly name of the variable to be used in the expression.",
						//                       "type": "string"
						//                     },
						//                     "Value": {
						//                       "additionalProperties": false,
						//                       "properties": {
						//                         "HierarchyLogicalId": {
						//                           "maxLength": 256,
						//                           "minLength": 1,
						//                           "pattern": "",
						//                           "type": "string"
						//                         },
						//                         "PropertyLogicalId": {
						//                           "maxLength": 256,
						//                           "minLength": 1,
						//                           "pattern": "",
						//                           "type": "string"
						//                         }
						//                       },
						//                       "required": [
						//                         "PropertyLogicalId"
						//                       ],
						//                       "type": "object"
						//                     }
						//                   },
						//                   "required": [
						//                     "Name",
						//                     "Value"
						//                   ],
						//                   "type": "object"
						//                 },
						//                 "type": "array"
						//               },
						//               "Window": {
						//                 "additionalProperties": false,
						//                 "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
						//                 "properties": {
						//                   "Tumbling": {
						//                     "additionalProperties": false,
						//                     "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
						//                     "properties": {
						//                       "Interval": {
						//                         "description": "The time interval for the tumbling window.",
						//                         "type": "string"
						//                       },
						//                       "Offset": {
						//                         "description": "The shift or reference point on timeline for the contiguous time intervals.",
						//                         "type": "string"
						//                       }
						//                     },
						//                     "required": [
						//                       "Interval"
						//                     ],
						//                     "type": "object"
						//                   }
						//                 },
						//                 "type": "object"
						//               }
						//             },
						//             "required": [
						//               "Expression",
						//               "Variables",
						//               "Window"
						//             ],
						//             "type": "object"
						//           },
						//           "Transform": {
						//             "additionalProperties": false,
						//             "properties": {
						//               "Expression": {
						//                 "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
						//                 "type": "string"
						//               },
						//               "Variables": {
						//                 "description": "The list of variables used in the expression.",
						//                 "insertionOrder": false,
						//                 "items": {
						//                   "additionalProperties": false,
						//                   "properties": {
						//                     "Name": {
						//                       "description": "The friendly name of the variable to be used in the expression.",
						//                       "type": "string"
						//                     },
						//                     "Value": {
						//                       "additionalProperties": false,
						//                       "properties": {
						//                         "HierarchyLogicalId": {
						//                           "maxLength": 256,
						//                           "minLength": 1,
						//                           "pattern": "",
						//                           "type": "string"
						//                         },
						//                         "PropertyLogicalId": {
						//                           "maxLength": 256,
						//                           "minLength": 1,
						//                           "pattern": "",
						//                           "type": "string"
						//                         }
						//                       },
						//                       "required": [
						//                         "PropertyLogicalId"
						//                       ],
						//                       "type": "object"
						//                     }
						//                   },
						//                   "required": [
						//                     "Name",
						//                     "Value"
						//                   ],
						//                   "type": "object"
						//                 },
						//                 "type": "array"
						//               }
						//             },
						//             "required": [
						//               "Expression",
						//               "Variables"
						//             ],
						//             "type": "object"
						//           },
						//           "TypeName": {
						//             "enum": [
						//               "Measurement",
						//               "Attribute",
						//               "Transform",
						//               "Metric"
						//             ],
						//             "type": "string"
						//           }
						//         },
						//         "required": [
						//           "TypeName"
						//         ],
						//         "type": "object"
						//       },
						//       "Unit": {
						//         "description": "The unit of the asset model property, such as Newtons or RPM.",
						//         "type": "string"
						//       }
						//     },
						//     "required": [
						//       "LogicalId",
						//       "Name",
						//       "DataType",
						//       "Type"
						//     ],
						//     "type": "object"
						//   },
						//   "type": "array"
						// }
						Description: "The property definitions of the asset model. You can specify up to 200 properties per asset model.",
						// Multiset.
						Attributes: schema.ListNestedAttributes(
							map[string]schema.Attribute{
								"data_type": {
									// Property: DataType
									// CloudFormation resource type schema:
									// {
									//   "enum": [
									//     "STRING",
									//     "INTEGER",
									//     "DOUBLE",
									//     "BOOLEAN",
									//     "STRUCT"
									//   ],
									//   "type": "string"
									// }
									Type:     types.StringType,
									Required: true,
								},
								"data_type_spec": {
									// Property: DataTypeSpec
									// CloudFormation resource type schema:
									// {
									//   "enum": [
									//     "AWS/ALARM_STATE"
									//   ],
									//   "type": "string"
									// }
									Type:     types.StringType,
									Optional: true,
								},
								"logical_id": {
									// Property: LogicalId
									// CloudFormation resource type schema:
									// {
									//   "description": "Customer provided ID for property.",
									//   "maxLength": 256,
									//   "minLength": 1,
									//   "pattern": "",
									//   "type": "string"
									// }
									Description: "Customer provided ID for property.",
									Type:        types.StringType,
									Required:    true,
								},
								"name": {
									// Property: Name
									// CloudFormation resource type schema:
									// {
									//   "description": "The name of the asset model property.",
									//   "type": "string"
									// }
									Description: "The name of the asset model property.",
									Type:        types.StringType,
									Required:    true,
								},
								"type": {
									// Property: Type
									// CloudFormation resource type schema:
									// {
									//   "additionalProperties": false,
									//   "description": "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
									//   "properties": {
									//     "Attribute": {
									//       "additionalProperties": false,
									//       "properties": {
									//         "DefaultValue": {
									//           "type": "string"
									//         }
									//       },
									//       "type": "object"
									//     },
									//     "Metric": {
									//       "additionalProperties": false,
									//       "properties": {
									//         "Expression": {
									//           "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
									//           "type": "string"
									//         },
									//         "Variables": {
									//           "description": "The list of variables used in the expression.",
									//           "insertionOrder": false,
									//           "items": {
									//             "additionalProperties": false,
									//             "properties": {
									//               "Name": {
									//                 "description": "The friendly name of the variable to be used in the expression.",
									//                 "type": "string"
									//               },
									//               "Value": {
									//                 "additionalProperties": false,
									//                 "properties": {
									//                   "HierarchyLogicalId": {
									//                     "maxLength": 256,
									//                     "minLength": 1,
									//                     "pattern": "",
									//                     "type": "string"
									//                   },
									//                   "PropertyLogicalId": {
									//                     "maxLength": 256,
									//                     "minLength": 1,
									//                     "pattern": "",
									//                     "type": "string"
									//                   }
									//                 },
									//                 "required": [
									//                   "PropertyLogicalId"
									//                 ],
									//                 "type": "object"
									//               }
									//             },
									//             "required": [
									//               "Name",
									//               "Value"
									//             ],
									//             "type": "object"
									//           },
									//           "type": "array"
									//         },
									//         "Window": {
									//           "additionalProperties": false,
									//           "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
									//           "properties": {
									//             "Tumbling": {
									//               "additionalProperties": false,
									//               "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
									//               "properties": {
									//                 "Interval": {
									//                   "description": "The time interval for the tumbling window.",
									//                   "type": "string"
									//                 },
									//                 "Offset": {
									//                   "description": "The shift or reference point on timeline for the contiguous time intervals.",
									//                   "type": "string"
									//                 }
									//               },
									//               "required": [
									//                 "Interval"
									//               ],
									//               "type": "object"
									//             }
									//           },
									//           "type": "object"
									//         }
									//       },
									//       "required": [
									//         "Expression",
									//         "Variables",
									//         "Window"
									//       ],
									//       "type": "object"
									//     },
									//     "Transform": {
									//       "additionalProperties": false,
									//       "properties": {
									//         "Expression": {
									//           "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
									//           "type": "string"
									//         },
									//         "Variables": {
									//           "description": "The list of variables used in the expression.",
									//           "insertionOrder": false,
									//           "items": {
									//             "additionalProperties": false,
									//             "properties": {
									//               "Name": {
									//                 "description": "The friendly name of the variable to be used in the expression.",
									//                 "type": "string"
									//               },
									//               "Value": {
									//                 "additionalProperties": false,
									//                 "properties": {
									//                   "HierarchyLogicalId": {
									//                     "maxLength": 256,
									//                     "minLength": 1,
									//                     "pattern": "",
									//                     "type": "string"
									//                   },
									//                   "PropertyLogicalId": {
									//                     "maxLength": 256,
									//                     "minLength": 1,
									//                     "pattern": "",
									//                     "type": "string"
									//                   }
									//                 },
									//                 "required": [
									//                   "PropertyLogicalId"
									//                 ],
									//                 "type": "object"
									//               }
									//             },
									//             "required": [
									//               "Name",
									//               "Value"
									//             ],
									//             "type": "object"
									//           },
									//           "type": "array"
									//         }
									//       },
									//       "required": [
									//         "Expression",
									//         "Variables"
									//       ],
									//       "type": "object"
									//     },
									//     "TypeName": {
									//       "enum": [
									//         "Measurement",
									//         "Attribute",
									//         "Transform",
									//         "Metric"
									//       ],
									//       "type": "string"
									//     }
									//   },
									//   "required": [
									//     "TypeName"
									//   ],
									//   "type": "object"
									// }
									Description: "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"attribute": {
												// Property: Attribute
												// CloudFormation resource type schema:
												// {
												//   "additionalProperties": false,
												//   "properties": {
												//     "DefaultValue": {
												//       "type": "string"
												//     }
												//   },
												//   "type": "object"
												// }
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"default_value": {
															// Property: DefaultValue
															// CloudFormation resource type schema:
															// {
															//   "type": "string"
															// }
															Type:     types.StringType,
															Optional: true,
														},
													},
												),
												Optional: true,
											},
											"metric": {
												// Property: Metric
												// CloudFormation resource type schema:
												// {
												//   "additionalProperties": false,
												//   "properties": {
												//     "Expression": {
												//       "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
												//       "type": "string"
												//     },
												//     "Variables": {
												//       "description": "The list of variables used in the expression.",
												//       "insertionOrder": false,
												//       "items": {
												//         "additionalProperties": false,
												//         "properties": {
												//           "Name": {
												//             "description": "The friendly name of the variable to be used in the expression.",
												//             "type": "string"
												//           },
												//           "Value": {
												//             "additionalProperties": false,
												//             "properties": {
												//               "HierarchyLogicalId": {
												//                 "maxLength": 256,
												//                 "minLength": 1,
												//                 "pattern": "",
												//                 "type": "string"
												//               },
												//               "PropertyLogicalId": {
												//                 "maxLength": 256,
												//                 "minLength": 1,
												//                 "pattern": "",
												//                 "type": "string"
												//               }
												//             },
												//             "required": [
												//               "PropertyLogicalId"
												//             ],
												//             "type": "object"
												//           }
												//         },
												//         "required": [
												//           "Name",
												//           "Value"
												//         ],
												//         "type": "object"
												//       },
												//       "type": "array"
												//     },
												//     "Window": {
												//       "additionalProperties": false,
												//       "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
												//       "properties": {
												//         "Tumbling": {
												//           "additionalProperties": false,
												//           "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
												//           "properties": {
												//             "Interval": {
												//               "description": "The time interval for the tumbling window.",
												//               "type": "string"
												//             },
												//             "Offset": {
												//               "description": "The shift or reference point on timeline for the contiguous time intervals.",
												//               "type": "string"
												//             }
												//           },
												//           "required": [
												//             "Interval"
												//           ],
												//           "type": "object"
												//         }
												//       },
												//       "type": "object"
												//     }
												//   },
												//   "required": [
												//     "Expression",
												//     "Variables",
												//     "Window"
												//   ],
												//   "type": "object"
												// }
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"expression": {
															// Property: Expression
															// CloudFormation resource type schema:
															// {
															//   "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
															//   "type": "string"
															// }
															Description: "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
															Type:        types.StringType,
															Required:    true,
														},
														"variables": {
															// Property: Variables
															// CloudFormation resource type schema:
															// {
															//   "description": "The list of variables used in the expression.",
															//   "insertionOrder": false,
															//   "items": {
															//     "additionalProperties": false,
															//     "properties": {
															//       "Name": {
															//         "description": "The friendly name of the variable to be used in the expression.",
															//         "type": "string"
															//       },
															//       "Value": {
															//         "additionalProperties": false,
															//         "properties": {
															//           "HierarchyLogicalId": {
															//             "maxLength": 256,
															//             "minLength": 1,
															//             "pattern": "",
															//             "type": "string"
															//           },
															//           "PropertyLogicalId": {
															//             "maxLength": 256,
															//             "minLength": 1,
															//             "pattern": "",
															//             "type": "string"
															//           }
															//         },
															//         "required": [
															//           "PropertyLogicalId"
															//         ],
															//         "type": "object"
															//       }
															//     },
															//     "required": [
															//       "Name",
															//       "Value"
															//     ],
															//     "type": "object"
															//   },
															//   "type": "array"
															// }
															Description: "The list of variables used in the expression.",
															// Multiset.
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"name": {
																		// Property: Name
																		// CloudFormation resource type schema:
																		// {
																		//   "description": "The friendly name of the variable to be used in the expression.",
																		//   "type": "string"
																		// }
																		Description: "The friendly name of the variable to be used in the expression.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"value": {
																		// Property: Value
																		// CloudFormation resource type schema:
																		// {
																		//   "additionalProperties": false,
																		//   "properties": {
																		//     "HierarchyLogicalId": {
																		//       "maxLength": 256,
																		//       "minLength": 1,
																		//       "pattern": "",
																		//       "type": "string"
																		//     },
																		//     "PropertyLogicalId": {
																		//       "maxLength": 256,
																		//       "minLength": 1,
																		//       "pattern": "",
																		//       "type": "string"
																		//     }
																		//   },
																		//   "required": [
																		//     "PropertyLogicalId"
																		//   ],
																		//   "type": "object"
																		// }
																		Attributes: schema.SingleNestedAttributes(
																			map[string]schema.Attribute{
																				"hierarchy_logical_id": {
																					// Property: HierarchyLogicalId
																					// CloudFormation resource type schema:
																					// {
																					//   "maxLength": 256,
																					//   "minLength": 1,
																					//   "pattern": "",
																					//   "type": "string"
																					// }
																					Type:     types.StringType,
																					Optional: true,
																				},
																				"property_logical_id": {
																					// Property: PropertyLogicalId
																					// CloudFormation resource type schema:
																					// {
																					//   "maxLength": 256,
																					//   "minLength": 1,
																					//   "pattern": "",
																					//   "type": "string"
																					// }
																					Type:     types.StringType,
																					Required: true,
																				},
																			},
																		),
																		Required: true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Required: true,
														},
														"window": {
															// Property: Window
															// CloudFormation resource type schema:
															// {
															//   "additionalProperties": false,
															//   "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
															//   "properties": {
															//     "Tumbling": {
															//       "additionalProperties": false,
															//       "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
															//       "properties": {
															//         "Interval": {
															//           "description": "The time interval for the tumbling window.",
															//           "type": "string"
															//         },
															//         "Offset": {
															//           "description": "The shift or reference point on timeline for the contiguous time intervals.",
															//           "type": "string"
															//         }
															//       },
															//       "required": [
															//         "Interval"
															//       ],
															//       "type": "object"
															//     }
															//   },
															//   "type": "object"
															// }
															Description: "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"tumbling": {
																		// Property: Tumbling
																		// CloudFormation resource type schema:
																		// {
																		//   "additionalProperties": false,
																		//   "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
																		//   "properties": {
																		//     "Interval": {
																		//       "description": "The time interval for the tumbling window.",
																		//       "type": "string"
																		//     },
																		//     "Offset": {
																		//       "description": "The shift or reference point on timeline for the contiguous time intervals.",
																		//       "type": "string"
																		//     }
																		//   },
																		//   "required": [
																		//     "Interval"
																		//   ],
																		//   "type": "object"
																		// }
																		Description: "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
																		Attributes: schema.SingleNestedAttributes(
																			map[string]schema.Attribute{
																				"interval": {
																					// Property: Interval
																					// CloudFormation resource type schema:
																					// {
																					//   "description": "The time interval for the tumbling window.",
																					//   "type": "string"
																					// }
																					Description: "The time interval for the tumbling window.",
																					Type:        types.StringType,
																					Required:    true,
																				},
																				"offset": {
																					// Property: Offset
																					// CloudFormation resource type schema:
																					// {
																					//   "description": "The shift or reference point on timeline for the contiguous time intervals.",
																					//   "type": "string"
																					// }
																					Description: "The shift or reference point on timeline for the contiguous time intervals.",
																					Type:        types.StringType,
																					Optional:    true,
																				},
																			},
																		),
																		Optional: true,
																	},
																},
															),
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"transform": {
												// Property: Transform
												// CloudFormation resource type schema:
												// {
												//   "additionalProperties": false,
												//   "properties": {
												//     "Expression": {
												//       "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
												//       "type": "string"
												//     },
												//     "Variables": {
												//       "description": "The list of variables used in the expression.",
												//       "insertionOrder": false,
												//       "items": {
												//         "additionalProperties": false,
												//         "properties": {
												//           "Name": {
												//             "description": "The friendly name of the variable to be used in the expression.",
												//             "type": "string"
												//           },
												//           "Value": {
												//             "additionalProperties": false,
												//             "properties": {
												//               "HierarchyLogicalId": {
												//                 "maxLength": 256,
												//                 "minLength": 1,
												//                 "pattern": "",
												//                 "type": "string"
												//               },
												//               "PropertyLogicalId": {
												//                 "maxLength": 256,
												//                 "minLength": 1,
												//                 "pattern": "",
												//                 "type": "string"
												//               }
												//             },
												//             "required": [
												//               "PropertyLogicalId"
												//             ],
												//             "type": "object"
												//           }
												//         },
												//         "required": [
												//           "Name",
												//           "Value"
												//         ],
												//         "type": "object"
												//       },
												//       "type": "array"
												//     }
												//   },
												//   "required": [
												//     "Expression",
												//     "Variables"
												//   ],
												//   "type": "object"
												// }
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"expression": {
															// Property: Expression
															// CloudFormation resource type schema:
															// {
															//   "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
															//   "type": "string"
															// }
															Description: "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
															Type:        types.StringType,
															Required:    true,
														},
														"variables": {
															// Property: Variables
															// CloudFormation resource type schema:
															// {
															//   "description": "The list of variables used in the expression.",
															//   "insertionOrder": false,
															//   "items": {
															//     "additionalProperties": false,
															//     "properties": {
															//       "Name": {
															//         "description": "The friendly name of the variable to be used in the expression.",
															//         "type": "string"
															//       },
															//       "Value": {
															//         "additionalProperties": false,
															//         "properties": {
															//           "HierarchyLogicalId": {
															//             "maxLength": 256,
															//             "minLength": 1,
															//             "pattern": "",
															//             "type": "string"
															//           },
															//           "PropertyLogicalId": {
															//             "maxLength": 256,
															//             "minLength": 1,
															//             "pattern": "",
															//             "type": "string"
															//           }
															//         },
															//         "required": [
															//           "PropertyLogicalId"
															//         ],
															//         "type": "object"
															//       }
															//     },
															//     "required": [
															//       "Name",
															//       "Value"
															//     ],
															//     "type": "object"
															//   },
															//   "type": "array"
															// }
															Description: "The list of variables used in the expression.",
															// Multiset.
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"name": {
																		// Property: Name
																		// CloudFormation resource type schema:
																		// {
																		//   "description": "The friendly name of the variable to be used in the expression.",
																		//   "type": "string"
																		// }
																		Description: "The friendly name of the variable to be used in the expression.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"value": {
																		// Property: Value
																		// CloudFormation resource type schema:
																		// {
																		//   "additionalProperties": false,
																		//   "properties": {
																		//     "HierarchyLogicalId": {
																		//       "maxLength": 256,
																		//       "minLength": 1,
																		//       "pattern": "",
																		//       "type": "string"
																		//     },
																		//     "PropertyLogicalId": {
																		//       "maxLength": 256,
																		//       "minLength": 1,
																		//       "pattern": "",
																		//       "type": "string"
																		//     }
																		//   },
																		//   "required": [
																		//     "PropertyLogicalId"
																		//   ],
																		//   "type": "object"
																		// }
																		Attributes: schema.SingleNestedAttributes(
																			map[string]schema.Attribute{
																				"hierarchy_logical_id": {
																					// Property: HierarchyLogicalId
																					// CloudFormation resource type schema:
																					// {
																					//   "maxLength": 256,
																					//   "minLength": 1,
																					//   "pattern": "",
																					//   "type": "string"
																					// }
																					Type:     types.StringType,
																					Optional: true,
																				},
																				"property_logical_id": {
																					// Property: PropertyLogicalId
																					// CloudFormation resource type schema:
																					// {
																					//   "maxLength": 256,
																					//   "minLength": 1,
																					//   "pattern": "",
																					//   "type": "string"
																					// }
																					Type:     types.StringType,
																					Required: true,
																				},
																			},
																		),
																		Required: true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"type_name": {
												// Property: TypeName
												// CloudFormation resource type schema:
												// {
												//   "enum": [
												//     "Measurement",
												//     "Attribute",
												//     "Transform",
												//     "Metric"
												//   ],
												//   "type": "string"
												// }
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Required: true,
								},
								"unit": {
									// Property: Unit
									// CloudFormation resource type schema:
									// {
									//   "description": "The unit of the asset model property, such as Newtons or RPM.",
									//   "type": "string"
									// }
									Description: "The unit of the asset model property, such as Newtons or RPM.",
									Type:        types.StringType,
									Optional:    true,
								},
							},
							schema.ListNestedAttributesOptions{},
						),
						Optional: true,
					},
					"description": {
						// Property: Description
						// CloudFormation resource type schema:
						// {
						//   "description": "A description for the asset composite model.",
						//   "type": "string"
						// }
						Description: "A description for the asset composite model.",
						Type:        types.StringType,
						Optional:    true,
					},
					"name": {
						// Property: Name
						// CloudFormation resource type schema:
						// {
						//   "description": "A unique, friendly name for the asset composite model.",
						//   "type": "string"
						// }
						Description: "A unique, friendly name for the asset composite model.",
						Type:        types.StringType,
						Required:    true,
					},
					"type": {
						// Property: Type
						// CloudFormation resource type schema:
						// {
						//   "description": "The type of the composite model. For alarm composite models, this type is AWS/ALARM",
						//   "type": "string"
						// }
						Description: "The type of the composite model. For alarm composite models, this type is AWS/ALARM",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"asset_model_description": {
			// Property: AssetModelDescription
			// CloudFormation resource type schema:
			// {
			//   "description": "A description for the asset model.",
			//   "type": "string"
			// }
			Description: "A description for the asset model.",
			Type:        types.StringType,
			Optional:    true,
		},
		"asset_model_hierarchies": {
			// Property: AssetModelHierarchies
			// CloudFormation resource type schema:
			// {
			//   "description": "The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "Contains information about an asset model hierarchy.",
			//     "properties": {
			//       "ChildAssetModelId": {
			//         "description": "The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.",
			//         "type": "string"
			//       },
			//       "LogicalId": {
			//         "description": "Customer provided ID for hierarchy.",
			//         "maxLength": 256,
			//         "minLength": 1,
			//         "pattern": "",
			//         "type": "string"
			//       },
			//       "Name": {
			//         "description": "The name of the asset model hierarchy.",
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "LogicalId",
			//       "Name",
			//       "ChildAssetModelId"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Description: "The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.",
			// Multiset.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"child_asset_model_id": {
						// Property: ChildAssetModelId
						// CloudFormation resource type schema:
						// {
						//   "description": "The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.",
						//   "type": "string"
						// }
						Description: "The ID of the asset model. All assets in this hierarchy must be instances of the child AssetModelId asset model.",
						Type:        types.StringType,
						Required:    true,
					},
					"logical_id": {
						// Property: LogicalId
						// CloudFormation resource type schema:
						// {
						//   "description": "Customer provided ID for hierarchy.",
						//   "maxLength": 256,
						//   "minLength": 1,
						//   "pattern": "",
						//   "type": "string"
						// }
						Description: "Customer provided ID for hierarchy.",
						Type:        types.StringType,
						Required:    true,
					},
					"name": {
						// Property: Name
						// CloudFormation resource type schema:
						// {
						//   "description": "The name of the asset model hierarchy.",
						//   "type": "string"
						// }
						Description: "The name of the asset model hierarchy.",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"asset_model_id": {
			// Property: AssetModelId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the asset model.",
			//   "type": "string"
			// }
			Description: "The ID of the asset model.",
			Type:        types.StringType,
			Computed:    true,
		},
		"asset_model_name": {
			// Property: AssetModelName
			// CloudFormation resource type schema:
			// {
			//   "description": "A unique, friendly name for the asset model.",
			//   "type": "string"
			// }
			Description: "A unique, friendly name for the asset model.",
			Type:        types.StringType,
			Required:    true,
		},
		"asset_model_properties": {
			// Property: AssetModelProperties
			// CloudFormation resource type schema:
			// {
			//   "description": "The property definitions of the asset model. You can specify up to 200 properties per asset model.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "Contains information about an asset model property.",
			//     "properties": {
			//       "DataType": {
			//         "enum": [
			//           "STRING",
			//           "INTEGER",
			//           "DOUBLE",
			//           "BOOLEAN",
			//           "STRUCT"
			//         ],
			//         "type": "string"
			//       },
			//       "DataTypeSpec": {
			//         "enum": [
			//           "AWS/ALARM_STATE"
			//         ],
			//         "type": "string"
			//       },
			//       "LogicalId": {
			//         "description": "Customer provided ID for property.",
			//         "maxLength": 256,
			//         "minLength": 1,
			//         "pattern": "",
			//         "type": "string"
			//       },
			//       "Name": {
			//         "description": "The name of the asset model property.",
			//         "type": "string"
			//       },
			//       "Type": {
			//         "additionalProperties": false,
			//         "description": "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
			//         "properties": {
			//           "Attribute": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "DefaultValue": {
			//                 "type": "string"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "Metric": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "Expression": {
			//                 "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
			//                 "type": "string"
			//               },
			//               "Variables": {
			//                 "description": "The list of variables used in the expression.",
			//                 "insertionOrder": false,
			//                 "items": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "Name": {
			//                       "description": "The friendly name of the variable to be used in the expression.",
			//                       "type": "string"
			//                     },
			//                     "Value": {
			//                       "additionalProperties": false,
			//                       "properties": {
			//                         "HierarchyLogicalId": {
			//                           "maxLength": 256,
			//                           "minLength": 1,
			//                           "pattern": "",
			//                           "type": "string"
			//                         },
			//                         "PropertyLogicalId": {
			//                           "maxLength": 256,
			//                           "minLength": 1,
			//                           "pattern": "",
			//                           "type": "string"
			//                         }
			//                       },
			//                       "required": [
			//                         "PropertyLogicalId"
			//                       ],
			//                       "type": "object"
			//                     }
			//                   },
			//                   "required": [
			//                     "Name",
			//                     "Value"
			//                   ],
			//                   "type": "object"
			//                 },
			//                 "type": "array"
			//               },
			//               "Window": {
			//                 "additionalProperties": false,
			//                 "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
			//                 "properties": {
			//                   "Tumbling": {
			//                     "additionalProperties": false,
			//                     "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
			//                     "properties": {
			//                       "Interval": {
			//                         "description": "The time interval for the tumbling window.",
			//                         "type": "string"
			//                       },
			//                       "Offset": {
			//                         "description": "The shift or reference point on timeline for the contiguous time intervals.",
			//                         "type": "string"
			//                       }
			//                     },
			//                     "required": [
			//                       "Interval"
			//                     ],
			//                     "type": "object"
			//                   }
			//                 },
			//                 "type": "object"
			//               }
			//             },
			//             "required": [
			//               "Expression",
			//               "Variables",
			//               "Window"
			//             ],
			//             "type": "object"
			//           },
			//           "Transform": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "Expression": {
			//                 "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
			//                 "type": "string"
			//               },
			//               "Variables": {
			//                 "description": "The list of variables used in the expression.",
			//                 "insertionOrder": false,
			//                 "items": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "Name": {
			//                       "description": "The friendly name of the variable to be used in the expression.",
			//                       "type": "string"
			//                     },
			//                     "Value": {
			//                       "additionalProperties": false,
			//                       "properties": {
			//                         "HierarchyLogicalId": {
			//                           "maxLength": 256,
			//                           "minLength": 1,
			//                           "pattern": "",
			//                           "type": "string"
			//                         },
			//                         "PropertyLogicalId": {
			//                           "maxLength": 256,
			//                           "minLength": 1,
			//                           "pattern": "",
			//                           "type": "string"
			//                         }
			//                       },
			//                       "required": [
			//                         "PropertyLogicalId"
			//                       ],
			//                       "type": "object"
			//                     }
			//                   },
			//                   "required": [
			//                     "Name",
			//                     "Value"
			//                   ],
			//                   "type": "object"
			//                 },
			//                 "type": "array"
			//               }
			//             },
			//             "required": [
			//               "Expression",
			//               "Variables"
			//             ],
			//             "type": "object"
			//           },
			//           "TypeName": {
			//             "enum": [
			//               "Measurement",
			//               "Attribute",
			//               "Transform",
			//               "Metric"
			//             ],
			//             "type": "string"
			//           }
			//         },
			//         "required": [
			//           "TypeName"
			//         ],
			//         "type": "object"
			//       },
			//       "Unit": {
			//         "description": "The unit of the asset model property, such as Newtons or RPM.",
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "LogicalId",
			//       "Name",
			//       "DataType",
			//       "Type"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Description: "The property definitions of the asset model. You can specify up to 200 properties per asset model.",
			// Multiset.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"data_type": {
						// Property: DataType
						// CloudFormation resource type schema:
						// {
						//   "enum": [
						//     "STRING",
						//     "INTEGER",
						//     "DOUBLE",
						//     "BOOLEAN",
						//     "STRUCT"
						//   ],
						//   "type": "string"
						// }
						Type:     types.StringType,
						Required: true,
					},
					"data_type_spec": {
						// Property: DataTypeSpec
						// CloudFormation resource type schema:
						// {
						//   "enum": [
						//     "AWS/ALARM_STATE"
						//   ],
						//   "type": "string"
						// }
						Type:     types.StringType,
						Optional: true,
					},
					"logical_id": {
						// Property: LogicalId
						// CloudFormation resource type schema:
						// {
						//   "description": "Customer provided ID for property.",
						//   "maxLength": 256,
						//   "minLength": 1,
						//   "pattern": "",
						//   "type": "string"
						// }
						Description: "Customer provided ID for property.",
						Type:        types.StringType,
						Required:    true,
					},
					"name": {
						// Property: Name
						// CloudFormation resource type schema:
						// {
						//   "description": "The name of the asset model property.",
						//   "type": "string"
						// }
						Description: "The name of the asset model property.",
						Type:        types.StringType,
						Required:    true,
					},
					"type": {
						// Property: Type
						// CloudFormation resource type schema:
						// {
						//   "additionalProperties": false,
						//   "description": "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
						//   "properties": {
						//     "Attribute": {
						//       "additionalProperties": false,
						//       "properties": {
						//         "DefaultValue": {
						//           "type": "string"
						//         }
						//       },
						//       "type": "object"
						//     },
						//     "Metric": {
						//       "additionalProperties": false,
						//       "properties": {
						//         "Expression": {
						//           "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
						//           "type": "string"
						//         },
						//         "Variables": {
						//           "description": "The list of variables used in the expression.",
						//           "insertionOrder": false,
						//           "items": {
						//             "additionalProperties": false,
						//             "properties": {
						//               "Name": {
						//                 "description": "The friendly name of the variable to be used in the expression.",
						//                 "type": "string"
						//               },
						//               "Value": {
						//                 "additionalProperties": false,
						//                 "properties": {
						//                   "HierarchyLogicalId": {
						//                     "maxLength": 256,
						//                     "minLength": 1,
						//                     "pattern": "",
						//                     "type": "string"
						//                   },
						//                   "PropertyLogicalId": {
						//                     "maxLength": 256,
						//                     "minLength": 1,
						//                     "pattern": "",
						//                     "type": "string"
						//                   }
						//                 },
						//                 "required": [
						//                   "PropertyLogicalId"
						//                 ],
						//                 "type": "object"
						//               }
						//             },
						//             "required": [
						//               "Name",
						//               "Value"
						//             ],
						//             "type": "object"
						//           },
						//           "type": "array"
						//         },
						//         "Window": {
						//           "additionalProperties": false,
						//           "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
						//           "properties": {
						//             "Tumbling": {
						//               "additionalProperties": false,
						//               "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
						//               "properties": {
						//                 "Interval": {
						//                   "description": "The time interval for the tumbling window.",
						//                   "type": "string"
						//                 },
						//                 "Offset": {
						//                   "description": "The shift or reference point on timeline for the contiguous time intervals.",
						//                   "type": "string"
						//                 }
						//               },
						//               "required": [
						//                 "Interval"
						//               ],
						//               "type": "object"
						//             }
						//           },
						//           "type": "object"
						//         }
						//       },
						//       "required": [
						//         "Expression",
						//         "Variables",
						//         "Window"
						//       ],
						//       "type": "object"
						//     },
						//     "Transform": {
						//       "additionalProperties": false,
						//       "properties": {
						//         "Expression": {
						//           "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
						//           "type": "string"
						//         },
						//         "Variables": {
						//           "description": "The list of variables used in the expression.",
						//           "insertionOrder": false,
						//           "items": {
						//             "additionalProperties": false,
						//             "properties": {
						//               "Name": {
						//                 "description": "The friendly name of the variable to be used in the expression.",
						//                 "type": "string"
						//               },
						//               "Value": {
						//                 "additionalProperties": false,
						//                 "properties": {
						//                   "HierarchyLogicalId": {
						//                     "maxLength": 256,
						//                     "minLength": 1,
						//                     "pattern": "",
						//                     "type": "string"
						//                   },
						//                   "PropertyLogicalId": {
						//                     "maxLength": 256,
						//                     "minLength": 1,
						//                     "pattern": "",
						//                     "type": "string"
						//                   }
						//                 },
						//                 "required": [
						//                   "PropertyLogicalId"
						//                 ],
						//                 "type": "object"
						//               }
						//             },
						//             "required": [
						//               "Name",
						//               "Value"
						//             ],
						//             "type": "object"
						//           },
						//           "type": "array"
						//         }
						//       },
						//       "required": [
						//         "Expression",
						//         "Variables"
						//       ],
						//       "type": "object"
						//     },
						//     "TypeName": {
						//       "enum": [
						//         "Measurement",
						//         "Attribute",
						//         "Transform",
						//         "Metric"
						//       ],
						//       "type": "string"
						//     }
						//   },
						//   "required": [
						//     "TypeName"
						//   ],
						//   "type": "object"
						// }
						Description: "Contains a property type, which can be one of attribute, measurement, metric, or transform.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"attribute": {
									// Property: Attribute
									// CloudFormation resource type schema:
									// {
									//   "additionalProperties": false,
									//   "properties": {
									//     "DefaultValue": {
									//       "type": "string"
									//     }
									//   },
									//   "type": "object"
									// }
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"default_value": {
												// Property: DefaultValue
												// CloudFormation resource type schema:
												// {
												//   "type": "string"
												// }
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"metric": {
									// Property: Metric
									// CloudFormation resource type schema:
									// {
									//   "additionalProperties": false,
									//   "properties": {
									//     "Expression": {
									//       "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
									//       "type": "string"
									//     },
									//     "Variables": {
									//       "description": "The list of variables used in the expression.",
									//       "insertionOrder": false,
									//       "items": {
									//         "additionalProperties": false,
									//         "properties": {
									//           "Name": {
									//             "description": "The friendly name of the variable to be used in the expression.",
									//             "type": "string"
									//           },
									//           "Value": {
									//             "additionalProperties": false,
									//             "properties": {
									//               "HierarchyLogicalId": {
									//                 "maxLength": 256,
									//                 "minLength": 1,
									//                 "pattern": "",
									//                 "type": "string"
									//               },
									//               "PropertyLogicalId": {
									//                 "maxLength": 256,
									//                 "minLength": 1,
									//                 "pattern": "",
									//                 "type": "string"
									//               }
									//             },
									//             "required": [
									//               "PropertyLogicalId"
									//             ],
									//             "type": "object"
									//           }
									//         },
									//         "required": [
									//           "Name",
									//           "Value"
									//         ],
									//         "type": "object"
									//       },
									//       "type": "array"
									//     },
									//     "Window": {
									//       "additionalProperties": false,
									//       "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
									//       "properties": {
									//         "Tumbling": {
									//           "additionalProperties": false,
									//           "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
									//           "properties": {
									//             "Interval": {
									//               "description": "The time interval for the tumbling window.",
									//               "type": "string"
									//             },
									//             "Offset": {
									//               "description": "The shift or reference point on timeline for the contiguous time intervals.",
									//               "type": "string"
									//             }
									//           },
									//           "required": [
									//             "Interval"
									//           ],
									//           "type": "object"
									//         }
									//       },
									//       "type": "object"
									//     }
									//   },
									//   "required": [
									//     "Expression",
									//     "Variables",
									//     "Window"
									//   ],
									//   "type": "object"
									// }
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"expression": {
												// Property: Expression
												// CloudFormation resource type schema:
												// {
												//   "description": "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
												//   "type": "string"
												// }
												Description: "The mathematical expression that defines the metric aggregation function. You can specify up to 10 functions per expression.",
												Type:        types.StringType,
												Required:    true,
											},
											"variables": {
												// Property: Variables
												// CloudFormation resource type schema:
												// {
												//   "description": "The list of variables used in the expression.",
												//   "insertionOrder": false,
												//   "items": {
												//     "additionalProperties": false,
												//     "properties": {
												//       "Name": {
												//         "description": "The friendly name of the variable to be used in the expression.",
												//         "type": "string"
												//       },
												//       "Value": {
												//         "additionalProperties": false,
												//         "properties": {
												//           "HierarchyLogicalId": {
												//             "maxLength": 256,
												//             "minLength": 1,
												//             "pattern": "",
												//             "type": "string"
												//           },
												//           "PropertyLogicalId": {
												//             "maxLength": 256,
												//             "minLength": 1,
												//             "pattern": "",
												//             "type": "string"
												//           }
												//         },
												//         "required": [
												//           "PropertyLogicalId"
												//         ],
												//         "type": "object"
												//       }
												//     },
												//     "required": [
												//       "Name",
												//       "Value"
												//     ],
												//     "type": "object"
												//   },
												//   "type": "array"
												// }
												Description: "The list of variables used in the expression.",
												// Multiset.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"name": {
															// Property: Name
															// CloudFormation resource type schema:
															// {
															//   "description": "The friendly name of the variable to be used in the expression.",
															//   "type": "string"
															// }
															Description: "The friendly name of the variable to be used in the expression.",
															Type:        types.StringType,
															Required:    true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															// {
															//   "additionalProperties": false,
															//   "properties": {
															//     "HierarchyLogicalId": {
															//       "maxLength": 256,
															//       "minLength": 1,
															//       "pattern": "",
															//       "type": "string"
															//     },
															//     "PropertyLogicalId": {
															//       "maxLength": 256,
															//       "minLength": 1,
															//       "pattern": "",
															//       "type": "string"
															//     }
															//   },
															//   "required": [
															//     "PropertyLogicalId"
															//   ],
															//   "type": "object"
															// }
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"hierarchy_logical_id": {
																		// Property: HierarchyLogicalId
																		// CloudFormation resource type schema:
																		// {
																		//   "maxLength": 256,
																		//   "minLength": 1,
																		//   "pattern": "",
																		//   "type": "string"
																		// }
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"property_logical_id": {
																		// Property: PropertyLogicalId
																		// CloudFormation resource type schema:
																		// {
																		//   "maxLength": 256,
																		//   "minLength": 1,
																		//   "pattern": "",
																		//   "type": "string"
																		// }
																		Type:     types.StringType,
																		Required: true,
																	},
																},
															),
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Required: true,
											},
											"window": {
												// Property: Window
												// CloudFormation resource type schema:
												// {
												//   "additionalProperties": false,
												//   "description": "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
												//   "properties": {
												//     "Tumbling": {
												//       "additionalProperties": false,
												//       "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
												//       "properties": {
												//         "Interval": {
												//           "description": "The time interval for the tumbling window.",
												//           "type": "string"
												//         },
												//         "Offset": {
												//           "description": "The shift or reference point on timeline for the contiguous time intervals.",
												//           "type": "string"
												//         }
												//       },
												//       "required": [
												//         "Interval"
												//       ],
												//       "type": "object"
												//     }
												//   },
												//   "type": "object"
												// }
												Description: "Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"tumbling": {
															// Property: Tumbling
															// CloudFormation resource type schema:
															// {
															//   "additionalProperties": false,
															//   "description": "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
															//   "properties": {
															//     "Interval": {
															//       "description": "The time interval for the tumbling window.",
															//       "type": "string"
															//     },
															//     "Offset": {
															//       "description": "The shift or reference point on timeline for the contiguous time intervals.",
															//       "type": "string"
															//     }
															//   },
															//   "required": [
															//     "Interval"
															//   ],
															//   "type": "object"
															// }
															Description: "Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time interval. This window is used in metric and aggregation computations.",
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"interval": {
																		// Property: Interval
																		// CloudFormation resource type schema:
																		// {
																		//   "description": "The time interval for the tumbling window.",
																		//   "type": "string"
																		// }
																		Description: "The time interval for the tumbling window.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"offset": {
																		// Property: Offset
																		// CloudFormation resource type schema:
																		// {
																		//   "description": "The shift or reference point on timeline for the contiguous time intervals.",
																		//   "type": "string"
																		// }
																		Description: "The shift or reference point on timeline for the contiguous time intervals.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																},
															),
															Optional: true,
														},
													},
												),
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"transform": {
									// Property: Transform
									// CloudFormation resource type schema:
									// {
									//   "additionalProperties": false,
									//   "properties": {
									//     "Expression": {
									//       "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
									//       "type": "string"
									//     },
									//     "Variables": {
									//       "description": "The list of variables used in the expression.",
									//       "insertionOrder": false,
									//       "items": {
									//         "additionalProperties": false,
									//         "properties": {
									//           "Name": {
									//             "description": "The friendly name of the variable to be used in the expression.",
									//             "type": "string"
									//           },
									//           "Value": {
									//             "additionalProperties": false,
									//             "properties": {
									//               "HierarchyLogicalId": {
									//                 "maxLength": 256,
									//                 "minLength": 1,
									//                 "pattern": "",
									//                 "type": "string"
									//               },
									//               "PropertyLogicalId": {
									//                 "maxLength": 256,
									//                 "minLength": 1,
									//                 "pattern": "",
									//                 "type": "string"
									//               }
									//             },
									//             "required": [
									//               "PropertyLogicalId"
									//             ],
									//             "type": "object"
									//           }
									//         },
									//         "required": [
									//           "Name",
									//           "Value"
									//         ],
									//         "type": "object"
									//       },
									//       "type": "array"
									//     }
									//   },
									//   "required": [
									//     "Expression",
									//     "Variables"
									//   ],
									//   "type": "object"
									// }
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"expression": {
												// Property: Expression
												// CloudFormation resource type schema:
												// {
												//   "description": "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
												//   "type": "string"
												// }
												Description: "The mathematical expression that defines the transformation function. You can specify up to 10 functions per expression.",
												Type:        types.StringType,
												Required:    true,
											},
											"variables": {
												// Property: Variables
												// CloudFormation resource type schema:
												// {
												//   "description": "The list of variables used in the expression.",
												//   "insertionOrder": false,
												//   "items": {
												//     "additionalProperties": false,
												//     "properties": {
												//       "Name": {
												//         "description": "The friendly name of the variable to be used in the expression.",
												//         "type": "string"
												//       },
												//       "Value": {
												//         "additionalProperties": false,
												//         "properties": {
												//           "HierarchyLogicalId": {
												//             "maxLength": 256,
												//             "minLength": 1,
												//             "pattern": "",
												//             "type": "string"
												//           },
												//           "PropertyLogicalId": {
												//             "maxLength": 256,
												//             "minLength": 1,
												//             "pattern": "",
												//             "type": "string"
												//           }
												//         },
												//         "required": [
												//           "PropertyLogicalId"
												//         ],
												//         "type": "object"
												//       }
												//     },
												//     "required": [
												//       "Name",
												//       "Value"
												//     ],
												//     "type": "object"
												//   },
												//   "type": "array"
												// }
												Description: "The list of variables used in the expression.",
												// Multiset.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"name": {
															// Property: Name
															// CloudFormation resource type schema:
															// {
															//   "description": "The friendly name of the variable to be used in the expression.",
															//   "type": "string"
															// }
															Description: "The friendly name of the variable to be used in the expression.",
															Type:        types.StringType,
															Required:    true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															// {
															//   "additionalProperties": false,
															//   "properties": {
															//     "HierarchyLogicalId": {
															//       "maxLength": 256,
															//       "minLength": 1,
															//       "pattern": "",
															//       "type": "string"
															//     },
															//     "PropertyLogicalId": {
															//       "maxLength": 256,
															//       "minLength": 1,
															//       "pattern": "",
															//       "type": "string"
															//     }
															//   },
															//   "required": [
															//     "PropertyLogicalId"
															//   ],
															//   "type": "object"
															// }
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"hierarchy_logical_id": {
																		// Property: HierarchyLogicalId
																		// CloudFormation resource type schema:
																		// {
																		//   "maxLength": 256,
																		//   "minLength": 1,
																		//   "pattern": "",
																		//   "type": "string"
																		// }
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"property_logical_id": {
																		// Property: PropertyLogicalId
																		// CloudFormation resource type schema:
																		// {
																		//   "maxLength": 256,
																		//   "minLength": 1,
																		//   "pattern": "",
																		//   "type": "string"
																		// }
																		Type:     types.StringType,
																		Required: true,
																	},
																},
															),
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"type_name": {
									// Property: TypeName
									// CloudFormation resource type schema:
									// {
									//   "enum": [
									//     "Measurement",
									//     "Attribute",
									//     "Transform",
									//     "Metric"
									//   ],
									//   "type": "string"
									// }
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
					"unit": {
						// Property: Unit
						// CloudFormation resource type schema:
						// {
						//   "description": "The unit of the asset model property, such as Newtons or RPM.",
						//   "type": "string"
						// }
						Description: "The unit of the asset model property, such as Newtons or RPM.",
						Type:        types.StringType,
						Optional:    true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "A list of key-value pairs that contain metadata for the asset model.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Key": {
			//         "type": "string"
			//       },
			//       "Value": {
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Value",
			//       "Key"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Description: "A list of key-value pairs that contain metadata for the asset model.",
			// Multiset.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						// {
						//   "type": "string"
						// }
						Type:     types.StringType,
						Required: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						// {
						//   "type": "string"
						// }
						Type:     types.StringType,
						Required: true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "Resource schema for AWS::IoTSiteWise::AssetModel",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::IoTSiteWise::AssetModel").WithTerraformTypeName("aws_iotsitewise_asset_model").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_iotsitewise_asset_model", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
