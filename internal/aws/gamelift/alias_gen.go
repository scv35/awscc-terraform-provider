// Code generated by generators/resource/main.go; DO NOT EDIT.

package gamelift

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_gamelift_alias", alias)
}

// alias returns the Terraform aws_gamelift_alias resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::GameLift::Alias resource type.
func alias(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"alias_id": {
			// Property: AliasId
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "Unique alias ID",
			     "type": "string"
			   }
			*/
			Description: "Unique alias ID",
			Type:        types.StringType,
			Computed:    true,
		},
		"description": {
			// Property: Description
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "A human-readable description of the alias.",
			     "maxLength": 1024,
			     "minLength": 1,
			     "type": "string"
			   }
			*/
			Description: "A human-readable description of the alias.",
			Type:        types.StringType,
			Optional:    true,
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "A descriptive label that is associated with an alias. Alias names do not need to be unique.",
			     "maxLength": 1024,
			     "minLength": 1,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "A descriptive label that is associated with an alias. Alias names do not need to be unique.",
			Type:        types.StringType,
			Required:    true,
		},
		"routing_strategy": {
			// Property: RoutingStrategy
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "FleetId": {
			         "description": "A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.",
			         "pattern": "",
			         "type": "string"
			       },
			       "Message": {
			         "description": "The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.",
			         "type": "string"
			       },
			       "Type": {
			         "description": "Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.",
			         "enum": [
			           "SIMPLE",
			           "TERMINAL"
			         ],
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/RoutingStrategy",
			     "required": [
			       "Type"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"fleet_id": {
						// Property: FleetId
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.",
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.",
						Type:        types.StringType,
						Optional:    true,
					},
					"message": {
						// Property: Message
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.",
						     "type": "string"
						   }
						*/
						Description: "The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.",
						Type:        types.StringType,
						Optional:    true,
					},
					"type": {
						// Property: Type
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.",
						     "enum": [
						       "SIMPLE",
						       "TERMINAL"
						     ],
						     "type": "string"
						   }
						*/
						Description: "Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.",
						Type:        types.StringType,
						Required:    true,
					},
				},
			),
			Required: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "The AWS::GameLift::Alias resource creates an alias for an Amazon GameLift (GameLift) fleet destination.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::GameLift::Alias").WithTerraformTypeName("aws_gamelift_alias").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_gamelift_alias", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
