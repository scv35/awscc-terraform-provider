// Code generated by generators/resource/main.go; DO NOT EDIT.

package appmesh

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_appmesh_virtual_service", virtualService)
}

// virtualService returns the Terraform aws_appmesh_virtual_service resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::AppMesh::VirtualService resource type.
func virtualService(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		// Property: Arn
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"arn": {
			Type:     types.StringType,
			Computed: true,
		},

		// Property: Id
		// PrimaryIdentifier: true
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"id": {
			Type:     types.StringType,
			Computed: true,
		},

		// Property: MeshName
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"mesh_name": {
			Type:     types.StringType,
			Required: true,
			// MeshName is a force-new attribute.
		},

		// Property: MeshOwner
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"mesh_owner": {
			Type:     types.StringType,
			Optional: true,
			// MeshOwner is a force-new attribute.
		},

		// Property: ResourceOwner
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"resource_owner": {
			Type:     types.StringType,
			Computed: true,
		},

		// Property: Spec
		// CloudFormation resource type schema:
		/*
		   {
		     "additionalProperties": false,
		     "properties": {
		       "Provider": {
		         "additionalProperties": false,
		         "properties": {
		           "VirtualNode": {
		             "additionalProperties": false,
		             "properties": {
		               "VirtualNodeName": {
		                 "type": "string"
		               }
		             },
		             "$ref": "#/definitions/VirtualNodeServiceProvider",
		             "required": [
		               "VirtualNodeName"
		             ],
		             "type": "object"
		           },
		           "VirtualRouter": {
		             "additionalProperties": false,
		             "properties": {
		               "VirtualRouterName": {
		                 "type": "string"
		               }
		             },
		             "$ref": "#/definitions/VirtualRouterServiceProvider",
		             "required": [
		               "VirtualRouterName"
		             ],
		             "type": "object"
		           }
		         },
		         "$ref": "#/definitions/VirtualServiceProvider",
		         "type": "object"
		       }
		     },
		     "$ref": "#/definitions/VirtualServiceSpec",
		     "type": "object"
		   }
		*/
		"spec": {
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					// Property: Provider
					// CloudFormation resource type schema:
					/*
					   {
					     "additionalProperties": false,
					     "properties": {
					       "VirtualNode": {
					         "additionalProperties": false,
					         "properties": {
					           "VirtualNodeName": {
					             "type": "string"
					           }
					         },
					         "$ref": "#/definitions/VirtualNodeServiceProvider",
					         "required": [
					           "VirtualNodeName"
					         ],
					         "type": "object"
					       },
					       "VirtualRouter": {
					         "additionalProperties": false,
					         "properties": {
					           "VirtualRouterName": {
					             "type": "string"
					           }
					         },
					         "$ref": "#/definitions/VirtualRouterServiceProvider",
					         "required": [
					           "VirtualRouterName"
					         ],
					         "type": "object"
					       }
					     },
					     "$ref": "#/definitions/VirtualServiceProvider",
					     "type": "object"
					   }
					*/
					"provider": {
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								// Property: VirtualRouter
								// CloudFormation resource type schema:
								/*
								   {
								     "additionalProperties": false,
								     "properties": {
								       "VirtualRouterName": {
								         "type": "string"
								       }
								     },
								     "$ref": "#/definitions/VirtualRouterServiceProvider",
								     "required": [
								       "VirtualRouterName"
								     ],
								     "type": "object"
								   }
								*/
								"virtual_router": {
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											// Property: VirtualRouterName
											// CloudFormation resource type schema:
											/*
											   {
											     "type": "string"
											   }
											*/
											"virtual_router_name": {
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								// Property: VirtualNode
								// CloudFormation resource type schema:
								/*
								   {
								     "additionalProperties": false,
								     "properties": {
								       "VirtualNodeName": {
								         "type": "string"
								       }
								     },
								     "$ref": "#/definitions/VirtualNodeServiceProvider",
								     "required": [
								       "VirtualNodeName"
								     ],
								     "type": "object"
								   }
								*/
								"virtual_node": {
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											// Property: VirtualNodeName
											// CloudFormation resource type schema:
											/*
											   {
											     "type": "string"
											   }
											*/
											"virtual_node_name": {
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
			),
			Required: true,
		},

		// Property: Tags
		// CloudFormation resource type schema:
		/*
		   {
		     "items": {
		       "additionalProperties": false,
		       "properties": {
		         "Key": {
		           "type": "string"
		         },
		         "Value": {
		           "type": "string"
		         }
		       },
		       "$ref": "#/definitions/Tag",
		       "required": [
		         "Value",
		         "Key"
		       ],
		       "type": "object"
		     },
		     "type": "array",
		     "uniqueItems": false
		   }
		*/
		"tags": {
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					// Property: Value
					// CloudFormation resource type schema:
					/*
					   {
					     "type": "string"
					   }
					*/
					"value": {
						Type:     types.StringType,
						Optional: true,
					},
					// Property: Key
					// CloudFormation resource type schema:
					/*
					   {
					     "type": "string"
					   }
					*/
					"key": {
						Type:     types.StringType,
						Optional: true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},

		// Property: Uid
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"uid": {
			Type:     types.StringType,
			Computed: true,
		},

		// Property: VirtualServiceName
		// CloudFormation resource type schema:
		/*
		   {
		     "type": "string"
		   }
		*/
		"virtual_service_name": {
			Type:     types.StringType,
			Required: true,
			// VirtualServiceName is a force-new attribute.
		},
	}

	schema := schema.Schema{
		Description: `Resource Type definition for AWS::AppMesh::VirtualService`,
		Version:     1,
		Attributes:  attributes,
	}

	var features ResourceTypeFeatures

	features |= ResourceTypeHasUpdatableAttribute

	resourceType, err := NewResourceType(
		"AWS::AppMesh::VirtualService", // CloudFormation type name
		"aws_appmesh_virtual_service",  // Terraform type name
		schema,                         // Terraform schema
		"/properties/Id",               // Primary identifier property path (JSON Pointer)
		[]string{},                     // Write-only property paths (JSON Pointer)
		features,
	)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema for %s:\n\n%v", "aws_appmesh_virtual_service", schema)

	return resourceType, nil
}
