// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package nimblestudio

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_nimblestudio_studio_component", studioComponentDataSource)
}

// studioComponentDataSource returns the Terraform awscc_nimblestudio_studio_component data source.
// This Terraform data source corresponds to the CloudFormation AWS::NimbleStudio::StudioComponent resource.
func studioComponentDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Configuration
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eThe configuration of the studio component, based on component type.\u003c/p\u003e",
		//	  "properties": {
		//	    "ActiveDirectoryConfiguration": {
		//	      "additionalProperties": false,
		//	      "description": "\u003cp\u003eThe configuration for a Microsoft Active Directory (Microsoft AD) studio\n            resource.\u003c/p\u003e",
		//	      "properties": {
		//	        "ComputerAttributes": {
		//	          "description": "\u003cp\u003eA collection of custom attributes for an Active Directory computer.\u003c/p\u003e",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "\u003cp\u003eAn LDAP attribute of an Active Directory computer account, in the form of a name:value\n            pair.\u003c/p\u003e",
		//	            "properties": {
		//	              "Name": {
		//	                "description": "\u003cp\u003eThe name for the LDAP attribute.\u003c/p\u003e",
		//	                "maxLength": 40,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "\u003cp\u003eThe value for the LDAP attribute.\u003c/p\u003e",
		//	                "maxLength": 64,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "maxItems": 50,
		//	          "minItems": 0,
		//	          "type": "array"
		//	        },
		//	        "DirectoryId": {
		//	          "description": "\u003cp\u003eThe directory ID of the Directory Service for Microsoft Active Directory to access\n            using this studio component.\u003c/p\u003e",
		//	          "type": "string"
		//	        },
		//	        "OrganizationalUnitDistinguishedName": {
		//	          "description": "\u003cp\u003eThe distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.\u003c/p\u003e",
		//	          "maxLength": 2000,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "ComputeFarmConfiguration": {
		//	      "additionalProperties": false,
		//	      "description": "\u003cp\u003eThe configuration for a render farm that is associated with a studio resource.\u003c/p\u003e",
		//	      "properties": {
		//	        "ActiveDirectoryUser": {
		//	          "description": "\u003cp\u003eThe name of an Active Directory user that is used on ComputeFarm worker\n            instances.\u003c/p\u003e",
		//	          "type": "string"
		//	        },
		//	        "Endpoint": {
		//	          "description": "\u003cp\u003eThe endpoint of the ComputeFarm that is accessed by the studio component\n            resource.\u003c/p\u003e",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "LicenseServiceConfiguration": {
		//	      "additionalProperties": false,
		//	      "description": "\u003cp\u003eThe configuration for a license service that is associated with a studio\n            resource.\u003c/p\u003e",
		//	      "properties": {
		//	        "Endpoint": {
		//	          "description": "\u003cp\u003eThe endpoint of the license service that is accessed by the studio component\n            resource.\u003c/p\u003e",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "SharedFileSystemConfiguration": {
		//	      "additionalProperties": false,
		//	      "description": "\u003cp\u003eThe configuration for a shared file storage system that is associated with a studio\n            resource.\u003c/p\u003e",
		//	      "properties": {
		//	        "Endpoint": {
		//	          "description": "\u003cp\u003eThe endpoint of the shared file system that is accessed by the studio component\n            resource.\u003c/p\u003e",
		//	          "type": "string"
		//	        },
		//	        "FileSystemId": {
		//	          "description": "\u003cp\u003eThe unique identifier for a file system.\u003c/p\u003e",
		//	          "type": "string"
		//	        },
		//	        "LinuxMountPoint": {
		//	          "description": "\u003cp\u003eThe mount location for a shared file system on a Linux virtual workstation.\u003c/p\u003e",
		//	          "maxLength": 128,
		//	          "minLength": 0,
		//	          "pattern": "^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$",
		//	          "type": "string"
		//	        },
		//	        "ShareName": {
		//	          "description": "\u003cp\u003eThe name of the file share.\u003c/p\u003e",
		//	          "type": "string"
		//	        },
		//	        "WindowsMountDrive": {
		//	          "description": "\u003cp\u003eThe mount location for a shared file system on a Windows virtual workstation.\u003c/p\u003e",
		//	          "pattern": "^[A-Z]$",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ActiveDirectoryConfiguration
				"active_directory_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ComputerAttributes
						"computer_attributes": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Name
									"name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "<p>The name for the LDAP attribute.</p>",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "<p>The value for the LDAP attribute.</p>",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "<p>A collection of custom attributes for an Active Directory computer.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DirectoryId
						"directory_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The directory ID of the Directory Service for Microsoft Active Directory to access\n            using this studio component.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: OrganizationalUnitDistinguishedName
						"organizational_unit_distinguished_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "<p>The configuration for a Microsoft Active Directory (Microsoft AD) studio\n            resource.</p>",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComputeFarmConfiguration
				"compute_farm_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ActiveDirectoryUser
						"active_directory_user": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The name of an Active Directory user that is used on ComputeFarm worker\n            instances.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Endpoint
						"endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The endpoint of the ComputeFarm that is accessed by the studio component\n            resource.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "<p>The configuration for a render farm that is associated with a studio resource.</p>",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LicenseServiceConfiguration
				"license_service_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Endpoint
						"endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The endpoint of the license service that is accessed by the studio component\n            resource.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "<p>The configuration for a license service that is associated with a studio\n            resource.</p>",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SharedFileSystemConfiguration
				"shared_file_system_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Endpoint
						"endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The endpoint of the shared file system that is accessed by the studio component\n            resource.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FileSystemId
						"file_system_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The unique identifier for a file system.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LinuxMountPoint
						"linux_mount_point": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The mount location for a shared file system on a Linux virtual workstation.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShareName
						"share_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The name of the file share.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: WindowsMountDrive
						"windows_mount_drive": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "<p>The mount location for a shared file system on a Windows virtual workstation.</p>",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "<p>The configuration for a shared file storage system that is associated with a studio\n            resource.</p>",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "<p>The configuration of the studio component, based on component type.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eThe description.\u003c/p\u003e",
		//	  "maxLength": 256,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "<p>The description.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ec2SecurityGroupIds
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eThe EC2 security groups that control access to the studio component.\u003c/p\u003e",
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "maxItems": 30,
		//	  "minItems": 0,
		//	  "type": "array"
		//	}
		"ec_2_security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "<p>The EC2 security groups that control access to the studio component.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InitializationScripts
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eInitialization scripts for studio components.\u003c/p\u003e",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "\u003cp\u003eInitialization scripts for studio components.\u003c/p\u003e",
		//	    "properties": {
		//	      "LaunchProfileProtocolVersion": {
		//	        "description": "\u003cp\u003eThe version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".\u003c/p\u003e",
		//	        "maxLength": 10,
		//	        "minLength": 0,
		//	        "pattern": "^2021\\-03\\-31$",
		//	        "type": "string"
		//	      },
		//	      "Platform": {
		//	        "enum": [
		//	          "LINUX",
		//	          "WINDOWS"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "RunContext": {
		//	        "enum": [
		//	          "SYSTEM_INITIALIZATION",
		//	          "USER_INITIALIZATION"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "Script": {
		//	        "description": "\u003cp\u003eThe initialization script.\u003c/p\u003e",
		//	        "maxLength": 5120,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array"
		//	}
		"initialization_scripts": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: LaunchProfileProtocolVersion
					"launch_profile_protocol_version": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Platform
					"platform": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: RunContext
					"run_context": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Script
					"script": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>The initialization script.</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "<p>Initialization scripts for studio components.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eThe name for the studio component.\u003c/p\u003e",
		//	  "maxLength": 64,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "<p>The name for the studio component.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RuntimeRoleArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 2048,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"runtime_role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: ScriptParameters
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eParameters for the studio component scripts.\u003c/p\u003e",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "\u003cp\u003eA parameter for a studio component script, in the form of a key:value pair.\u003c/p\u003e",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "\u003cp\u003eA script parameter key.\u003c/p\u003e",
		//	        "maxLength": 64,
		//	        "minLength": 1,
		//	        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "\u003cp\u003eA script parameter value.\u003c/p\u003e",
		//	        "maxLength": 256,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "maxItems": 30,
		//	  "minItems": 0,
		//	  "type": "array"
		//	}
		"script_parameters": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>A script parameter key.</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>A script parameter value.</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "<p>Parameters for the studio component scripts.</p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecureInitializationRoleArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 2048,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"secure_initialization_role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: StudioComponentId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "type": "string"
		//	}
		"studio_component_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: StudioId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "\u003cp\u003eThe studio ID. \u003c/p\u003e",
		//	  "type": "string"
		//	}
		"studio_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "<p>The studio ID. </p>",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Subtype
		// CloudFormation resource type schema:
		//
		//	{
		//	  "enum": [
		//	    "AWS_MANAGED_MICROSOFT_AD",
		//	    "AMAZON_FSX_FOR_WINDOWS",
		//	    "AMAZON_FSX_FOR_LUSTRE",
		//	    "CUSTOM"
		//	  ],
		//	  "type": "string"
		//	}
		"subtype": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "patternProperties": {
		//	    "": {
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"tags":              // Pattern: ""
		schema.MapAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Type
		// CloudFormation resource type schema:
		//
		//	{
		//	  "enum": [
		//	    "ACTIVE_DIRECTORY",
		//	    "SHARED_FILE_SYSTEM",
		//	    "COMPUTE_FARM",
		//	    "LICENSE_SERVICE",
		//	    "CUSTOM"
		//	  ],
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::NimbleStudio::StudioComponent",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::NimbleStudio::StudioComponent").WithTerraformTypeName("awscc_nimblestudio_studio_component")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"active_directory_configuration":         "ActiveDirectoryConfiguration",
		"active_directory_user":                  "ActiveDirectoryUser",
		"compute_farm_configuration":             "ComputeFarmConfiguration",
		"computer_attributes":                    "ComputerAttributes",
		"configuration":                          "Configuration",
		"description":                            "Description",
		"directory_id":                           "DirectoryId",
		"ec_2_security_group_ids":                "Ec2SecurityGroupIds",
		"endpoint":                               "Endpoint",
		"file_system_id":                         "FileSystemId",
		"initialization_scripts":                 "InitializationScripts",
		"key":                                    "Key",
		"launch_profile_protocol_version":        "LaunchProfileProtocolVersion",
		"license_service_configuration":          "LicenseServiceConfiguration",
		"linux_mount_point":                      "LinuxMountPoint",
		"name":                                   "Name",
		"organizational_unit_distinguished_name": "OrganizationalUnitDistinguishedName",
		"platform":                               "Platform",
		"run_context":                            "RunContext",
		"runtime_role_arn":                       "RuntimeRoleArn",
		"script":                                 "Script",
		"script_parameters":                      "ScriptParameters",
		"secure_initialization_role_arn":         "SecureInitializationRoleArn",
		"share_name":                             "ShareName",
		"shared_file_system_configuration":       "SharedFileSystemConfiguration",
		"studio_component_id":                    "StudioComponentId",
		"studio_id":                              "StudioId",
		"subtype":                                "Subtype",
		"tags":                                   "Tags",
		"type":                                   "Type",
		"value":                                  "Value",
		"windows_mount_drive":                    "WindowsMountDrive",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
