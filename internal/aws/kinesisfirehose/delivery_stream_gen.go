// Code generated by generators/resource/main.go; DO NOT EDIT.

package kinesisfirehose

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_kinesisfirehose_delivery_stream", deliveryStreamResourceType)
}

// deliveryStreamResourceType returns the Terraform aws_kinesisfirehose_delivery_stream resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::KinesisFirehose::DeliveryStream resource type.
func deliveryStreamResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"arn": {
			// Property: Arn
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"delivery_stream_encryption_configuration_input": {
			// Property: DeliveryStreamEncryptionConfigurationInput
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "KeyARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "KeyType": {
			         "enum": [
			           "AWS_OWNED_CMK",
			           "CUSTOMER_MANAGED_CMK"
			         ],
			         "type": "string"
			       }
			     },
			     "required": [
			       "KeyType"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"key_arn": {
						// Property: KeyARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"key_type": {
						// Property: KeyType
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "AWS_OWNED_CMK",
						       "CUSTOMER_MANAGED_CMK"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"delivery_stream_name": {
			// Property: DeliveryStreamName
			// CloudFormation resource type schema:
			/*
			   {
			     "maxLength": 64,
			     "minLength": 1,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Optional: true,
			Computed: true,
			// DeliveryStreamName is a force-new attribute.
		},
		"delivery_stream_type": {
			// Property: DeliveryStreamType
			// CloudFormation resource type schema:
			/*
			   {
			     "enum": [
			       "DirectPut",
			       "KinesisStreamAsSource"
			     ],
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Optional: true,
			Computed: true,
			// DeliveryStreamType is a force-new attribute.
		},
		"elasticsearch_destination_configuration": {
			// Property: ElasticsearchDestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "BufferingHints": {
			         "additionalProperties": false,
			         "properties": {
			           "IntervalInSeconds": {
			             "type": "integer"
			           },
			           "SizeInMBs": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "ClusterEndpoint": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "DomainARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "IndexName": {
			         "maxLength": 80,
			         "minLength": 1,
			         "type": "string"
			       },
			       "IndexRotationPeriod": {
			         "enum": [
			           "NoRotation",
			           "OneHour",
			           "OneDay",
			           "OneWeek",
			           "OneMonth"
			         ],
			         "type": "string"
			       },
			       "ProcessingConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "Processors": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "Parameters": {
			                   "items": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "ParameterName": {
			                         "type": "string"
			                       },
			                       "ParameterValue": {
			                         "type": "string"
			                       }
			                     },
			                     "required": [
			                       "ParameterValue",
			                       "ParameterName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array",
			                   "uniqueItems": true
			                 },
			                 "Type": {
			                   "enum": [
			                     "Lambda"
			                   ],
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "Type"
			               ],
			               "type": "object"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "type": "object"
			       },
			       "RetryOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "DurationInSeconds": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "S3BackupMode": {
			         "enum": [
			           "FailedDocumentsOnly",
			           "AllDocuments"
			         ],
			         "type": "string"
			       },
			       "S3Configuration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       },
			       "TypeName": {
			         "maxLength": 100,
			         "minLength": 0,
			         "type": "string"
			       },
			       "VpcConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "SecurityGroupIds": {
			             "items": {
			               "maxLength": 1024,
			               "minLength": 1,
			               "type": "string"
			             },
			             "maxItems": 5,
			             "minItems": 1,
			             "type": "array",
			             "uniqueItems": true
			           },
			           "SubnetIds": {
			             "items": {
			               "maxLength": 1024,
			               "minLength": 1,
			               "type": "string"
			             },
			             "maxItems": 16,
			             "minItems": 1,
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "required": [
			           "RoleARN",
			           "SubnetIds",
			           "SecurityGroupIds"
			         ],
			         "type": "object"
			       }
			     },
			     "required": [
			       "IndexName",
			       "S3Configuration",
			       "RoleARN"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"buffering_hints": {
						// Property: BufferingHints
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "IntervalInSeconds": {
						         "type": "integer"
						       },
						       "SizeInMBs": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"interval_in_seconds": {
									// Property: IntervalInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
								"size_in_m_bs": {
									// Property: SizeInMBs
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cluster_endpoint": {
						// Property: ClusterEndpoint
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"domain_arn": {
						// Property: DomainARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"index_name": {
						// Property: IndexName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 80,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"index_rotation_period": {
						// Property: IndexRotationPeriod
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "NoRotation",
						       "OneHour",
						       "OneDay",
						       "OneWeek",
						       "OneMonth"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"processing_configuration": {
						// Property: ProcessingConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "Processors": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "Parameters": {
						               "items": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "ParameterName": {
						                     "type": "string"
						                   },
						                   "ParameterValue": {
						                     "type": "string"
						                   }
						                 },
						                 "required": [
						                   "ParameterValue",
						                   "ParameterName"
						                 ],
						                 "type": "object"
						               },
						               "type": "array",
						               "uniqueItems": true
						             },
						             "Type": {
						               "enum": [
						                 "Lambda"
						               ],
						               "type": "string"
						             }
						           },
						           "required": [
						             "Type"
						           ],
						           "type": "object"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"processors": {
									// Property: Processors
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "Parameters": {
									           "items": {
									             "additionalProperties": false,
									             "properties": {
									               "ParameterName": {
									                 "type": "string"
									               },
									               "ParameterValue": {
									                 "type": "string"
									               }
									             },
									             "required": [
									               "ParameterValue",
									               "ParameterName"
									             ],
									             "type": "object"
									           },
									           "type": "array",
									           "uniqueItems": true
									         },
									         "Type": {
									           "enum": [
									             "Lambda"
									           ],
									           "type": "string"
									         }
									       },
									       "required": [
									         "Type"
									       ],
									       "type": "object"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"parameters": {
												// Property: Parameters
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "ParameterName": {
												           "type": "string"
												         },
												         "ParameterValue": {
												           "type": "string"
												         }
												       },
												       "required": [
												         "ParameterValue",
												         "ParameterName"
												       ],
												       "type": "object"
												     },
												     "type": "array",
												     "uniqueItems": true
												   }
												*/
												// Ordered set.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"parameter_name": {
															// Property: ParameterName
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
														"parameter_value": {
															// Property: ParameterValue
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "Lambda"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"retry_options": {
						// Property: RetryOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DurationInSeconds": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"duration_in_seconds": {
									// Property: DurationInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"s3_backup_mode": {
						// Property: S3BackupMode
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "FailedDocumentsOnly",
						       "AllDocuments"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"s3_configuration": {
						// Property: S3Configuration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
					"type_name": {
						// Property: TypeName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 100,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"vpc_configuration": {
						// Property: VpcConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "SecurityGroupIds": {
						         "items": {
						           "maxLength": 1024,
						           "minLength": 1,
						           "type": "string"
						         },
						         "maxItems": 5,
						         "minItems": 1,
						         "type": "array",
						         "uniqueItems": true
						       },
						       "SubnetIds": {
						         "items": {
						           "maxLength": 1024,
						           "minLength": 1,
						           "type": "string"
						         },
						         "maxItems": 16,
						         "minItems": 1,
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "required": [
						       "RoleARN",
						       "SubnetIds",
						       "SecurityGroupIds"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"security_group_ids": {
									// Property: SecurityGroupIds
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "maxLength": 1024,
									       "minLength": 1,
									       "type": "string"
									     },
									     "maxItems": 5,
									     "minItems": 1,
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Type:     types.ListType{ElemType: types.StringType},
									Required: true,
								},
								"subnet_ids": {
									// Property: SubnetIds
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "maxLength": 1024,
									       "minLength": 1,
									       "type": "string"
									     },
									     "maxItems": 16,
									     "minItems": 1,
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Type:     types.ListType{ElemType: types.StringType},
									Required: true,
								},
							},
						),
						Optional: true,
						Computed: true,
						// VpcConfiguration is a force-new attribute.
					},
				},
			),
			Optional: true,
		},
		"extended_s3_destination_configuration": {
			// Property: ExtendedS3DestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "BucketARN": {
			         "maxLength": 2048,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "BufferingHints": {
			         "additionalProperties": false,
			         "properties": {
			           "IntervalInSeconds": {
			             "type": "integer"
			           },
			           "SizeInMBs": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "CompressionFormat": {
			         "enum": [
			           "UNCOMPRESSED",
			           "GZIP",
			           "ZIP",
			           "Snappy",
			           "HADOOP_SNAPPY"
			         ],
			         "type": "string"
			       },
			       "DataFormatConversionConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "InputFormatConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "Deserializer": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "HiveJsonSerDe": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "TimestampFormats": {
			                         "items": {
			                           "type": "string"
			                         },
			                         "type": "array",
			                         "uniqueItems": true
			                       }
			                     },
			                     "type": "object"
			                   },
			                   "OpenXJsonSerDe": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "CaseInsensitive": {
			                         "type": "boolean"
			                       },
			                       "ColumnToJsonKeyMappings": {
			                         "patternProperties": {
			                           "": {
			                             "type": "string"
			                           }
			                         },
			                         "type": "object"
			                       },
			                       "ConvertDotsInJsonKeysToUnderscores": {
			                         "type": "boolean"
			                       }
			                     },
			                     "type": "object"
			                   }
			                 },
			                 "type": "object"
			               }
			             },
			             "type": "object"
			           },
			           "OutputFormatConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "Serializer": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "OrcSerDe": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "BlockSizeBytes": {
			                         "type": "integer"
			                       },
			                       "BloomFilterColumns": {
			                         "items": {
			                           "type": "string"
			                         },
			                         "type": "array",
			                         "uniqueItems": true
			                       },
			                       "BloomFilterFalsePositiveProbability": {
			                         "type": "number"
			                       },
			                       "Compression": {
			                         "type": "string"
			                       },
			                       "DictionaryKeyThreshold": {
			                         "type": "number"
			                       },
			                       "EnablePadding": {
			                         "type": "boolean"
			                       },
			                       "FormatVersion": {
			                         "type": "string"
			                       },
			                       "PaddingTolerance": {
			                         "type": "number"
			                       },
			                       "RowIndexStride": {
			                         "type": "integer"
			                       },
			                       "StripeSizeBytes": {
			                         "type": "integer"
			                       }
			                     },
			                     "type": "object"
			                   },
			                   "ParquetSerDe": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "BlockSizeBytes": {
			                         "type": "integer"
			                       },
			                       "Compression": {
			                         "type": "string"
			                       },
			                       "EnableDictionaryCompression": {
			                         "type": "boolean"
			                       },
			                       "MaxPaddingBytes": {
			                         "type": "integer"
			                       },
			                       "PageSizeBytes": {
			                         "type": "integer"
			                       },
			                       "WriterVersion": {
			                         "type": "string"
			                       }
			                     },
			                     "type": "object"
			                   }
			                 },
			                 "type": "object"
			               }
			             },
			             "type": "object"
			           },
			           "SchemaConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "CatalogId": {
			                 "type": "string"
			               },
			               "DatabaseName": {
			                 "type": "string"
			               },
			               "Region": {
			                 "type": "string"
			               },
			               "RoleARN": {
			                 "maxLength": 512,
			                 "minLength": 1,
			                 "pattern": "",
			                 "type": "string"
			               },
			               "TableName": {
			                 "type": "string"
			               },
			               "VersionId": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           }
			         },
			         "type": "object"
			       },
			       "EncryptionConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "KMSEncryptionConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "AWSKMSKeyARN": {
			                 "type": "string"
			               }
			             },
			             "required": [
			               "AWSKMSKeyARN"
			             ],
			             "type": "object"
			           },
			           "NoEncryptionConfig": {
			             "enum": [
			               "NoEncryption"
			             ],
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "ErrorOutputPrefix": {
			         "maxLength": 1024,
			         "minLength": 0,
			         "type": "string"
			       },
			       "Prefix": {
			         "maxLength": 1024,
			         "minLength": 0,
			         "type": "string"
			       },
			       "ProcessingConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "Processors": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "Parameters": {
			                   "items": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "ParameterName": {
			                         "type": "string"
			                       },
			                       "ParameterValue": {
			                         "type": "string"
			                       }
			                     },
			                     "required": [
			                       "ParameterValue",
			                       "ParameterName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array",
			                   "uniqueItems": true
			                 },
			                 "Type": {
			                   "enum": [
			                     "Lambda"
			                   ],
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "Type"
			               ],
			               "type": "object"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "type": "object"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "S3BackupConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       },
			       "S3BackupMode": {
			         "enum": [
			           "Disabled",
			           "Enabled"
			         ],
			         "type": "string"
			       }
			     },
			     "required": [
			       "BucketARN",
			       "RoleARN"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"bucket_arn": {
						// Property: BucketARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 2048,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"buffering_hints": {
						// Property: BufferingHints
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "IntervalInSeconds": {
						         "type": "integer"
						       },
						       "SizeInMBs": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"interval_in_seconds": {
									// Property: IntervalInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
								"size_in_m_bs": {
									// Property: SizeInMBs
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"compression_format": {
						// Property: CompressionFormat
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "UNCOMPRESSED",
						       "GZIP",
						       "ZIP",
						       "Snappy",
						       "HADOOP_SNAPPY"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"data_format_conversion_configuration": {
						// Property: DataFormatConversionConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "InputFormatConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "Deserializer": {
						             "additionalProperties": false,
						             "properties": {
						               "HiveJsonSerDe": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "TimestampFormats": {
						                     "items": {
						                       "type": "string"
						                     },
						                     "type": "array",
						                     "uniqueItems": true
						                   }
						                 },
						                 "type": "object"
						               },
						               "OpenXJsonSerDe": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "CaseInsensitive": {
						                     "type": "boolean"
						                   },
						                   "ColumnToJsonKeyMappings": {
						                     "patternProperties": {
						                       "": {
						                         "type": "string"
						                       }
						                     },
						                     "type": "object"
						                   },
						                   "ConvertDotsInJsonKeysToUnderscores": {
						                     "type": "boolean"
						                   }
						                 },
						                 "type": "object"
						               }
						             },
						             "type": "object"
						           }
						         },
						         "type": "object"
						       },
						       "OutputFormatConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "Serializer": {
						             "additionalProperties": false,
						             "properties": {
						               "OrcSerDe": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "BlockSizeBytes": {
						                     "type": "integer"
						                   },
						                   "BloomFilterColumns": {
						                     "items": {
						                       "type": "string"
						                     },
						                     "type": "array",
						                     "uniqueItems": true
						                   },
						                   "BloomFilterFalsePositiveProbability": {
						                     "type": "number"
						                   },
						                   "Compression": {
						                     "type": "string"
						                   },
						                   "DictionaryKeyThreshold": {
						                     "type": "number"
						                   },
						                   "EnablePadding": {
						                     "type": "boolean"
						                   },
						                   "FormatVersion": {
						                     "type": "string"
						                   },
						                   "PaddingTolerance": {
						                     "type": "number"
						                   },
						                   "RowIndexStride": {
						                     "type": "integer"
						                   },
						                   "StripeSizeBytes": {
						                     "type": "integer"
						                   }
						                 },
						                 "type": "object"
						               },
						               "ParquetSerDe": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "BlockSizeBytes": {
						                     "type": "integer"
						                   },
						                   "Compression": {
						                     "type": "string"
						                   },
						                   "EnableDictionaryCompression": {
						                     "type": "boolean"
						                   },
						                   "MaxPaddingBytes": {
						                     "type": "integer"
						                   },
						                   "PageSizeBytes": {
						                     "type": "integer"
						                   },
						                   "WriterVersion": {
						                     "type": "string"
						                   }
						                 },
						                 "type": "object"
						               }
						             },
						             "type": "object"
						           }
						         },
						         "type": "object"
						       },
						       "SchemaConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "CatalogId": {
						             "type": "string"
						           },
						           "DatabaseName": {
						             "type": "string"
						           },
						           "Region": {
						             "type": "string"
						           },
						           "RoleARN": {
						             "maxLength": 512,
						             "minLength": 1,
						             "pattern": "",
						             "type": "string"
						           },
						           "TableName": {
						             "type": "string"
						           },
						           "VersionId": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"input_format_configuration": {
									// Property: InputFormatConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Deserializer": {
									         "additionalProperties": false,
									         "properties": {
									           "HiveJsonSerDe": {
									             "additionalProperties": false,
									             "properties": {
									               "TimestampFormats": {
									                 "items": {
									                   "type": "string"
									                 },
									                 "type": "array",
									                 "uniqueItems": true
									               }
									             },
									             "type": "object"
									           },
									           "OpenXJsonSerDe": {
									             "additionalProperties": false,
									             "properties": {
									               "CaseInsensitive": {
									                 "type": "boolean"
									               },
									               "ColumnToJsonKeyMappings": {
									                 "patternProperties": {
									                   "": {
									                     "type": "string"
									                   }
									                 },
									                 "type": "object"
									               },
									               "ConvertDotsInJsonKeysToUnderscores": {
									                 "type": "boolean"
									               }
									             },
									             "type": "object"
									           }
									         },
									         "type": "object"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"deserializer": {
												// Property: Deserializer
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "HiveJsonSerDe": {
												         "additionalProperties": false,
												         "properties": {
												           "TimestampFormats": {
												             "items": {
												               "type": "string"
												             },
												             "type": "array",
												             "uniqueItems": true
												           }
												         },
												         "type": "object"
												       },
												       "OpenXJsonSerDe": {
												         "additionalProperties": false,
												         "properties": {
												           "CaseInsensitive": {
												             "type": "boolean"
												           },
												           "ColumnToJsonKeyMappings": {
												             "patternProperties": {
												               "": {
												                 "type": "string"
												               }
												             },
												             "type": "object"
												           },
												           "ConvertDotsInJsonKeysToUnderscores": {
												             "type": "boolean"
												           }
												         },
												         "type": "object"
												       }
												     },
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"hive_json_ser_de": {
															// Property: HiveJsonSerDe
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "TimestampFormats": {
															         "items": {
															           "type": "string"
															         },
															         "type": "array",
															         "uniqueItems": true
															       }
															     },
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"timestamp_formats": {
																		// Property: TimestampFormats
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "items": {
																		       "type": "string"
																		     },
																		     "type": "array",
																		     "uniqueItems": true
																		   }
																		*/
																		// Ordered set.
																		Type:     types.ListType{ElemType: types.StringType},
																		Optional: true,
																	},
																},
															),
															Optional: true,
														},
														"open_x_json_ser_de": {
															// Property: OpenXJsonSerDe
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "CaseInsensitive": {
															         "type": "boolean"
															       },
															       "ColumnToJsonKeyMappings": {
															         "patternProperties": {
															           "": {
															             "type": "string"
															           }
															         },
															         "type": "object"
															       },
															       "ConvertDotsInJsonKeysToUnderscores": {
															         "type": "boolean"
															       }
															     },
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"case_insensitive": {
																		// Property: CaseInsensitive
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "boolean"
																		   }
																		*/
																		Type:     types.BoolType,
																		Optional: true,
																	},
																	"column_to_json_key_mappings": {
																		// Property: ColumnToJsonKeyMappings
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "patternProperties": {
																		       "": {
																		         "type": "string"
																		       }
																		     },
																		     "type": "object"
																		   }
																		*/
																		// Pattern: ""
																		Type:     types.MapType{ElemType: types.StringType},
																		Optional: true,
																	},
																	"convert_dots_in_json_keys_to_underscores": {
																		// Property: ConvertDotsInJsonKeysToUnderscores
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "boolean"
																		   }
																		*/
																		Type:     types.BoolType,
																		Optional: true,
																	},
																},
															),
															Optional: true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"output_format_configuration": {
									// Property: OutputFormatConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Serializer": {
									         "additionalProperties": false,
									         "properties": {
									           "OrcSerDe": {
									             "additionalProperties": false,
									             "properties": {
									               "BlockSizeBytes": {
									                 "type": "integer"
									               },
									               "BloomFilterColumns": {
									                 "items": {
									                   "type": "string"
									                 },
									                 "type": "array",
									                 "uniqueItems": true
									               },
									               "BloomFilterFalsePositiveProbability": {
									                 "type": "number"
									               },
									               "Compression": {
									                 "type": "string"
									               },
									               "DictionaryKeyThreshold": {
									                 "type": "number"
									               },
									               "EnablePadding": {
									                 "type": "boolean"
									               },
									               "FormatVersion": {
									                 "type": "string"
									               },
									               "PaddingTolerance": {
									                 "type": "number"
									               },
									               "RowIndexStride": {
									                 "type": "integer"
									               },
									               "StripeSizeBytes": {
									                 "type": "integer"
									               }
									             },
									             "type": "object"
									           },
									           "ParquetSerDe": {
									             "additionalProperties": false,
									             "properties": {
									               "BlockSizeBytes": {
									                 "type": "integer"
									               },
									               "Compression": {
									                 "type": "string"
									               },
									               "EnableDictionaryCompression": {
									                 "type": "boolean"
									               },
									               "MaxPaddingBytes": {
									                 "type": "integer"
									               },
									               "PageSizeBytes": {
									                 "type": "integer"
									               },
									               "WriterVersion": {
									                 "type": "string"
									               }
									             },
									             "type": "object"
									           }
									         },
									         "type": "object"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"serializer": {
												// Property: Serializer
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "OrcSerDe": {
												         "additionalProperties": false,
												         "properties": {
												           "BlockSizeBytes": {
												             "type": "integer"
												           },
												           "BloomFilterColumns": {
												             "items": {
												               "type": "string"
												             },
												             "type": "array",
												             "uniqueItems": true
												           },
												           "BloomFilterFalsePositiveProbability": {
												             "type": "number"
												           },
												           "Compression": {
												             "type": "string"
												           },
												           "DictionaryKeyThreshold": {
												             "type": "number"
												           },
												           "EnablePadding": {
												             "type": "boolean"
												           },
												           "FormatVersion": {
												             "type": "string"
												           },
												           "PaddingTolerance": {
												             "type": "number"
												           },
												           "RowIndexStride": {
												             "type": "integer"
												           },
												           "StripeSizeBytes": {
												             "type": "integer"
												           }
												         },
												         "type": "object"
												       },
												       "ParquetSerDe": {
												         "additionalProperties": false,
												         "properties": {
												           "BlockSizeBytes": {
												             "type": "integer"
												           },
												           "Compression": {
												             "type": "string"
												           },
												           "EnableDictionaryCompression": {
												             "type": "boolean"
												           },
												           "MaxPaddingBytes": {
												             "type": "integer"
												           },
												           "PageSizeBytes": {
												             "type": "integer"
												           },
												           "WriterVersion": {
												             "type": "string"
												           }
												         },
												         "type": "object"
												       }
												     },
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"orc_ser_de": {
															// Property: OrcSerDe
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "BlockSizeBytes": {
															         "type": "integer"
															       },
															       "BloomFilterColumns": {
															         "items": {
															           "type": "string"
															         },
															         "type": "array",
															         "uniqueItems": true
															       },
															       "BloomFilterFalsePositiveProbability": {
															         "type": "number"
															       },
															       "Compression": {
															         "type": "string"
															       },
															       "DictionaryKeyThreshold": {
															         "type": "number"
															       },
															       "EnablePadding": {
															         "type": "boolean"
															       },
															       "FormatVersion": {
															         "type": "string"
															       },
															       "PaddingTolerance": {
															         "type": "number"
															       },
															       "RowIndexStride": {
															         "type": "integer"
															       },
															       "StripeSizeBytes": {
															         "type": "integer"
															       }
															     },
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"block_size_bytes": {
																		// Property: BlockSizeBytes
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"bloom_filter_columns": {
																		// Property: BloomFilterColumns
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "items": {
																		       "type": "string"
																		     },
																		     "type": "array",
																		     "uniqueItems": true
																		   }
																		*/
																		// Ordered set.
																		Type:     types.ListType{ElemType: types.StringType},
																		Optional: true,
																	},
																	"bloom_filter_false_positive_probability": {
																		// Property: BloomFilterFalsePositiveProbability
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "number"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"compression": {
																		// Property: Compression
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"dictionary_key_threshold": {
																		// Property: DictionaryKeyThreshold
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "number"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"enable_padding": {
																		// Property: EnablePadding
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "boolean"
																		   }
																		*/
																		Type:     types.BoolType,
																		Optional: true,
																	},
																	"format_version": {
																		// Property: FormatVersion
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"padding_tolerance": {
																		// Property: PaddingTolerance
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "number"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"row_index_stride": {
																		// Property: RowIndexStride
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"stripe_size_bytes": {
																		// Property: StripeSizeBytes
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																},
															),
															Optional: true,
														},
														"parquet_ser_de": {
															// Property: ParquetSerDe
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "BlockSizeBytes": {
															         "type": "integer"
															       },
															       "Compression": {
															         "type": "string"
															       },
															       "EnableDictionaryCompression": {
															         "type": "boolean"
															       },
															       "MaxPaddingBytes": {
															         "type": "integer"
															       },
															       "PageSizeBytes": {
															         "type": "integer"
															       },
															       "WriterVersion": {
															         "type": "string"
															       }
															     },
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"block_size_bytes": {
																		// Property: BlockSizeBytes
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"compression": {
																		// Property: Compression
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"enable_dictionary_compression": {
																		// Property: EnableDictionaryCompression
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "boolean"
																		   }
																		*/
																		Type:     types.BoolType,
																		Optional: true,
																	},
																	"max_padding_bytes": {
																		// Property: MaxPaddingBytes
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"page_size_bytes": {
																		// Property: PageSizeBytes
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"writer_version": {
																		// Property: WriterVersion
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																},
															),
															Optional: true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"schema_configuration": {
									// Property: SchemaConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "CatalogId": {
									         "type": "string"
									       },
									       "DatabaseName": {
									         "type": "string"
									       },
									       "Region": {
									         "type": "string"
									       },
									       "RoleARN": {
									         "maxLength": 512,
									         "minLength": 1,
									         "pattern": "",
									         "type": "string"
									       },
									       "TableName": {
									         "type": "string"
									       },
									       "VersionId": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"catalog_id": {
												// Property: CatalogId
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"database_name": {
												// Property: DatabaseName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"region": {
												// Property: Region
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"role_arn": {
												// Property: RoleARN
												// CloudFormation resource type schema:
												/*
												   {
												     "maxLength": 512,
												     "minLength": 1,
												     "pattern": "",
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"table_name": {
												// Property: TableName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"version_id": {
												// Property: VersionId
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"encryption_configuration": {
						// Property: EncryptionConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "KMSEncryptionConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "AWSKMSKeyARN": {
						             "type": "string"
						           }
						         },
						         "required": [
						           "AWSKMSKeyARN"
						         ],
						         "type": "object"
						       },
						       "NoEncryptionConfig": {
						         "enum": [
						           "NoEncryption"
						         ],
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"kms_encryption_config": {
									// Property: KMSEncryptionConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "AWSKMSKeyARN": {
									         "type": "string"
									       }
									     },
									     "required": [
									       "AWSKMSKeyARN"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"awskms_key_arn": {
												// Property: AWSKMSKeyARN
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"no_encryption_config": {
									// Property: NoEncryptionConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "NoEncryption"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"error_output_prefix": {
						// Property: ErrorOutputPrefix
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 1024,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"prefix": {
						// Property: Prefix
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 1024,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"processing_configuration": {
						// Property: ProcessingConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "Processors": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "Parameters": {
						               "items": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "ParameterName": {
						                     "type": "string"
						                   },
						                   "ParameterValue": {
						                     "type": "string"
						                   }
						                 },
						                 "required": [
						                   "ParameterValue",
						                   "ParameterName"
						                 ],
						                 "type": "object"
						               },
						               "type": "array",
						               "uniqueItems": true
						             },
						             "Type": {
						               "enum": [
						                 "Lambda"
						               ],
						               "type": "string"
						             }
						           },
						           "required": [
						             "Type"
						           ],
						           "type": "object"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"processors": {
									// Property: Processors
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "Parameters": {
									           "items": {
									             "additionalProperties": false,
									             "properties": {
									               "ParameterName": {
									                 "type": "string"
									               },
									               "ParameterValue": {
									                 "type": "string"
									               }
									             },
									             "required": [
									               "ParameterValue",
									               "ParameterName"
									             ],
									             "type": "object"
									           },
									           "type": "array",
									           "uniqueItems": true
									         },
									         "Type": {
									           "enum": [
									             "Lambda"
									           ],
									           "type": "string"
									         }
									       },
									       "required": [
									         "Type"
									       ],
									       "type": "object"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"parameters": {
												// Property: Parameters
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "ParameterName": {
												           "type": "string"
												         },
												         "ParameterValue": {
												           "type": "string"
												         }
												       },
												       "required": [
												         "ParameterValue",
												         "ParameterName"
												       ],
												       "type": "object"
												     },
												     "type": "array",
												     "uniqueItems": true
												   }
												*/
												// Ordered set.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"parameter_name": {
															// Property: ParameterName
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
														"parameter_value": {
															// Property: ParameterValue
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "Lambda"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"s3_backup_configuration": {
						// Property: S3BackupConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"s3_backup_mode": {
						// Property: S3BackupMode
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "Disabled",
						       "Enabled"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
				},
			),
			Optional: true,
		},
		"http_endpoint_destination_configuration": {
			// Property: HttpEndpointDestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "BufferingHints": {
			         "additionalProperties": false,
			         "properties": {
			           "IntervalInSeconds": {
			             "type": "integer"
			           },
			           "SizeInMBs": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "EndpointConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "AccessKey": {
			             "maxLength": 4096,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Name": {
			             "maxLength": 256,
			             "minLength": 1,
			             "type": "string"
			           },
			           "Url": {
			             "maxLength": 1000,
			             "minLength": 1,
			             "type": "string"
			           }
			         },
			         "required": [
			           "Url"
			         ],
			         "type": "object"
			       },
			       "ProcessingConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "Processors": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "Parameters": {
			                   "items": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "ParameterName": {
			                         "type": "string"
			                       },
			                       "ParameterValue": {
			                         "type": "string"
			                       }
			                     },
			                     "required": [
			                       "ParameterValue",
			                       "ParameterName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array",
			                   "uniqueItems": true
			                 },
			                 "Type": {
			                   "enum": [
			                     "Lambda"
			                   ],
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "Type"
			               ],
			               "type": "object"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "type": "object"
			       },
			       "RequestConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "CommonAttributes": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "AttributeName": {
			                   "maxLength": 256,
			                   "minLength": 1,
			                   "type": "string"
			                 },
			                 "AttributeValue": {
			                   "maxLength": 1024,
			                   "minLength": 0,
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "AttributeName",
			                 "AttributeValue"
			               ],
			               "type": "object"
			             },
			             "maxItems": 50,
			             "minItems": 0,
			             "type": "array",
			             "uniqueItems": true
			           },
			           "ContentEncoding": {
			             "enum": [
			               "NONE",
			               "GZIP"
			             ],
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "RetryOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "DurationInSeconds": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "S3BackupMode": {
			         "type": "string"
			       },
			       "S3Configuration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       }
			     },
			     "required": [
			       "EndpointConfiguration",
			       "S3Configuration"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"buffering_hints": {
						// Property: BufferingHints
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "IntervalInSeconds": {
						         "type": "integer"
						       },
						       "SizeInMBs": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"interval_in_seconds": {
									// Property: IntervalInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
								"size_in_m_bs": {
									// Property: SizeInMBs
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"endpoint_configuration": {
						// Property: EndpointConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "AccessKey": {
						         "maxLength": 4096,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Name": {
						         "maxLength": 256,
						         "minLength": 1,
						         "type": "string"
						       },
						       "Url": {
						         "maxLength": 1000,
						         "minLength": 1,
						         "type": "string"
						       }
						     },
						     "required": [
						       "Url"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"access_key": {
									// Property: AccessKey
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 4096,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"name": {
									// Property: Name
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 256,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"url": {
									// Property: Url
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1000,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
					"processing_configuration": {
						// Property: ProcessingConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "Processors": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "Parameters": {
						               "items": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "ParameterName": {
						                     "type": "string"
						                   },
						                   "ParameterValue": {
						                     "type": "string"
						                   }
						                 },
						                 "required": [
						                   "ParameterValue",
						                   "ParameterName"
						                 ],
						                 "type": "object"
						               },
						               "type": "array",
						               "uniqueItems": true
						             },
						             "Type": {
						               "enum": [
						                 "Lambda"
						               ],
						               "type": "string"
						             }
						           },
						           "required": [
						             "Type"
						           ],
						           "type": "object"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"processors": {
									// Property: Processors
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "Parameters": {
									           "items": {
									             "additionalProperties": false,
									             "properties": {
									               "ParameterName": {
									                 "type": "string"
									               },
									               "ParameterValue": {
									                 "type": "string"
									               }
									             },
									             "required": [
									               "ParameterValue",
									               "ParameterName"
									             ],
									             "type": "object"
									           },
									           "type": "array",
									           "uniqueItems": true
									         },
									         "Type": {
									           "enum": [
									             "Lambda"
									           ],
									           "type": "string"
									         }
									       },
									       "required": [
									         "Type"
									       ],
									       "type": "object"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"parameters": {
												// Property: Parameters
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "ParameterName": {
												           "type": "string"
												         },
												         "ParameterValue": {
												           "type": "string"
												         }
												       },
												       "required": [
												         "ParameterValue",
												         "ParameterName"
												       ],
												       "type": "object"
												     },
												     "type": "array",
												     "uniqueItems": true
												   }
												*/
												// Ordered set.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"parameter_name": {
															// Property: ParameterName
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
														"parameter_value": {
															// Property: ParameterValue
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "Lambda"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"request_configuration": {
						// Property: RequestConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "CommonAttributes": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "AttributeName": {
						               "maxLength": 256,
						               "minLength": 1,
						               "type": "string"
						             },
						             "AttributeValue": {
						               "maxLength": 1024,
						               "minLength": 0,
						               "type": "string"
						             }
						           },
						           "required": [
						             "AttributeName",
						             "AttributeValue"
						           ],
						           "type": "object"
						         },
						         "maxItems": 50,
						         "minItems": 0,
						         "type": "array",
						         "uniqueItems": true
						       },
						       "ContentEncoding": {
						         "enum": [
						           "NONE",
						           "GZIP"
						         ],
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"common_attributes": {
									// Property: CommonAttributes
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "AttributeName": {
									           "maxLength": 256,
									           "minLength": 1,
									           "type": "string"
									         },
									         "AttributeValue": {
									           "maxLength": 1024,
									           "minLength": 0,
									           "type": "string"
									         }
									       },
									       "required": [
									         "AttributeName",
									         "AttributeValue"
									       ],
									       "type": "object"
									     },
									     "maxItems": 50,
									     "minItems": 0,
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"attribute_name": {
												// Property: AttributeName
												// CloudFormation resource type schema:
												/*
												   {
												     "maxLength": 256,
												     "minLength": 1,
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
											"attribute_value": {
												// Property: AttributeValue
												// CloudFormation resource type schema:
												/*
												   {
												     "maxLength": 1024,
												     "minLength": 0,
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{
											MinItems: 0,
											MaxItems: 50,
										},
									),
									Optional: true,
								},
								"content_encoding": {
									// Property: ContentEncoding
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "NONE",
									       "GZIP"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"retry_options": {
						// Property: RetryOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DurationInSeconds": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"duration_in_seconds": {
									// Property: DurationInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"s3_backup_mode": {
						// Property: S3BackupMode
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"s3_configuration": {
						// Property: S3Configuration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"kinesis_stream_source_configuration": {
			// Property: KinesisStreamSourceConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "KinesisStreamARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       }
			     },
			     "required": [
			       "RoleARN",
			       "KinesisStreamARN"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"kinesis_stream_arn": {
						// Property: KinesisStreamARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
			),
			Optional: true,
			Computed: true,
			// KinesisStreamSourceConfiguration is a force-new attribute.
		},
		"redshift_destination_configuration": {
			// Property: RedshiftDestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "ClusterJDBCURL": {
			         "maxLength": 512,
			         "minLength": 1,
			         "type": "string"
			       },
			       "CopyCommand": {
			         "additionalProperties": false,
			         "properties": {
			           "CopyOptions": {
			             "maxLength": 204800,
			             "minLength": 0,
			             "type": "string"
			           },
			           "DataTableColumns": {
			             "maxLength": 204800,
			             "minLength": 0,
			             "type": "string"
			           },
			           "DataTableName": {
			             "maxLength": 512,
			             "minLength": 1,
			             "type": "string"
			           }
			         },
			         "required": [
			           "DataTableName"
			         ],
			         "type": "object"
			       },
			       "Password": {
			         "maxLength": 512,
			         "minLength": 6,
			         "type": "string"
			       },
			       "ProcessingConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "Processors": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "Parameters": {
			                   "items": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "ParameterName": {
			                         "type": "string"
			                       },
			                       "ParameterValue": {
			                         "type": "string"
			                       }
			                     },
			                     "required": [
			                       "ParameterValue",
			                       "ParameterName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array",
			                   "uniqueItems": true
			                 },
			                 "Type": {
			                   "enum": [
			                     "Lambda"
			                   ],
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "Type"
			               ],
			               "type": "object"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "type": "object"
			       },
			       "RetryOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "DurationInSeconds": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "S3BackupConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       },
			       "S3BackupMode": {
			         "enum": [
			           "Disabled",
			           "Enabled"
			         ],
			         "type": "string"
			       },
			       "S3Configuration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       },
			       "Username": {
			         "maxLength": 512,
			         "minLength": 1,
			         "type": "string"
			       }
			     },
			     "required": [
			       "S3Configuration",
			       "Username",
			       "ClusterJDBCURL",
			       "CopyCommand",
			       "RoleARN",
			       "Password"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cluster_jdbcurl": {
						// Property: ClusterJDBCURL
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"copy_command": {
						// Property: CopyCommand
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "CopyOptions": {
						         "maxLength": 204800,
						         "minLength": 0,
						         "type": "string"
						       },
						       "DataTableColumns": {
						         "maxLength": 204800,
						         "minLength": 0,
						         "type": "string"
						       },
						       "DataTableName": {
						         "maxLength": 512,
						         "minLength": 1,
						         "type": "string"
						       }
						     },
						     "required": [
						       "DataTableName"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"copy_options": {
									// Property: CopyOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 204800,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"data_table_columns": {
									// Property: DataTableColumns
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 204800,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"data_table_name": {
									// Property: DataTableName
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
					"password": {
						// Property: Password
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 6,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"processing_configuration": {
						// Property: ProcessingConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "Processors": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "Parameters": {
						               "items": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "ParameterName": {
						                     "type": "string"
						                   },
						                   "ParameterValue": {
						                     "type": "string"
						                   }
						                 },
						                 "required": [
						                   "ParameterValue",
						                   "ParameterName"
						                 ],
						                 "type": "object"
						               },
						               "type": "array",
						               "uniqueItems": true
						             },
						             "Type": {
						               "enum": [
						                 "Lambda"
						               ],
						               "type": "string"
						             }
						           },
						           "required": [
						             "Type"
						           ],
						           "type": "object"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"processors": {
									// Property: Processors
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "Parameters": {
									           "items": {
									             "additionalProperties": false,
									             "properties": {
									               "ParameterName": {
									                 "type": "string"
									               },
									               "ParameterValue": {
									                 "type": "string"
									               }
									             },
									             "required": [
									               "ParameterValue",
									               "ParameterName"
									             ],
									             "type": "object"
									           },
									           "type": "array",
									           "uniqueItems": true
									         },
									         "Type": {
									           "enum": [
									             "Lambda"
									           ],
									           "type": "string"
									         }
									       },
									       "required": [
									         "Type"
									       ],
									       "type": "object"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"parameters": {
												// Property: Parameters
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "ParameterName": {
												           "type": "string"
												         },
												         "ParameterValue": {
												           "type": "string"
												         }
												       },
												       "required": [
												         "ParameterValue",
												         "ParameterName"
												       ],
												       "type": "object"
												     },
												     "type": "array",
												     "uniqueItems": true
												   }
												*/
												// Ordered set.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"parameter_name": {
															// Property: ParameterName
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
														"parameter_value": {
															// Property: ParameterValue
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "Lambda"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"retry_options": {
						// Property: RetryOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DurationInSeconds": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"duration_in_seconds": {
									// Property: DurationInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"s3_backup_configuration": {
						// Property: S3BackupConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"s3_backup_mode": {
						// Property: S3BackupMode
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "Disabled",
						       "Enabled"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"s3_configuration": {
						// Property: S3Configuration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
					"username": {
						// Property: Username
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"s3_destination_configuration": {
			// Property: S3DestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "BucketARN": {
			         "maxLength": 2048,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       },
			       "BufferingHints": {
			         "additionalProperties": false,
			         "properties": {
			           "IntervalInSeconds": {
			             "type": "integer"
			           },
			           "SizeInMBs": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "CompressionFormat": {
			         "enum": [
			           "UNCOMPRESSED",
			           "GZIP",
			           "ZIP",
			           "Snappy",
			           "HADOOP_SNAPPY"
			         ],
			         "type": "string"
			       },
			       "EncryptionConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "KMSEncryptionConfig": {
			             "additionalProperties": false,
			             "properties": {
			               "AWSKMSKeyARN": {
			                 "type": "string"
			               }
			             },
			             "required": [
			               "AWSKMSKeyARN"
			             ],
			             "type": "object"
			           },
			           "NoEncryptionConfig": {
			             "enum": [
			               "NoEncryption"
			             ],
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "ErrorOutputPrefix": {
			         "maxLength": 1024,
			         "minLength": 0,
			         "type": "string"
			       },
			       "Prefix": {
			         "maxLength": 1024,
			         "minLength": 0,
			         "type": "string"
			       },
			       "RoleARN": {
			         "maxLength": 512,
			         "minLength": 1,
			         "pattern": "",
			         "type": "string"
			       }
			     },
			     "required": [
			       "BucketARN",
			       "RoleARN"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"bucket_arn": {
						// Property: BucketARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 2048,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"buffering_hints": {
						// Property: BufferingHints
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "IntervalInSeconds": {
						         "type": "integer"
						       },
						       "SizeInMBs": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"interval_in_seconds": {
									// Property: IntervalInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
								"size_in_m_bs": {
									// Property: SizeInMBs
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"compression_format": {
						// Property: CompressionFormat
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "UNCOMPRESSED",
						       "GZIP",
						       "ZIP",
						       "Snappy",
						       "HADOOP_SNAPPY"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"encryption_configuration": {
						// Property: EncryptionConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "KMSEncryptionConfig": {
						         "additionalProperties": false,
						         "properties": {
						           "AWSKMSKeyARN": {
						             "type": "string"
						           }
						         },
						         "required": [
						           "AWSKMSKeyARN"
						         ],
						         "type": "object"
						       },
						       "NoEncryptionConfig": {
						         "enum": [
						           "NoEncryption"
						         ],
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"kms_encryption_config": {
									// Property: KMSEncryptionConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "AWSKMSKeyARN": {
									         "type": "string"
									       }
									     },
									     "required": [
									       "AWSKMSKeyARN"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"awskms_key_arn": {
												// Property: AWSKMSKeyARN
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"no_encryption_config": {
									// Property: NoEncryptionConfig
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "NoEncryption"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"error_output_prefix": {
						// Property: ErrorOutputPrefix
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 1024,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"prefix": {
						// Property: Prefix
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 1024,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"role_arn": {
						// Property: RoleARN
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 512,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"splunk_destination_configuration": {
			// Property: SplunkDestinationConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "CloudWatchLoggingOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "LogGroupName": {
			             "type": "string"
			           },
			           "LogStreamName": {
			             "type": "string"
			           }
			         },
			         "type": "object"
			       },
			       "HECAcknowledgmentTimeoutInSeconds": {
			         "type": "integer"
			       },
			       "HECEndpoint": {
			         "maxLength": 2048,
			         "minLength": 0,
			         "type": "string"
			       },
			       "HECEndpointType": {
			         "enum": [
			           "Raw",
			           "Event"
			         ],
			         "type": "string"
			       },
			       "HECToken": {
			         "maxLength": 2048,
			         "minLength": 0,
			         "type": "string"
			       },
			       "ProcessingConfiguration": {
			         "additionalProperties": false,
			         "properties": {
			           "Enabled": {
			             "type": "boolean"
			           },
			           "Processors": {
			             "items": {
			               "additionalProperties": false,
			               "properties": {
			                 "Parameters": {
			                   "items": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "ParameterName": {
			                         "type": "string"
			                       },
			                       "ParameterValue": {
			                         "type": "string"
			                       }
			                     },
			                     "required": [
			                       "ParameterValue",
			                       "ParameterName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array",
			                   "uniqueItems": true
			                 },
			                 "Type": {
			                   "enum": [
			                     "Lambda"
			                   ],
			                   "type": "string"
			                 }
			               },
			               "required": [
			                 "Type"
			               ],
			               "type": "object"
			             },
			             "type": "array",
			             "uniqueItems": true
			           }
			         },
			         "type": "object"
			       },
			       "RetryOptions": {
			         "additionalProperties": false,
			         "properties": {
			           "DurationInSeconds": {
			             "type": "integer"
			           }
			         },
			         "type": "object"
			       },
			       "S3BackupMode": {
			         "type": "string"
			       },
			       "S3Configuration": {
			         "additionalProperties": false,
			         "properties": {
			           "BucketARN": {
			             "maxLength": 2048,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "BufferingHints": {
			             "additionalProperties": false,
			             "properties": {
			               "IntervalInSeconds": {
			                 "type": "integer"
			               },
			               "SizeInMBs": {
			                 "type": "integer"
			               }
			             },
			             "type": "object"
			           },
			           "CloudWatchLoggingOptions": {
			             "additionalProperties": false,
			             "properties": {
			               "Enabled": {
			                 "type": "boolean"
			               },
			               "LogGroupName": {
			                 "type": "string"
			               },
			               "LogStreamName": {
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "CompressionFormat": {
			             "enum": [
			               "UNCOMPRESSED",
			               "GZIP",
			               "ZIP",
			               "Snappy",
			               "HADOOP_SNAPPY"
			             ],
			             "type": "string"
			           },
			           "EncryptionConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "KMSEncryptionConfig": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "AWSKMSKeyARN": {
			                     "type": "string"
			                   }
			                 },
			                 "required": [
			                   "AWSKMSKeyARN"
			                 ],
			                 "type": "object"
			               },
			               "NoEncryptionConfig": {
			                 "enum": [
			                   "NoEncryption"
			                 ],
			                 "type": "string"
			               }
			             },
			             "type": "object"
			           },
			           "ErrorOutputPrefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "Prefix": {
			             "maxLength": 1024,
			             "minLength": 0,
			             "type": "string"
			           },
			           "RoleARN": {
			             "maxLength": 512,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "required": [
			           "BucketARN",
			           "RoleARN"
			         ],
			         "type": "object"
			       }
			     },
			     "required": [
			       "HECEndpoint",
			       "S3Configuration",
			       "HECToken",
			       "HECEndpointType"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"cloud_watch_logging_options": {
						// Property: CloudWatchLoggingOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "LogGroupName": {
						         "type": "string"
						       },
						       "LogStreamName": {
						         "type": "string"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"log_group_name": {
									// Property: LogGroupName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"log_stream_name": {
									// Property: LogStreamName
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"hec_acknowledgment_timeout_in_seconds": {
						// Property: HECAcknowledgmentTimeoutInSeconds
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "integer"
						   }
						*/
						Type:     types.NumberType,
						Optional: true,
					},
					"hec_endpoint": {
						// Property: HECEndpoint
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 2048,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"hec_endpoint_type": {
						// Property: HECEndpointType
						// CloudFormation resource type schema:
						/*
						   {
						     "enum": [
						       "Raw",
						       "Event"
						     ],
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"hec_token": {
						// Property: HECToken
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 2048,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"processing_configuration": {
						// Property: ProcessingConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       },
						       "Processors": {
						         "items": {
						           "additionalProperties": false,
						           "properties": {
						             "Parameters": {
						               "items": {
						                 "additionalProperties": false,
						                 "properties": {
						                   "ParameterName": {
						                     "type": "string"
						                   },
						                   "ParameterValue": {
						                     "type": "string"
						                   }
						                 },
						                 "required": [
						                   "ParameterValue",
						                   "ParameterName"
						                 ],
						                 "type": "object"
						               },
						               "type": "array",
						               "uniqueItems": true
						             },
						             "Type": {
						               "enum": [
						                 "Lambda"
						               ],
						               "type": "string"
						             }
						           },
						           "required": [
						             "Type"
						           ],
						           "type": "object"
						         },
						         "type": "array",
						         "uniqueItems": true
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
								"processors": {
									// Property: Processors
									// CloudFormation resource type schema:
									/*
									   {
									     "items": {
									       "additionalProperties": false,
									       "properties": {
									         "Parameters": {
									           "items": {
									             "additionalProperties": false,
									             "properties": {
									               "ParameterName": {
									                 "type": "string"
									               },
									               "ParameterValue": {
									                 "type": "string"
									               }
									             },
									             "required": [
									               "ParameterValue",
									               "ParameterName"
									             ],
									             "type": "object"
									           },
									           "type": "array",
									           "uniqueItems": true
									         },
									         "Type": {
									           "enum": [
									             "Lambda"
									           ],
									           "type": "string"
									         }
									       },
									       "required": [
									         "Type"
									       ],
									       "type": "object"
									     },
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									// Ordered set.
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"parameters": {
												// Property: Parameters
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "ParameterName": {
												           "type": "string"
												         },
												         "ParameterValue": {
												           "type": "string"
												         }
												       },
												       "required": [
												         "ParameterValue",
												         "ParameterName"
												       ],
												       "type": "object"
												     },
												     "type": "array",
												     "uniqueItems": true
												   }
												*/
												// Ordered set.
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"parameter_name": {
															// Property: ParameterName
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
														"parameter_value": {
															// Property: ParameterValue
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "Lambda"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Required: true,
											},
										},
										schema.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"retry_options": {
						// Property: RetryOptions
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "DurationInSeconds": {
						         "type": "integer"
						       }
						     },
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"duration_in_seconds": {
									// Property: DurationInSeconds
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"s3_backup_mode": {
						// Property: S3BackupMode
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"s3_configuration": {
						// Property: S3Configuration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "BucketARN": {
						         "maxLength": 2048,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "BufferingHints": {
						         "additionalProperties": false,
						         "properties": {
						           "IntervalInSeconds": {
						             "type": "integer"
						           },
						           "SizeInMBs": {
						             "type": "integer"
						           }
						         },
						         "type": "object"
						       },
						       "CloudWatchLoggingOptions": {
						         "additionalProperties": false,
						         "properties": {
						           "Enabled": {
						             "type": "boolean"
						           },
						           "LogGroupName": {
						             "type": "string"
						           },
						           "LogStreamName": {
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "CompressionFormat": {
						         "enum": [
						           "UNCOMPRESSED",
						           "GZIP",
						           "ZIP",
						           "Snappy",
						           "HADOOP_SNAPPY"
						         ],
						         "type": "string"
						       },
						       "EncryptionConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "KMSEncryptionConfig": {
						             "additionalProperties": false,
						             "properties": {
						               "AWSKMSKeyARN": {
						                 "type": "string"
						               }
						             },
						             "required": [
						               "AWSKMSKeyARN"
						             ],
						             "type": "object"
						           },
						           "NoEncryptionConfig": {
						             "enum": [
						               "NoEncryption"
						             ],
						             "type": "string"
						           }
						         },
						         "type": "object"
						       },
						       "ErrorOutputPrefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "Prefix": {
						         "maxLength": 1024,
						         "minLength": 0,
						         "type": "string"
						       },
						       "RoleARN": {
						         "maxLength": 512,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "required": [
						       "BucketARN",
						       "RoleARN"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"bucket_arn": {
									// Property: BucketARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 2048,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"buffering_hints": {
									// Property: BufferingHints
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "IntervalInSeconds": {
									         "type": "integer"
									       },
									       "SizeInMBs": {
									         "type": "integer"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"interval_in_seconds": {
												// Property: IntervalInSeconds
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"size_in_m_bs": {
												// Property: SizeInMBs
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"cloud_watch_logging_options": {
									// Property: CloudWatchLoggingOptions
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       },
									       "LogGroupName": {
									         "type": "string"
									       },
									       "LogStreamName": {
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"log_group_name": {
												// Property: LogGroupName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
											"log_stream_name": {
												// Property: LogStreamName
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"compression_format": {
									// Property: CompressionFormat
									// CloudFormation resource type schema:
									/*
									   {
									     "enum": [
									       "UNCOMPRESSED",
									       "GZIP",
									       "ZIP",
									       "Snappy",
									       "HADOOP_SNAPPY"
									     ],
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"encryption_configuration": {
									// Property: EncryptionConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "KMSEncryptionConfig": {
									         "additionalProperties": false,
									         "properties": {
									           "AWSKMSKeyARN": {
									             "type": "string"
									           }
									         },
									         "required": [
									           "AWSKMSKeyARN"
									         ],
									         "type": "object"
									       },
									       "NoEncryptionConfig": {
									         "enum": [
									           "NoEncryption"
									         ],
									         "type": "string"
									       }
									     },
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"kms_encryption_config": {
												// Property: KMSEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "AWSKMSKeyARN": {
												         "type": "string"
												       }
												     },
												     "required": [
												       "AWSKMSKeyARN"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"awskms_key_arn": {
															// Property: AWSKMSKeyARN
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"no_encryption_config": {
												// Property: NoEncryptionConfig
												// CloudFormation resource type schema:
												/*
												   {
												     "enum": [
												       "NoEncryption"
												     ],
												     "type": "string"
												   }
												*/
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"error_output_prefix": {
									// Property: ErrorOutputPrefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"prefix": {
									// Property: Prefix
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 1024,
									     "minLength": 0,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"role_arn": {
									// Property: RoleARN
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 512,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "items": {
			       "properties": {
			         "Key": {
			           "maxLength": 128,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         },
			         "Value": {
			           "maxLength": 256,
			           "minLength": 0,
			           "pattern": "",
			           "type": "string"
			         }
			       },
			       "required": [
			         "Key"
			       ],
			       "type": "object"
			     },
			     "maxItems": 50,
			     "minItems": 1,
			     "type": "array"
			   }
			*/
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 128,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 256,
						     "minLength": 0,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
					MaxItems: 50,
				},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::KinesisFirehose::DeliveryStream",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::KinesisFirehose::DeliveryStream").WithTerraformTypeName("aws_kinesisfirehose_delivery_stream").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_kinesisfirehose_delivery_stream", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
