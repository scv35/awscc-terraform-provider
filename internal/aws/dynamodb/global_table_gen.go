// Code generated by generators/resource/main.go; DO NOT EDIT.

package dynamodb

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
	providertypes "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/types"
)

func init() {
	registry.AddResourceTypeFactory("aws_dynamodb_global_table", globalTable)
}

// globalTable returns the Terraform aws_dynamodb_global_table resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::DynamoDB::GlobalTable resource type.
func globalTable(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"arn": {
			// Property: Arn
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"attribute_definitions": {
			// Property: AttributeDefinitions
			// CloudFormation resource type schema:
			/*
			   {
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "AttributeName": {
			           "maxLength": 255,
			           "minLength": 1,
			           "type": "string"
			         },
			         "AttributeType": {
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/AttributeDefinition",
			       "required": [
			         "AttributeName",
			         "AttributeType"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			Attributes: providertypes.SetNestedAttributes(
				map[string]schema.Attribute{
					"attribute_name": {
						// Property: AttributeName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 255,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"attribute_type": {
						// Property: AttributeType
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
				providertypes.SetNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Required: true,
		},
		"billing_mode": {
			// Property: BillingMode
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Optional: true,
		},
		"global_secondary_indexes": {
			// Property: GlobalSecondaryIndexes
			// CloudFormation resource type schema:
			/*
			   {
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "IndexName": {
			           "maxLength": 255,
			           "minLength": 3,
			           "type": "string"
			         },
			         "KeySchema": {
			           "items": {
			             "additionalProperties": false,
			             "properties": {
			               "AttributeName": {
			                 "maxLength": 255,
			                 "minLength": 1,
			                 "type": "string"
			               },
			               "KeyType": {
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/KeySchema",
			             "required": [
			               "KeyType",
			               "AttributeName"
			             ],
			             "type": "object"
			           },
			           "maxItems": 2,
			           "minItems": 1,
			           "type": "array",
			           "uniqueItems": true
			         },
			         "Projection": {
			           "additionalProperties": false,
			           "properties": {
			             "NonKeyAttributes": {
			               "insertionOrder": false,
			               "items": {
			                 "type": "string"
			               },
			               "maxItems": 20,
			               "type": "array",
			               "uniqueItems": true
			             },
			             "ProjectionType": {
			               "type": "string"
			             }
			           },
			           "$ref": "#/definitions/Projection",
			           "type": "object"
			         },
			         "WriteProvisionedThroughputSettings": {
			           "additionalProperties": false,
			           "properties": {
			             "WriteCapacityAutoScalingSettings": {
			               "additionalProperties": false,
			               "properties": {
			                 "MaxCapacity": {
			                   "type": "integer"
			                 },
			                 "MinCapacity": {
			                   "type": "integer"
			                 },
			                 "SeedCapacity": {
			                   "type": "integer"
			                 },
			                 "TargetTrackingScalingPolicyConfiguration": {
			                   "additionalProperties": false,
			                   "properties": {
			                     "DisableScaleIn": {
			                       "type": "boolean"
			                     },
			                     "ScaleInCooldown": {
			                       "type": "integer"
			                     },
			                     "ScaleOutCooldown": {
			                       "type": "integer"
			                     },
			                     "TargetValue": {
			                       "format": "double",
			                       "type": "number"
			                     }
			                   },
			                   "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
			                   "required": [
			                     "TargetValue"
			                   ],
			                   "type": "object"
			                 }
			               },
			               "$ref": "#/definitions/CapacityAutoScalingSettings",
			               "required": [
			                 "MinCapacity",
			                 "MaxCapacity",
			                 "TargetTrackingScalingPolicyConfiguration"
			               ],
			               "type": "object"
			             }
			           },
			           "$ref": "#/definitions/WriteProvisionedThroughputSettings",
			           "type": "object"
			         }
			       },
			       "$ref": "#/definitions/GlobalSecondaryIndex",
			       "required": [
			         "IndexName",
			         "Projection",
			         "KeySchema"
			       ],
			       "type": "object"
			     },
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			Attributes: providertypes.SetNestedAttributes(
				map[string]schema.Attribute{
					"index_name": {
						// Property: IndexName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 255,
						     "minLength": 3,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"key_schema": {
						// Property: KeySchema
						// CloudFormation resource type schema:
						/*
						   {
						     "items": {
						       "additionalProperties": false,
						       "properties": {
						         "AttributeName": {
						           "maxLength": 255,
						           "minLength": 1,
						           "type": "string"
						         },
						         "KeyType": {
						           "type": "string"
						         }
						       },
						       "$ref": "#/definitions/KeySchema",
						       "required": [
						         "KeyType",
						         "AttributeName"
						       ],
						       "type": "object"
						     },
						     "maxItems": 2,
						     "minItems": 1,
						     "type": "array",
						     "uniqueItems": true
						   }
						*/
						// Ordered set.
						Attributes: schema.ListNestedAttributes(
							map[string]schema.Attribute{
								"attribute_name": {
									// Property: AttributeName
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 255,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"key_type": {
									// Property: KeyType
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
							schema.ListNestedAttributesOptions{
								MinItems: 1,
								MaxItems: 2,
							},
						),
						Required: true,
					},
					"projection": {
						// Property: Projection
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "NonKeyAttributes": {
						         "insertionOrder": false,
						         "items": {
						           "type": "string"
						         },
						         "maxItems": 20,
						         "type": "array",
						         "uniqueItems": true
						       },
						       "ProjectionType": {
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/Projection",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"non_key_attributes": {
									// Property: NonKeyAttributes
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "type": "string"
									     },
									     "maxItems": 20,
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
								"projection_type": {
									// Property: ProjectionType
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Required: true,
					},
					"write_provisioned_throughput_settings": {
						// Property: WriteProvisionedThroughputSettings
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "WriteCapacityAutoScalingSettings": {
						         "additionalProperties": false,
						         "properties": {
						           "MaxCapacity": {
						             "type": "integer"
						           },
						           "MinCapacity": {
						             "type": "integer"
						           },
						           "SeedCapacity": {
						             "type": "integer"
						           },
						           "TargetTrackingScalingPolicyConfiguration": {
						             "additionalProperties": false,
						             "properties": {
						               "DisableScaleIn": {
						                 "type": "boolean"
						               },
						               "ScaleInCooldown": {
						                 "type": "integer"
						               },
						               "ScaleOutCooldown": {
						                 "type": "integer"
						               },
						               "TargetValue": {
						                 "format": "double",
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
						             "required": [
						               "TargetValue"
						             ],
						             "type": "object"
						           }
						         },
						         "$ref": "#/definitions/CapacityAutoScalingSettings",
						         "required": [
						           "MinCapacity",
						           "MaxCapacity",
						           "TargetTrackingScalingPolicyConfiguration"
						         ],
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/WriteProvisionedThroughputSettings",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"write_capacity_auto_scaling_settings": {
									// Property: WriteCapacityAutoScalingSettings
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "MaxCapacity": {
									         "type": "integer"
									       },
									       "MinCapacity": {
									         "type": "integer"
									       },
									       "SeedCapacity": {
									         "type": "integer"
									       },
									       "TargetTrackingScalingPolicyConfiguration": {
									         "additionalProperties": false,
									         "properties": {
									           "DisableScaleIn": {
									             "type": "boolean"
									           },
									           "ScaleInCooldown": {
									             "type": "integer"
									           },
									           "ScaleOutCooldown": {
									             "type": "integer"
									           },
									           "TargetValue": {
									             "format": "double",
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
									         "required": [
									           "TargetValue"
									         ],
									         "type": "object"
									       }
									     },
									     "$ref": "#/definitions/CapacityAutoScalingSettings",
									     "required": [
									       "MinCapacity",
									       "MaxCapacity",
									       "TargetTrackingScalingPolicyConfiguration"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"max_capacity": {
												// Property: MaxCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Required: true,
											},
											"min_capacity": {
												// Property: MinCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Required: true,
											},
											"seed_capacity": {
												// Property: SeedCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"target_tracking_scaling_policy_configuration": {
												// Property: TargetTrackingScalingPolicyConfiguration
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "DisableScaleIn": {
												         "type": "boolean"
												       },
												       "ScaleInCooldown": {
												         "type": "integer"
												       },
												       "ScaleOutCooldown": {
												         "type": "integer"
												       },
												       "TargetValue": {
												         "format": "double",
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
												     "required": [
												       "TargetValue"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"disable_scale_in": {
															// Property: DisableScaleIn
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "boolean"
															   }
															*/
															Type:     types.BoolType,
															Optional: true,
														},
														"scale_in_cooldown": {
															// Property: ScaleInCooldown
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
														"scale_out_cooldown": {
															// Property: ScaleOutCooldown
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
														"target_value": {
															// Property: TargetValue
															// CloudFormation resource type schema:
															/*
															   {
															     "format": "double",
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Required: true,
														},
													},
												),
												Required: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
				providertypes.SetNestedAttributesOptions{},
			),
			Optional: true,
		},
		"key_schema": {
			// Property: KeySchema
			// CloudFormation resource type schema:
			/*
			   {
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "AttributeName": {
			           "maxLength": 255,
			           "minLength": 1,
			           "type": "string"
			         },
			         "KeyType": {
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/KeySchema",
			       "required": [
			         "KeyType",
			         "AttributeName"
			       ],
			       "type": "object"
			     },
			     "maxItems": 2,
			     "minItems": 1,
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			// Ordered set.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"attribute_name": {
						// Property: AttributeName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 255,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"key_type": {
						// Property: KeyType
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
					MaxItems: 2,
				},
			),
			Required: true,
			// KeySchema is a force-new attribute.
		},
		"local_secondary_indexes": {
			// Property: LocalSecondaryIndexes
			// CloudFormation resource type schema:
			/*
			   {
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "IndexName": {
			           "maxLength": 255,
			           "minLength": 3,
			           "type": "string"
			         },
			         "KeySchema": {
			           "items": {
			             "additionalProperties": false,
			             "properties": {
			               "AttributeName": {
			                 "maxLength": 255,
			                 "minLength": 1,
			                 "type": "string"
			               },
			               "KeyType": {
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/KeySchema",
			             "required": [
			               "KeyType",
			               "AttributeName"
			             ],
			             "type": "object"
			           },
			           "maxItems": 2,
			           "type": "array",
			           "uniqueItems": true
			         },
			         "Projection": {
			           "additionalProperties": false,
			           "properties": {
			             "NonKeyAttributes": {
			               "insertionOrder": false,
			               "items": {
			                 "type": "string"
			               },
			               "maxItems": 20,
			               "type": "array",
			               "uniqueItems": true
			             },
			             "ProjectionType": {
			               "type": "string"
			             }
			           },
			           "$ref": "#/definitions/Projection",
			           "type": "object"
			         }
			       },
			       "$ref": "#/definitions/LocalSecondaryIndex",
			       "required": [
			         "IndexName",
			         "Projection",
			         "KeySchema"
			       ],
			       "type": "object"
			     },
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			Attributes: providertypes.SetNestedAttributes(
				map[string]schema.Attribute{
					"index_name": {
						// Property: IndexName
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 255,
						     "minLength": 3,
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"key_schema": {
						// Property: KeySchema
						// CloudFormation resource type schema:
						/*
						   {
						     "items": {
						       "additionalProperties": false,
						       "properties": {
						         "AttributeName": {
						           "maxLength": 255,
						           "minLength": 1,
						           "type": "string"
						         },
						         "KeyType": {
						           "type": "string"
						         }
						       },
						       "$ref": "#/definitions/KeySchema",
						       "required": [
						         "KeyType",
						         "AttributeName"
						       ],
						       "type": "object"
						     },
						     "maxItems": 2,
						     "type": "array",
						     "uniqueItems": true
						   }
						*/
						// Ordered set.
						Attributes: schema.ListNestedAttributes(
							map[string]schema.Attribute{
								"attribute_name": {
									// Property: AttributeName
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 255,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"key_type": {
									// Property: KeyType
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
							schema.ListNestedAttributesOptions{
								MaxItems: 2,
							},
						),
						Required: true,
					},
					"projection": {
						// Property: Projection
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "NonKeyAttributes": {
						         "insertionOrder": false,
						         "items": {
						           "type": "string"
						         },
						         "maxItems": 20,
						         "type": "array",
						         "uniqueItems": true
						       },
						       "ProjectionType": {
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/Projection",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"non_key_attributes": {
									// Property: NonKeyAttributes
									// CloudFormation resource type schema:
									/*
									   {
									     "insertionOrder": false,
									     "items": {
									       "type": "string"
									     },
									     "maxItems": 20,
									     "type": "array",
									     "uniqueItems": true
									   }
									*/
									Type:     providertypes.SetType{ElemType: types.StringType},
									Optional: true,
								},
								"projection_type": {
									// Property: ProjectionType
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Required: true,
					},
				},
				providertypes.SetNestedAttributesOptions{},
			),
			Optional: true,
			Computed: true,
			// LocalSecondaryIndexes is a force-new attribute.
		},
		"replicas": {
			// Property: Replicas
			// CloudFormation resource type schema:
			/*
			   {
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "ContributorInsightsSpecification": {
			           "additionalProperties": false,
			           "properties": {
			             "Enabled": {
			               "type": "boolean"
			             }
			           },
			           "$ref": "#/definitions/ContributorInsightsSpecification",
			           "required": [
			             "Enabled"
			           ],
			           "type": "object"
			         },
			         "GlobalSecondaryIndexes": {
			           "insertionOrder": false,
			           "items": {
			             "additionalProperties": false,
			             "properties": {
			               "ContributorInsightsSpecification": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "Enabled": {
			                     "type": "boolean"
			                   }
			                 },
			                 "$ref": "#/definitions/ContributorInsightsSpecification",
			                 "required": [
			                   "Enabled"
			                 ],
			                 "type": "object"
			               },
			               "IndexName": {
			                 "maxLength": 255,
			                 "minLength": 3,
			                 "type": "string"
			               },
			               "ReadProvisionedThroughputSettings": {
			                 "additionalProperties": false,
			                 "properties": {
			                   "ReadCapacityAutoScalingSettings": {
			                     "additionalProperties": false,
			                     "properties": {
			                       "MaxCapacity": {
			                         "type": "integer"
			                       },
			                       "MinCapacity": {
			                         "type": "integer"
			                       },
			                       "SeedCapacity": {
			                         "type": "integer"
			                       },
			                       "TargetTrackingScalingPolicyConfiguration": {
			                         "additionalProperties": false,
			                         "properties": {
			                           "DisableScaleIn": {
			                             "type": "boolean"
			                           },
			                           "ScaleInCooldown": {
			                             "type": "integer"
			                           },
			                           "ScaleOutCooldown": {
			                             "type": "integer"
			                           },
			                           "TargetValue": {
			                             "format": "double",
			                             "type": "number"
			                           }
			                         },
			                         "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
			                         "required": [
			                           "TargetValue"
			                         ],
			                         "type": "object"
			                       }
			                     },
			                     "$ref": "#/definitions/CapacityAutoScalingSettings",
			                     "required": [
			                       "MinCapacity",
			                       "MaxCapacity",
			                       "TargetTrackingScalingPolicyConfiguration"
			                     ],
			                     "type": "object"
			                   },
			                   "ReadCapacityUnits": {
			                     "type": "integer"
			                   }
			                 },
			                 "$ref": "#/definitions/ReadProvisionedThroughputSettings",
			                 "type": "object"
			               }
			             },
			             "$ref": "#/definitions/ReplicaGlobalSecondaryIndexSpecification",
			             "required": [
			               "IndexName"
			             ],
			             "type": "object"
			           },
			           "type": "array",
			           "uniqueItems": true
			         },
			         "PointInTimeRecoverySpecification": {
			           "additionalProperties": false,
			           "properties": {
			             "PointInTimeRecoveryEnabled": {
			               "type": "boolean"
			             }
			           },
			           "$ref": "#/definitions/PointInTimeRecoverySpecification",
			           "type": "object"
			         },
			         "ReadProvisionedThroughputSettings": {
			           "additionalProperties": false,
			           "properties": {
			             "ReadCapacityAutoScalingSettings": {
			               "additionalProperties": false,
			               "properties": {
			                 "MaxCapacity": {
			                   "type": "integer"
			                 },
			                 "MinCapacity": {
			                   "type": "integer"
			                 },
			                 "SeedCapacity": {
			                   "type": "integer"
			                 },
			                 "TargetTrackingScalingPolicyConfiguration": {
			                   "additionalProperties": false,
			                   "properties": {
			                     "DisableScaleIn": {
			                       "type": "boolean"
			                     },
			                     "ScaleInCooldown": {
			                       "type": "integer"
			                     },
			                     "ScaleOutCooldown": {
			                       "type": "integer"
			                     },
			                     "TargetValue": {
			                       "format": "double",
			                       "type": "number"
			                     }
			                   },
			                   "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
			                   "required": [
			                     "TargetValue"
			                   ],
			                   "type": "object"
			                 }
			               },
			               "$ref": "#/definitions/CapacityAutoScalingSettings",
			               "required": [
			                 "MinCapacity",
			                 "MaxCapacity",
			                 "TargetTrackingScalingPolicyConfiguration"
			               ],
			               "type": "object"
			             },
			             "ReadCapacityUnits": {
			               "type": "integer"
			             }
			           },
			           "$ref": "#/definitions/ReadProvisionedThroughputSettings",
			           "type": "object"
			         },
			         "Region": {
			           "type": "string"
			         },
			         "SSESpecification": {
			           "additionalProperties": false,
			           "properties": {
			             "KMSMasterKeyId": {
			               "type": "string"
			             }
			           },
			           "$ref": "#/definitions/ReplicaSSESpecification",
			           "required": [
			             "KMSMasterKeyId"
			           ],
			           "type": "object"
			         },
			         "Tags": {
			           "insertionOrder": false,
			           "items": {
			             "additionalProperties": false,
			             "properties": {
			               "Key": {
			                 "type": "string"
			               },
			               "Value": {
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/Tag",
			             "required": [
			               "Value",
			               "Key"
			             ],
			             "type": "object"
			           },
			           "type": "array",
			           "uniqueItems": true
			         }
			       },
			       "$ref": "#/definitions/ReplicaSpecification",
			       "required": [
			         "Region"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array",
			     "uniqueItems": true
			   }
			*/
			Attributes: providertypes.SetNestedAttributes(
				map[string]schema.Attribute{
					"contributor_insights_specification": {
						// Property: ContributorInsightsSpecification
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "Enabled": {
						         "type": "boolean"
						       }
						     },
						     "$ref": "#/definitions/ContributorInsightsSpecification",
						     "required": [
						       "Enabled"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"enabled": {
									// Property: Enabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"global_secondary_indexes": {
						// Property: GlobalSecondaryIndexes
						// CloudFormation resource type schema:
						/*
						   {
						     "insertionOrder": false,
						     "items": {
						       "additionalProperties": false,
						       "properties": {
						         "ContributorInsightsSpecification": {
						           "additionalProperties": false,
						           "properties": {
						             "Enabled": {
						               "type": "boolean"
						             }
						           },
						           "$ref": "#/definitions/ContributorInsightsSpecification",
						           "required": [
						             "Enabled"
						           ],
						           "type": "object"
						         },
						         "IndexName": {
						           "maxLength": 255,
						           "minLength": 3,
						           "type": "string"
						         },
						         "ReadProvisionedThroughputSettings": {
						           "additionalProperties": false,
						           "properties": {
						             "ReadCapacityAutoScalingSettings": {
						               "additionalProperties": false,
						               "properties": {
						                 "MaxCapacity": {
						                   "type": "integer"
						                 },
						                 "MinCapacity": {
						                   "type": "integer"
						                 },
						                 "SeedCapacity": {
						                   "type": "integer"
						                 },
						                 "TargetTrackingScalingPolicyConfiguration": {
						                   "additionalProperties": false,
						                   "properties": {
						                     "DisableScaleIn": {
						                       "type": "boolean"
						                     },
						                     "ScaleInCooldown": {
						                       "type": "integer"
						                     },
						                     "ScaleOutCooldown": {
						                       "type": "integer"
						                     },
						                     "TargetValue": {
						                       "format": "double",
						                       "type": "number"
						                     }
						                   },
						                   "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
						                   "required": [
						                     "TargetValue"
						                   ],
						                   "type": "object"
						                 }
						               },
						               "$ref": "#/definitions/CapacityAutoScalingSettings",
						               "required": [
						                 "MinCapacity",
						                 "MaxCapacity",
						                 "TargetTrackingScalingPolicyConfiguration"
						               ],
						               "type": "object"
						             },
						             "ReadCapacityUnits": {
						               "type": "integer"
						             }
						           },
						           "$ref": "#/definitions/ReadProvisionedThroughputSettings",
						           "type": "object"
						         }
						       },
						       "$ref": "#/definitions/ReplicaGlobalSecondaryIndexSpecification",
						       "required": [
						         "IndexName"
						       ],
						       "type": "object"
						     },
						     "type": "array",
						     "uniqueItems": true
						   }
						*/
						Attributes: providertypes.SetNestedAttributes(
							map[string]schema.Attribute{
								"contributor_insights_specification": {
									// Property: ContributorInsightsSpecification
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "Enabled": {
									         "type": "boolean"
									       }
									     },
									     "$ref": "#/definitions/ContributorInsightsSpecification",
									     "required": [
									       "Enabled"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"enabled": {
												// Property: Enabled
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"index_name": {
									// Property: IndexName
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 255,
									     "minLength": 3,
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"read_provisioned_throughput_settings": {
									// Property: ReadProvisionedThroughputSettings
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "ReadCapacityAutoScalingSettings": {
									         "additionalProperties": false,
									         "properties": {
									           "MaxCapacity": {
									             "type": "integer"
									           },
									           "MinCapacity": {
									             "type": "integer"
									           },
									           "SeedCapacity": {
									             "type": "integer"
									           },
									           "TargetTrackingScalingPolicyConfiguration": {
									             "additionalProperties": false,
									             "properties": {
									               "DisableScaleIn": {
									                 "type": "boolean"
									               },
									               "ScaleInCooldown": {
									                 "type": "integer"
									               },
									               "ScaleOutCooldown": {
									                 "type": "integer"
									               },
									               "TargetValue": {
									                 "format": "double",
									                 "type": "number"
									               }
									             },
									             "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
									             "required": [
									               "TargetValue"
									             ],
									             "type": "object"
									           }
									         },
									         "$ref": "#/definitions/CapacityAutoScalingSettings",
									         "required": [
									           "MinCapacity",
									           "MaxCapacity",
									           "TargetTrackingScalingPolicyConfiguration"
									         ],
									         "type": "object"
									       },
									       "ReadCapacityUnits": {
									         "type": "integer"
									       }
									     },
									     "$ref": "#/definitions/ReadProvisionedThroughputSettings",
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"read_capacity_auto_scaling_settings": {
												// Property: ReadCapacityAutoScalingSettings
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "MaxCapacity": {
												         "type": "integer"
												       },
												       "MinCapacity": {
												         "type": "integer"
												       },
												       "SeedCapacity": {
												         "type": "integer"
												       },
												       "TargetTrackingScalingPolicyConfiguration": {
												         "additionalProperties": false,
												         "properties": {
												           "DisableScaleIn": {
												             "type": "boolean"
												           },
												           "ScaleInCooldown": {
												             "type": "integer"
												           },
												           "ScaleOutCooldown": {
												             "type": "integer"
												           },
												           "TargetValue": {
												             "format": "double",
												             "type": "number"
												           }
												         },
												         "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
												         "required": [
												           "TargetValue"
												         ],
												         "type": "object"
												       }
												     },
												     "$ref": "#/definitions/CapacityAutoScalingSettings",
												     "required": [
												       "MinCapacity",
												       "MaxCapacity",
												       "TargetTrackingScalingPolicyConfiguration"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"max_capacity": {
															// Property: MaxCapacity
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Required: true,
														},
														"min_capacity": {
															// Property: MinCapacity
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Required: true,
														},
														"seed_capacity": {
															// Property: SeedCapacity
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
														"target_tracking_scaling_policy_configuration": {
															// Property: TargetTrackingScalingPolicyConfiguration
															// CloudFormation resource type schema:
															/*
															   {
															     "additionalProperties": false,
															     "properties": {
															       "DisableScaleIn": {
															         "type": "boolean"
															       },
															       "ScaleInCooldown": {
															         "type": "integer"
															       },
															       "ScaleOutCooldown": {
															         "type": "integer"
															       },
															       "TargetValue": {
															         "format": "double",
															         "type": "number"
															       }
															     },
															     "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
															     "required": [
															       "TargetValue"
															     ],
															     "type": "object"
															   }
															*/
															Attributes: schema.SingleNestedAttributes(
																map[string]schema.Attribute{
																	"disable_scale_in": {
																		// Property: DisableScaleIn
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "boolean"
																		   }
																		*/
																		Type:     types.BoolType,
																		Optional: true,
																	},
																	"scale_in_cooldown": {
																		// Property: ScaleInCooldown
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"scale_out_cooldown": {
																		// Property: ScaleOutCooldown
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "integer"
																		   }
																		*/
																		Type:     types.NumberType,
																		Optional: true,
																	},
																	"target_value": {
																		// Property: TargetValue
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "format": "double",
																		     "type": "number"
																		   }
																		*/
																		Type:     types.NumberType,
																		Required: true,
																	},
																},
															),
															Required: true,
														},
													},
												),
												Optional: true,
											},
											"read_capacity_units": {
												// Property: ReadCapacityUnits
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
							providertypes.SetNestedAttributesOptions{},
						),
						Optional: true,
					},
					"point_in_time_recovery_specification": {
						// Property: PointInTimeRecoverySpecification
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "PointInTimeRecoveryEnabled": {
						         "type": "boolean"
						       }
						     },
						     "$ref": "#/definitions/PointInTimeRecoverySpecification",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"point_in_time_recovery_enabled": {
									// Property: PointInTimeRecoveryEnabled
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "boolean"
									   }
									*/
									Type:     types.BoolType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"read_provisioned_throughput_settings": {
						// Property: ReadProvisionedThroughputSettings
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "ReadCapacityAutoScalingSettings": {
						         "additionalProperties": false,
						         "properties": {
						           "MaxCapacity": {
						             "type": "integer"
						           },
						           "MinCapacity": {
						             "type": "integer"
						           },
						           "SeedCapacity": {
						             "type": "integer"
						           },
						           "TargetTrackingScalingPolicyConfiguration": {
						             "additionalProperties": false,
						             "properties": {
						               "DisableScaleIn": {
						                 "type": "boolean"
						               },
						               "ScaleInCooldown": {
						                 "type": "integer"
						               },
						               "ScaleOutCooldown": {
						                 "type": "integer"
						               },
						               "TargetValue": {
						                 "format": "double",
						                 "type": "number"
						               }
						             },
						             "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
						             "required": [
						               "TargetValue"
						             ],
						             "type": "object"
						           }
						         },
						         "$ref": "#/definitions/CapacityAutoScalingSettings",
						         "required": [
						           "MinCapacity",
						           "MaxCapacity",
						           "TargetTrackingScalingPolicyConfiguration"
						         ],
						         "type": "object"
						       },
						       "ReadCapacityUnits": {
						         "type": "integer"
						       }
						     },
						     "$ref": "#/definitions/ReadProvisionedThroughputSettings",
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"read_capacity_auto_scaling_settings": {
									// Property: ReadCapacityAutoScalingSettings
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "MaxCapacity": {
									         "type": "integer"
									       },
									       "MinCapacity": {
									         "type": "integer"
									       },
									       "SeedCapacity": {
									         "type": "integer"
									       },
									       "TargetTrackingScalingPolicyConfiguration": {
									         "additionalProperties": false,
									         "properties": {
									           "DisableScaleIn": {
									             "type": "boolean"
									           },
									           "ScaleInCooldown": {
									             "type": "integer"
									           },
									           "ScaleOutCooldown": {
									             "type": "integer"
									           },
									           "TargetValue": {
									             "format": "double",
									             "type": "number"
									           }
									         },
									         "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
									         "required": [
									           "TargetValue"
									         ],
									         "type": "object"
									       }
									     },
									     "$ref": "#/definitions/CapacityAutoScalingSettings",
									     "required": [
									       "MinCapacity",
									       "MaxCapacity",
									       "TargetTrackingScalingPolicyConfiguration"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"max_capacity": {
												// Property: MaxCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Required: true,
											},
											"min_capacity": {
												// Property: MinCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Required: true,
											},
											"seed_capacity": {
												// Property: SeedCapacity
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"target_tracking_scaling_policy_configuration": {
												// Property: TargetTrackingScalingPolicyConfiguration
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "properties": {
												       "DisableScaleIn": {
												         "type": "boolean"
												       },
												       "ScaleInCooldown": {
												         "type": "integer"
												       },
												       "ScaleOutCooldown": {
												         "type": "integer"
												       },
												       "TargetValue": {
												         "format": "double",
												         "type": "number"
												       }
												     },
												     "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
												     "required": [
												       "TargetValue"
												     ],
												     "type": "object"
												   }
												*/
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"disable_scale_in": {
															// Property: DisableScaleIn
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "boolean"
															   }
															*/
															Type:     types.BoolType,
															Optional: true,
														},
														"scale_in_cooldown": {
															// Property: ScaleInCooldown
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
														"scale_out_cooldown": {
															// Property: ScaleOutCooldown
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "integer"
															   }
															*/
															Type:     types.NumberType,
															Optional: true,
														},
														"target_value": {
															// Property: TargetValue
															// CloudFormation resource type schema:
															/*
															   {
															     "format": "double",
															     "type": "number"
															   }
															*/
															Type:     types.NumberType,
															Required: true,
														},
													},
												),
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"read_capacity_units": {
									// Property: ReadCapacityUnits
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"region": {
						// Property: Region
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"sse_specification": {
						// Property: SSESpecification
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "KMSMasterKeyId": {
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/ReplicaSSESpecification",
						     "required": [
						       "KMSMasterKeyId"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"kms_master_key_id": {
									// Property: KMSMasterKeyId
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"tags": {
						// Property: Tags
						// CloudFormation resource type schema:
						/*
						   {
						     "insertionOrder": false,
						     "items": {
						       "additionalProperties": false,
						       "properties": {
						         "Key": {
						           "type": "string"
						         },
						         "Value": {
						           "type": "string"
						         }
						       },
						       "$ref": "#/definitions/Tag",
						       "required": [
						         "Value",
						         "Key"
						       ],
						       "type": "object"
						     },
						     "type": "array",
						     "uniqueItems": true
						   }
						*/
						Attributes: providertypes.SetNestedAttributes(
							map[string]schema.Attribute{
								"key": {
									// Property: Key
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
								"value": {
									// Property: Value
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Required: true,
								},
							},
							providertypes.SetNestedAttributesOptions{},
						),
						Optional: true,
					},
				},
				providertypes.SetNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Required: true,
		},
		"sse_specification": {
			// Property: SSESpecification
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "SSEEnabled": {
			         "type": "boolean"
			       },
			       "SSEType": {
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/SSESpecification",
			     "required": [
			       "SSEEnabled"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"sse_enabled": {
						// Property: SSEEnabled
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "boolean"
						   }
						*/
						Type:     types.BoolType,
						Required: true,
					},
					"sse_type": {
						// Property: SSEType
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
				},
			),
			Optional: true,
		},
		"stream_arn": {
			// Property: StreamArn
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"stream_specification": {
			// Property: StreamSpecification
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "StreamViewType": {
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/StreamSpecification",
			     "required": [
			       "StreamViewType"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"stream_view_type": {
						// Property: StreamViewType
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"table_id": {
			// Property: TableId
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Computed: true,
		},
		"table_name": {
			// Property: TableName
			// CloudFormation resource type schema:
			/*
			   {
			     "type": "string"
			   }
			*/
			Type:     types.StringType,
			Optional: true,
			Computed: true,
			// TableName is a force-new attribute.
		},
		"time_to_live_specification": {
			// Property: TimeToLiveSpecification
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "AttributeName": {
			         "type": "string"
			       },
			       "Enabled": {
			         "type": "boolean"
			       }
			     },
			     "$ref": "#/definitions/TimeToLiveSpecification",
			     "required": [
			       "Enabled"
			     ],
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"attribute_name": {
						// Property: AttributeName
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"enabled": {
						// Property: Enabled
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "boolean"
						   }
						*/
						Type:     types.BoolType,
						Required: true,
					},
				},
			),
			Optional: true,
		},
		"write_provisioned_throughput_settings": {
			// Property: WriteProvisionedThroughputSettings
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "properties": {
			       "WriteCapacityAutoScalingSettings": {
			         "additionalProperties": false,
			         "properties": {
			           "MaxCapacity": {
			             "type": "integer"
			           },
			           "MinCapacity": {
			             "type": "integer"
			           },
			           "SeedCapacity": {
			             "type": "integer"
			           },
			           "TargetTrackingScalingPolicyConfiguration": {
			             "additionalProperties": false,
			             "properties": {
			               "DisableScaleIn": {
			                 "type": "boolean"
			               },
			               "ScaleInCooldown": {
			                 "type": "integer"
			               },
			               "ScaleOutCooldown": {
			                 "type": "integer"
			               },
			               "TargetValue": {
			                 "format": "double",
			                 "type": "number"
			               }
			             },
			             "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
			             "required": [
			               "TargetValue"
			             ],
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/CapacityAutoScalingSettings",
			         "required": [
			           "MinCapacity",
			           "MaxCapacity",
			           "TargetTrackingScalingPolicyConfiguration"
			         ],
			         "type": "object"
			       }
			     },
			     "$ref": "#/definitions/WriteProvisionedThroughputSettings",
			     "type": "object"
			   }
			*/
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"write_capacity_auto_scaling_settings": {
						// Property: WriteCapacityAutoScalingSettings
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "properties": {
						       "MaxCapacity": {
						         "type": "integer"
						       },
						       "MinCapacity": {
						         "type": "integer"
						       },
						       "SeedCapacity": {
						         "type": "integer"
						       },
						       "TargetTrackingScalingPolicyConfiguration": {
						         "additionalProperties": false,
						         "properties": {
						           "DisableScaleIn": {
						             "type": "boolean"
						           },
						           "ScaleInCooldown": {
						             "type": "integer"
						           },
						           "ScaleOutCooldown": {
						             "type": "integer"
						           },
						           "TargetValue": {
						             "format": "double",
						             "type": "number"
						           }
						         },
						         "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
						         "required": [
						           "TargetValue"
						         ],
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/CapacityAutoScalingSettings",
						     "required": [
						       "MinCapacity",
						       "MaxCapacity",
						       "TargetTrackingScalingPolicyConfiguration"
						     ],
						     "type": "object"
						   }
						*/
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"max_capacity": {
									// Property: MaxCapacity
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Required: true,
								},
								"min_capacity": {
									// Property: MinCapacity
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Required: true,
								},
								"seed_capacity": {
									// Property: SeedCapacity
									// CloudFormation resource type schema:
									/*
									   {
									     "type": "integer"
									   }
									*/
									Type:     types.NumberType,
									Optional: true,
								},
								"target_tracking_scaling_policy_configuration": {
									// Property: TargetTrackingScalingPolicyConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "properties": {
									       "DisableScaleIn": {
									         "type": "boolean"
									       },
									       "ScaleInCooldown": {
									         "type": "integer"
									       },
									       "ScaleOutCooldown": {
									         "type": "integer"
									       },
									       "TargetValue": {
									         "format": "double",
									         "type": "number"
									       }
									     },
									     "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration",
									     "required": [
									       "TargetValue"
									     ],
									     "type": "object"
									   }
									*/
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"disable_scale_in": {
												// Property: DisableScaleIn
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "boolean"
												   }
												*/
												Type:     types.BoolType,
												Optional: true,
											},
											"scale_in_cooldown": {
												// Property: ScaleInCooldown
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"scale_out_cooldown": {
												// Property: ScaleOutCooldown
												// CloudFormation resource type schema:
												/*
												   {
												     "type": "integer"
												   }
												*/
												Type:     types.NumberType,
												Optional: true,
											},
											"target_value": {
												// Property: TargetValue
												// CloudFormation resource type schema:
												/*
												   {
												     "format": "double",
												     "type": "number"
												   }
												*/
												Type:     types.NumberType,
												Required: true,
											},
										},
									),
									Required: true,
								},
							},
						),
						Optional: true,
					},
				},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "Version: None. Resource Type definition for AWS::DynamoDB::GlobalTable",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::DynamoDB::GlobalTable").WithTerraformTypeName("aws_dynamodb_global_table").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(360)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_dynamodb_global_table", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
