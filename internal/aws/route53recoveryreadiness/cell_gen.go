// Code generated by generators/resource/main.go; DO NOT EDIT.

package route53recoveryreadiness

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_route53recoveryreadiness_cell", cell)
}

// cell returns the Terraform aws_route53recoveryreadiness_cell resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::Route53RecoveryReadiness::Cell resource type.
func cell(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"cell_arn": {
			// Property: CellArn
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The Amazon Resource Name (ARN) of the cell.",
			     "maxLength": 256,
			     "type": "string"
			   }
			*/
			Description: "The Amazon Resource Name (ARN) of the cell.",
			Type:        types.StringType,
			Computed:    true,
		},
		"cell_name": {
			// Property: CellName
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The name of the cell to create.",
			     "maxLength": 64,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "The name of the cell to create.",
			Type:        types.StringType,
			Required:    true,
			// CellName is a force-new attribute.
		},
		"cells": {
			// Property: Cells
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.",
			     "insertionOrder": false,
			     "items": {
			       "type": "string"
			     },
			     "maxItems": 5,
			     "type": "array"
			   }
			*/
			Description: "A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.",
			// Multiset.
			Type:     types.ListType{ElemType: types.StringType},
			Optional: true,
		},
		"parent_readiness_scopes": {
			// Property: ParentReadinessScopes
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.",
			     "insertionOrder": false,
			     "items": {
			       "type": "string"
			     },
			     "maxItems": 5,
			     "type": "array"
			   }
			*/
			Description: "The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.",
			// Multiset.
			Type:     types.ListType{ElemType: types.StringType},
			Computed: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "A collection of tags associated with a resource",
			     "insertionOrder": false,
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "Key": {
			           "type": "string"
			         },
			         "Value": {
			           "insertionOrder": false,
			           "items": {
			             "maxItems": 50,
			             "type": "string"
			           },
			           "type": "array"
			         }
			       },
			       "$ref": "#/definitions/Tag",
			       "required": [
			         "Value",
			         "Key"
			       ],
			       "type": "object"
			     },
			     "type": "array"
			   }
			*/
			Description: "A collection of tags associated with a resource",
			// Multiset.
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Required: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "insertionOrder": false,
						     "items": {
						       "maxItems": 50,
						       "type": "string"
						     },
						     "type": "array"
						   }
						*/
						// Multiset.
						Type:     types.ListType{ElemType: types.StringType},
						Required: true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "The API Schema for AWS Route53 Recovery Readiness Cells.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::Route53RecoveryReadiness::Cell").WithTerraformTypeName("aws_route53recoveryreadiness_cell").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_route53recoveryreadiness_cell", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
