// Code generated by generators/resource/main.go; DO NOT EDIT.

package apprunner

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_apprunner_service", serviceResourceType)
}

// serviceResourceType returns the Terraform aws_apprunner_service resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::AppRunner::Service resource type.
func serviceResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"auto_scaling_configuration_arn": {
			// Property: AutoScalingConfigurationArn
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "Autoscaling configuration ARN",
			     "maxLength": 1011,
			     "minLength": 1,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "Autoscaling configuration ARN",
			Type:        types.StringType,
			Optional:    true,
			// AutoScalingConfigurationArn is a write-only attribute.
		},
		"encryption_configuration": {
			// Property: EncryptionConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "description": "Encryption configuration (KMS key)",
			     "properties": {
			       "KmsKey": {
			         "description": "The KMS Key",
			         "maxLength": 256,
			         "minLength": 0,
			         "pattern": "",
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/EncryptionConfiguration",
			     "required": [
			       "KmsKey"
			     ],
			     "type": "object"
			   }
			*/
			Description: "Encryption configuration (KMS key)",
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"kms_key": {
						// Property: KmsKey
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The KMS Key",
						     "maxLength": 256,
						     "minLength": 0,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The KMS Key",
						Type:        types.StringType,
						Required:    true,
					},
				},
			),
			Optional: true,
			Computed: true,
			// EncryptionConfiguration is a force-new attribute.
		},
		"health_check_configuration": {
			// Property: HealthCheckConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "description": "Health check configuration",
			     "properties": {
			       "HealthyThreshold": {
			         "description": "Health check Healthy Threshold",
			         "type": "integer"
			       },
			       "Interval": {
			         "description": "Health check Interval",
			         "type": "integer"
			       },
			       "Path": {
			         "description": "Health check Path",
			         "type": "string"
			       },
			       "Protocol": {
			         "description": "Health Check Protocol",
			         "enum": [
			           "TCP",
			           "HTTP"
			         ],
			         "type": "string"
			       },
			       "Timeout": {
			         "description": "Health check Timeout",
			         "type": "integer"
			       },
			       "UnhealthyThreshold": {
			         "description": "Health check Unhealthy Threshold",
			         "type": "integer"
			       }
			     },
			     "$ref": "#/definitions/HealthCheckConfiguration",
			     "type": "object"
			   }
			*/
			Description: "Health check configuration",
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"healthy_threshold": {
						// Property: HealthyThreshold
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health check Healthy Threshold",
						     "type": "integer"
						   }
						*/
						Description: "Health check Healthy Threshold",
						Type:        types.NumberType,
						Optional:    true,
					},
					"interval": {
						// Property: Interval
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health check Interval",
						     "type": "integer"
						   }
						*/
						Description: "Health check Interval",
						Type:        types.NumberType,
						Optional:    true,
					},
					"path": {
						// Property: Path
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health check Path",
						     "type": "string"
						   }
						*/
						Description: "Health check Path",
						Type:        types.StringType,
						Optional:    true,
					},
					"protocol": {
						// Property: Protocol
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health Check Protocol",
						     "enum": [
						       "TCP",
						       "HTTP"
						     ],
						     "type": "string"
						   }
						*/
						Description: "Health Check Protocol",
						Type:        types.StringType,
						Optional:    true,
					},
					"timeout": {
						// Property: Timeout
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health check Timeout",
						     "type": "integer"
						   }
						*/
						Description: "Health check Timeout",
						Type:        types.NumberType,
						Optional:    true,
					},
					"unhealthy_threshold": {
						// Property: UnhealthyThreshold
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Health check Unhealthy Threshold",
						     "type": "integer"
						   }
						*/
						Description: "Health check Unhealthy Threshold",
						Type:        types.NumberType,
						Optional:    true,
					},
				},
			),
			Optional: true,
		},
		"instance_configuration": {
			// Property: InstanceConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "description": "Instance Configuration",
			     "properties": {
			       "Cpu": {
			         "description": "CPU",
			         "maxLength": 6,
			         "minLength": 4,
			         "pattern": "",
			         "type": "string"
			       },
			       "InstanceRoleArn": {
			         "maxLength": 102,
			         "minLength": 29,
			         "pattern": "",
			         "$ref": "#/definitions/RoleArn",
			         "type": "string"
			       },
			       "Memory": {
			         "description": "Memory",
			         "maxLength": 4,
			         "minLength": 4,
			         "pattern": "",
			         "type": "string"
			       }
			     },
			     "$ref": "#/definitions/InstanceConfiguration",
			     "type": "object"
			   }
			*/
			Description: "Instance Configuration",
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"cpu": {
						// Property: Cpu
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "CPU",
						     "maxLength": 6,
						     "minLength": 4,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "CPU",
						Type:        types.StringType,
						Optional:    true,
					},
					"instance_role_arn": {
						// Property: InstanceRoleArn
						// CloudFormation resource type schema:
						/*
						   {
						     "maxLength": 102,
						     "minLength": 29,
						     "pattern": "",
						     "$ref": "#/definitions/RoleArn",
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"memory": {
						// Property: Memory
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Memory",
						     "maxLength": 4,
						     "minLength": 4,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "Memory",
						Type:        types.StringType,
						Optional:    true,
					},
				},
			),
			Optional: true,
		},
		"service_arn": {
			// Property: ServiceArn
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The Amazon Resource Name (ARN) of the AppRunner Service.",
			     "maxLength": 1011,
			     "minLength": 1,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "The Amazon Resource Name (ARN) of the AppRunner Service.",
			Type:        types.StringType,
			Computed:    true,
		},
		"service_id": {
			// Property: ServiceId
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The AppRunner Service Id",
			     "maxLength": 32,
			     "minLength": 32,
			     "type": "string"
			   }
			*/
			Description: "The AppRunner Service Id",
			Type:        types.StringType,
			Computed:    true,
		},
		"service_name": {
			// Property: ServiceName
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The AppRunner Service Name.",
			     "maxLength": 40,
			     "minLength": 4,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "The AppRunner Service Name.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			// ServiceName is a force-new attribute.
		},
		"service_url": {
			// Property: ServiceUrl
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The Service Url of the AppRunner Service.",
			     "type": "string"
			   }
			*/
			Description: "The Service Url of the AppRunner Service.",
			Type:        types.StringType,
			Computed:    true,
		},
		"source_configuration": {
			// Property: SourceConfiguration
			// CloudFormation resource type schema:
			/*
			   {
			     "additionalProperties": false,
			     "description": "Source Code configuration",
			     "properties": {
			       "AuthenticationConfiguration": {
			         "additionalProperties": false,
			         "description": "Authentication Configuration",
			         "properties": {
			           "AccessRoleArn": {
			             "maxLength": 102,
			             "minLength": 29,
			             "pattern": "",
			             "$ref": "#/definitions/RoleArn",
			             "type": "string"
			           },
			           "ConnectionArn": {
			             "description": "Connection Arn",
			             "maxLength": 1011,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/AuthenticationConfiguration",
			         "type": "object"
			       },
			       "AutoDeploymentsEnabled": {
			         "description": "Auto Deployment enabled",
			         "type": "boolean"
			       },
			       "CodeRepository": {
			         "additionalProperties": false,
			         "description": "Source Code Repository",
			         "properties": {
			           "CodeConfiguration": {
			             "additionalProperties": false,
			             "description": "Code Configuration",
			             "properties": {
			               "CodeConfigurationValues": {
			                 "additionalProperties": false,
			                 "description": "Code Configuration Values",
			                 "properties": {
			                   "BuildCommand": {
			                     "description": "Build Command",
			                     "type": "string"
			                   },
			                   "Port": {
			                     "description": "Port",
			                     "type": "string"
			                   },
			                   "Runtime": {
			                     "description": "Runtime",
			                     "enum": [
			                       "PYTHON_3",
			                       "NODEJS_12"
			                     ],
			                     "type": "string"
			                   },
			                   "RuntimeEnvironmentVariables": {
			                     "items": {
			                       "additionalProperties": false,
			                       "properties": {
			                         "Name": {
			                           "type": "string"
			                         },
			                         "Value": {
			                           "type": "string"
			                         }
			                       },
			                       "$ref": "#/definitions/KeyValuePair",
			                       "type": "object"
			                     },
			                     "type": "array"
			                   },
			                   "StartCommand": {
			                     "description": "Start Command",
			                     "type": "string"
			                   }
			                 },
			                 "$ref": "#/definitions/CodeConfigurationValues",
			                 "required": [
			                   "Runtime"
			                 ],
			                 "type": "object"
			               },
			               "ConfigurationSource": {
			                 "description": "Configuration Source",
			                 "enum": [
			                   "REPOSITORY",
			                   "API"
			                 ],
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/CodeConfiguration",
			             "required": [
			               "ConfigurationSource"
			             ],
			             "type": "object"
			           },
			           "RepositoryUrl": {
			             "description": "Repository Url",
			             "type": "string"
			           },
			           "SourceCodeVersion": {
			             "additionalProperties": false,
			             "description": "Source Code Version",
			             "properties": {
			               "Type": {
			                 "description": "Source Code Version Type",
			                 "enum": [
			                   "BRANCH"
			                 ],
			                 "type": "string"
			               },
			               "Value": {
			                 "description": "Source Code Version Value",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/SourceCodeVersion",
			             "required": [
			               "Type",
			               "Value"
			             ],
			             "type": "object"
			           }
			         },
			         "$ref": "#/definitions/CodeRepository",
			         "required": [
			           "RepositoryUrl",
			           "SourceCodeVersion"
			         ],
			         "type": "object"
			       },
			       "ImageRepository": {
			         "additionalProperties": false,
			         "description": "Image Repository",
			         "properties": {
			           "ImageConfiguration": {
			             "additionalProperties": false,
			             "description": "Image Configuration",
			             "properties": {
			               "Port": {
			                 "description": "Port",
			                 "type": "string"
			               },
			               "RuntimeEnvironmentVariables": {
			                 "items": {
			                   "additionalProperties": false,
			                   "properties": {
			                     "Name": {
			                       "type": "string"
			                     },
			                     "Value": {
			                       "type": "string"
			                     }
			                   },
			                   "$ref": "#/definitions/KeyValuePair",
			                   "type": "object"
			                 },
			                 "type": "array"
			               },
			               "StartCommand": {
			                 "description": "Start Command",
			                 "type": "string"
			               }
			             },
			             "$ref": "#/definitions/ImageConfiguration",
			             "type": "object"
			           },
			           "ImageIdentifier": {
			             "description": "Image Identifier",
			             "maxLength": 1024,
			             "minLength": 1,
			             "pattern": "",
			             "type": "string"
			           },
			           "ImageRepositoryType": {
			             "description": "Image Repository Type",
			             "enum": [
			               "ECR",
			               "ECR_PUBLIC"
			             ],
			             "type": "string"
			           }
			         },
			         "$ref": "#/definitions/ImageRepository",
			         "required": [
			           "ImageIdentifier",
			           "ImageRepositoryType"
			         ],
			         "type": "object"
			       }
			     },
			     "$ref": "#/definitions/SourceConfiguration",
			     "type": "object"
			   }
			*/
			Description: "Source Code configuration",
			Attributes: schema.SingleNestedAttributes(
				map[string]schema.Attribute{
					"authentication_configuration": {
						// Property: AuthenticationConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "Authentication Configuration",
						     "properties": {
						       "AccessRoleArn": {
						         "maxLength": 102,
						         "minLength": 29,
						         "pattern": "",
						         "$ref": "#/definitions/RoleArn",
						         "type": "string"
						       },
						       "ConnectionArn": {
						         "description": "Connection Arn",
						         "maxLength": 1011,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/AuthenticationConfiguration",
						     "type": "object"
						   }
						*/
						Description: "Authentication Configuration",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"access_role_arn": {
									// Property: AccessRoleArn
									// CloudFormation resource type schema:
									/*
									   {
									     "maxLength": 102,
									     "minLength": 29,
									     "pattern": "",
									     "$ref": "#/definitions/RoleArn",
									     "type": "string"
									   }
									*/
									Type:     types.StringType,
									Optional: true,
								},
								"connection_arn": {
									// Property: ConnectionArn
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Connection Arn",
									     "maxLength": 1011,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Description: "Connection Arn",
									Type:        types.StringType,
									Optional:    true,
								},
							},
						),
						Optional: true,
					},
					"auto_deployments_enabled": {
						// Property: AutoDeploymentsEnabled
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "Auto Deployment enabled",
						     "type": "boolean"
						   }
						*/
						Description: "Auto Deployment enabled",
						Type:        types.BoolType,
						Optional:    true,
					},
					"code_repository": {
						// Property: CodeRepository
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "Source Code Repository",
						     "properties": {
						       "CodeConfiguration": {
						         "additionalProperties": false,
						         "description": "Code Configuration",
						         "properties": {
						           "CodeConfigurationValues": {
						             "additionalProperties": false,
						             "description": "Code Configuration Values",
						             "properties": {
						               "BuildCommand": {
						                 "description": "Build Command",
						                 "type": "string"
						               },
						               "Port": {
						                 "description": "Port",
						                 "type": "string"
						               },
						               "Runtime": {
						                 "description": "Runtime",
						                 "enum": [
						                   "PYTHON_3",
						                   "NODEJS_12"
						                 ],
						                 "type": "string"
						               },
						               "RuntimeEnvironmentVariables": {
						                 "items": {
						                   "additionalProperties": false,
						                   "properties": {
						                     "Name": {
						                       "type": "string"
						                     },
						                     "Value": {
						                       "type": "string"
						                     }
						                   },
						                   "$ref": "#/definitions/KeyValuePair",
						                   "type": "object"
						                 },
						                 "type": "array"
						               },
						               "StartCommand": {
						                 "description": "Start Command",
						                 "type": "string"
						               }
						             },
						             "$ref": "#/definitions/CodeConfigurationValues",
						             "required": [
						               "Runtime"
						             ],
						             "type": "object"
						           },
						           "ConfigurationSource": {
						             "description": "Configuration Source",
						             "enum": [
						               "REPOSITORY",
						               "API"
						             ],
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/CodeConfiguration",
						         "required": [
						           "ConfigurationSource"
						         ],
						         "type": "object"
						       },
						       "RepositoryUrl": {
						         "description": "Repository Url",
						         "type": "string"
						       },
						       "SourceCodeVersion": {
						         "additionalProperties": false,
						         "description": "Source Code Version",
						         "properties": {
						           "Type": {
						             "description": "Source Code Version Type",
						             "enum": [
						               "BRANCH"
						             ],
						             "type": "string"
						           },
						           "Value": {
						             "description": "Source Code Version Value",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/SourceCodeVersion",
						         "required": [
						           "Type",
						           "Value"
						         ],
						         "type": "object"
						       }
						     },
						     "$ref": "#/definitions/CodeRepository",
						     "required": [
						       "RepositoryUrl",
						       "SourceCodeVersion"
						     ],
						     "type": "object"
						   }
						*/
						Description: "Source Code Repository",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"code_configuration": {
									// Property: CodeConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "Code Configuration",
									     "properties": {
									       "CodeConfigurationValues": {
									         "additionalProperties": false,
									         "description": "Code Configuration Values",
									         "properties": {
									           "BuildCommand": {
									             "description": "Build Command",
									             "type": "string"
									           },
									           "Port": {
									             "description": "Port",
									             "type": "string"
									           },
									           "Runtime": {
									             "description": "Runtime",
									             "enum": [
									               "PYTHON_3",
									               "NODEJS_12"
									             ],
									             "type": "string"
									           },
									           "RuntimeEnvironmentVariables": {
									             "items": {
									               "additionalProperties": false,
									               "properties": {
									                 "Name": {
									                   "type": "string"
									                 },
									                 "Value": {
									                   "type": "string"
									                 }
									               },
									               "$ref": "#/definitions/KeyValuePair",
									               "type": "object"
									             },
									             "type": "array"
									           },
									           "StartCommand": {
									             "description": "Start Command",
									             "type": "string"
									           }
									         },
									         "$ref": "#/definitions/CodeConfigurationValues",
									         "required": [
									           "Runtime"
									         ],
									         "type": "object"
									       },
									       "ConfigurationSource": {
									         "description": "Configuration Source",
									         "enum": [
									           "REPOSITORY",
									           "API"
									         ],
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/CodeConfiguration",
									     "required": [
									       "ConfigurationSource"
									     ],
									     "type": "object"
									   }
									*/
									Description: "Code Configuration",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"code_configuration_values": {
												// Property: CodeConfigurationValues
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "Code Configuration Values",
												     "properties": {
												       "BuildCommand": {
												         "description": "Build Command",
												         "type": "string"
												       },
												       "Port": {
												         "description": "Port",
												         "type": "string"
												       },
												       "Runtime": {
												         "description": "Runtime",
												         "enum": [
												           "PYTHON_3",
												           "NODEJS_12"
												         ],
												         "type": "string"
												       },
												       "RuntimeEnvironmentVariables": {
												         "items": {
												           "additionalProperties": false,
												           "properties": {
												             "Name": {
												               "type": "string"
												             },
												             "Value": {
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/KeyValuePair",
												           "type": "object"
												         },
												         "type": "array"
												       },
												       "StartCommand": {
												         "description": "Start Command",
												         "type": "string"
												       }
												     },
												     "$ref": "#/definitions/CodeConfigurationValues",
												     "required": [
												       "Runtime"
												     ],
												     "type": "object"
												   }
												*/
												Description: "Code Configuration Values",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"build_command": {
															// Property: BuildCommand
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Build Command",
															     "type": "string"
															   }
															*/
															Description: "Build Command",
															Type:        types.StringType,
															Optional:    true,
														},
														"port": {
															// Property: Port
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Port",
															     "type": "string"
															   }
															*/
															Description: "Port",
															Type:        types.StringType,
															Optional:    true,
														},
														"runtime": {
															// Property: Runtime
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Runtime",
															     "enum": [
															       "PYTHON_3",
															       "NODEJS_12"
															     ],
															     "type": "string"
															   }
															*/
															Description: "Runtime",
															Type:        types.StringType,
															Required:    true,
														},
														"runtime_environment_variables": {
															// Property: RuntimeEnvironmentVariables
															// CloudFormation resource type schema:
															/*
															   {
															     "items": {
															       "additionalProperties": false,
															       "properties": {
															         "Name": {
															           "type": "string"
															         },
															         "Value": {
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/KeyValuePair",
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"name": {
																		// Property: Name
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																	"value": {
																		// Property: Value
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "type": "string"
																		   }
																		*/
																		Type:     types.StringType,
																		Optional: true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
														"start_command": {
															// Property: StartCommand
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Start Command",
															     "type": "string"
															   }
															*/
															Description: "Start Command",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"configuration_source": {
												// Property: ConfigurationSource
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Configuration Source",
												     "enum": [
												       "REPOSITORY",
												       "API"
												     ],
												     "type": "string"
												   }
												*/
												Description: "Configuration Source",
												Type:        types.StringType,
												Required:    true,
											},
										},
									),
									Optional: true,
								},
								"repository_url": {
									// Property: RepositoryUrl
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Repository Url",
									     "type": "string"
									   }
									*/
									Description: "Repository Url",
									Type:        types.StringType,
									Required:    true,
								},
								"source_code_version": {
									// Property: SourceCodeVersion
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "Source Code Version",
									     "properties": {
									       "Type": {
									         "description": "Source Code Version Type",
									         "enum": [
									           "BRANCH"
									         ],
									         "type": "string"
									       },
									       "Value": {
									         "description": "Source Code Version Value",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/SourceCodeVersion",
									     "required": [
									       "Type",
									       "Value"
									     ],
									     "type": "object"
									   }
									*/
									Description: "Source Code Version",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"type": {
												// Property: Type
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Source Code Version Type",
												     "enum": [
												       "BRANCH"
												     ],
												     "type": "string"
												   }
												*/
												Description: "Source Code Version Type",
												Type:        types.StringType,
												Required:    true,
											},
											"value": {
												// Property: Value
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Source Code Version Value",
												     "type": "string"
												   }
												*/
												Description: "Source Code Version Value",
												Type:        types.StringType,
												Required:    true,
											},
										},
									),
									Required: true,
								},
							},
						),
						Optional: true,
					},
					"image_repository": {
						// Property: ImageRepository
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "Image Repository",
						     "properties": {
						       "ImageConfiguration": {
						         "additionalProperties": false,
						         "description": "Image Configuration",
						         "properties": {
						           "Port": {
						             "description": "Port",
						             "type": "string"
						           },
						           "RuntimeEnvironmentVariables": {
						             "items": {
						               "additionalProperties": false,
						               "properties": {
						                 "Name": {
						                   "type": "string"
						                 },
						                 "Value": {
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/KeyValuePair",
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "StartCommand": {
						             "description": "Start Command",
						             "type": "string"
						           }
						         },
						         "$ref": "#/definitions/ImageConfiguration",
						         "type": "object"
						       },
						       "ImageIdentifier": {
						         "description": "Image Identifier",
						         "maxLength": 1024,
						         "minLength": 1,
						         "pattern": "",
						         "type": "string"
						       },
						       "ImageRepositoryType": {
						         "description": "Image Repository Type",
						         "enum": [
						           "ECR",
						           "ECR_PUBLIC"
						         ],
						         "type": "string"
						       }
						     },
						     "$ref": "#/definitions/ImageRepository",
						     "required": [
						       "ImageIdentifier",
						       "ImageRepositoryType"
						     ],
						     "type": "object"
						   }
						*/
						Description: "Image Repository",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"image_configuration": {
									// Property: ImageConfiguration
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "Image Configuration",
									     "properties": {
									       "Port": {
									         "description": "Port",
									         "type": "string"
									       },
									       "RuntimeEnvironmentVariables": {
									         "items": {
									           "additionalProperties": false,
									           "properties": {
									             "Name": {
									               "type": "string"
									             },
									             "Value": {
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/KeyValuePair",
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "StartCommand": {
									         "description": "Start Command",
									         "type": "string"
									       }
									     },
									     "$ref": "#/definitions/ImageConfiguration",
									     "type": "object"
									   }
									*/
									Description: "Image Configuration",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"port": {
												// Property: Port
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Port",
												     "type": "string"
												   }
												*/
												Description: "Port",
												Type:        types.StringType,
												Optional:    true,
											},
											"runtime_environment_variables": {
												// Property: RuntimeEnvironmentVariables
												// CloudFormation resource type schema:
												/*
												   {
												     "items": {
												       "additionalProperties": false,
												       "properties": {
												         "Name": {
												           "type": "string"
												         },
												         "Value": {
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/KeyValuePair",
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"name": {
															// Property: Name
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
														"value": {
															// Property: Value
															// CloudFormation resource type schema:
															/*
															   {
															     "type": "string"
															   }
															*/
															Type:     types.StringType,
															Optional: true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"start_command": {
												// Property: StartCommand
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "Start Command",
												     "type": "string"
												   }
												*/
												Description: "Start Command",
												Type:        types.StringType,
												Optional:    true,
											},
										},
									),
									Optional: true,
								},
								"image_identifier": {
									// Property: ImageIdentifier
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Image Identifier",
									     "maxLength": 1024,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Description: "Image Identifier",
									Type:        types.StringType,
									Required:    true,
								},
								"image_repository_type": {
									// Property: ImageRepositoryType
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Image Repository Type",
									     "enum": [
									       "ECR",
									       "ECR_PUBLIC"
									     ],
									     "type": "string"
									   }
									*/
									Description: "Image Repository Type",
									Type:        types.StringType,
									Required:    true,
								},
							},
						),
						Optional: true,
					},
				},
			),
			Required: true,
		},
		"status": {
			// Property: Status
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "AppRunner Service status.",
			     "type": "string"
			   }
			*/
			Description: "AppRunner Service status.",
			Type:        types.StringType,
			Computed:    true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "items": {
			       "additionalProperties": false,
			       "properties": {
			         "Key": {
			           "type": "string"
			         },
			         "Value": {
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/Tag",
			       "type": "object"
			     },
			     "type": "array"
			   }
			*/
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "type": "string"
						   }
						*/
						Type:     types.StringType,
						Optional: true,
					},
				},
				schema.ListNestedAttributesOptions{},
			),
			Optional: true,
			Computed: true,
			// Tags is a force-new attribute.
			// Tags is a write-only attribute.
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "The AWS::AppRunner::Service resource specifies an AppRunner Service.",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::AppRunner::Service").WithTerraformTypeName("aws_apprunner_service").WithTerraformSchema(schema)

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/Tags",
		"/properties/AutoScalingConfigurationArn",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_apprunner_service", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
