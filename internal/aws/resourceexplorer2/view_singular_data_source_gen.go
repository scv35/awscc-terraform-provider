// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package resourceexplorer2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_resourceexplorer2_view", viewDataSource)
}

// viewDataSource returns the Terraform awscc_resourceexplorer2_view data source.
// This Terraform data source corresponds to the CloudFormation AWS::ResourceExplorer2::View resource.
func viewDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]tfsdk.Attribute{
		"filters": {
			// Property: Filters
			// CloudFormation resource type schema:
			//
			//	{
			//	  "additionalProperties": false,
			//	  "properties": {
			//	    "FilterString": {
			//	      "type": "string"
			//	    }
			//	  },
			//	  "required": [
			//	    "FilterString"
			//	  ],
			//	  "type": "object"
			//	}
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"filter_string": {
						// Property: FilterString
						Type:     types.StringType,
						Computed: true,
					},
				},
			),
			Computed: true,
		},
		"included_properties": {
			// Property: IncludedProperties
			// CloudFormation resource type schema:
			//
			//	{
			//	  "insertionOrder": false,
			//	  "items": {
			//	    "additionalProperties": false,
			//	    "properties": {
			//	      "Name": {
			//	        "type": "string"
			//	      }
			//	    },
			//	    "required": [
			//	      "Name"
			//	    ],
			//	    "type": "object"
			//	  },
			//	  "type": "array"
			//	}
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"name": {
						// Property: Name
						Type:     types.StringType,
						Computed: true,
					},
				},
			),
			Computed: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			//
			//	{
			//	  "additionalProperties": false,
			//	  "patternProperties": {
			//	    "": {
			//	      "type": "string"
			//	    }
			//	  },
			//	  "type": "object"
			//	}
			//
			// Pattern: ""
			Type:     types.MapType{ElemType: types.StringType},
			Computed: true,
		},
		"view_arn": {
			// Property: ViewArn
			// CloudFormation resource type schema:
			//
			//	{
			//	  "type": "string"
			//	}
			Type:     types.StringType,
			Computed: true,
		},
		"view_name": {
			// Property: ViewName
			// CloudFormation resource type schema:
			//
			//	{
			//	  "pattern": "^[a-zA-Z0-9\\-]{1,64}$",
			//	  "type": "string"
			//	}
			Type:     types.StringType,
			Computed: true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::ResourceExplorer2::View",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::ResourceExplorer2::View").WithTerraformTypeName("awscc_resourceexplorer2_view")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"filter_string":       "FilterString",
		"filters":             "Filters",
		"included_properties": "IncludedProperties",
		"name":                "Name",
		"tags":                "Tags",
		"view_arn":            "ViewArn",
		"view_name":           "ViewName",
	})

	v, err := NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
