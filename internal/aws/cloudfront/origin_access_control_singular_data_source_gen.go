// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package cloudfront

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_cloudfront_origin_access_control", originAccessControlDataSource)
}

// originAccessControlDataSource returns the Terraform awscc_cloudfront_origin_access_control data source.
// This Terraform data source corresponds to the CloudFormation AWS::CloudFront::OriginAccessControl resource.
func originAccessControlDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]tfsdk.Attribute{
		"id": {
			// Property: Id
			// CloudFormation resource type schema:
			//
			//	{
			//	  "type": "string"
			//	}
			Type:     types.StringType,
			Computed: true,
		},
		"origin_access_control_config": {
			// Property: OriginAccessControlConfig
			// CloudFormation resource type schema:
			//
			//	{
			//	  "additionalProperties": false,
			//	  "properties": {
			//	    "Description": {
			//	      "type": "string"
			//	    },
			//	    "Name": {
			//	      "type": "string"
			//	    },
			//	    "OriginAccessControlOriginType": {
			//	      "pattern": "^(s3)$",
			//	      "type": "string"
			//	    },
			//	    "SigningBehavior": {
			//	      "pattern": "^(never|no-override|always)$",
			//	      "type": "string"
			//	    },
			//	    "SigningProtocol": {
			//	      "pattern": "^(sigv4)$",
			//	      "type": "string"
			//	    }
			//	  },
			//	  "required": [
			//	    "Name",
			//	    "SigningProtocol",
			//	    "SigningBehavior",
			//	    "OriginAccessControlOriginType"
			//	  ],
			//	  "type": "object"
			//	}
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"description": {
						// Property: Description
						Type:     types.StringType,
						Computed: true,
					},
					"name": {
						// Property: Name
						Type:     types.StringType,
						Computed: true,
					},
					"origin_access_control_origin_type": {
						// Property: OriginAccessControlOriginType
						Type:     types.StringType,
						Computed: true,
					},
					"signing_behavior": {
						// Property: SigningBehavior
						Type:     types.StringType,
						Computed: true,
					},
					"signing_protocol": {
						// Property: SigningProtocol
						Type:     types.StringType,
						Computed: true,
					},
				},
			),
			Computed: true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::CloudFront::OriginAccessControl",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::CloudFront::OriginAccessControl").WithTerraformTypeName("awscc_cloudfront_origin_access_control")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"description":                       "Description",
		"id":                                "Id",
		"name":                              "Name",
		"origin_access_control_config":      "OriginAccessControlConfig",
		"origin_access_control_origin_type": "OriginAccessControlOriginType",
		"signing_behavior":                  "SigningBehavior",
		"signing_protocol":                  "SigningProtocol",
	})

	v, err := NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
