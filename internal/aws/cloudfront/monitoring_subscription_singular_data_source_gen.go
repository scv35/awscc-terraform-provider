// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package cloudfront

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_cloudfront_monitoring_subscription", monitoringSubscriptionDataSource)
}

// monitoringSubscriptionDataSource returns the Terraform awscc_cloudfront_monitoring_subscription data source.
// This Terraform data source corresponds to the CloudFormation AWS::CloudFront::MonitoringSubscription resource.
func monitoringSubscriptionDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]tfsdk.Attribute{
		"distribution_id": {
			// Property: DistributionId
			// CloudFormation resource type schema:
			//
			//	{
			//	  "type": "string"
			//	}
			Type:     types.StringType,
			Computed: true,
		},
		"monitoring_subscription": {
			// Property: MonitoringSubscription
			// CloudFormation resource type schema:
			//
			//	{
			//	  "additionalProperties": false,
			//	  "properties": {
			//	    "RealtimeMetricsSubscriptionConfig": {
			//	      "additionalProperties": false,
			//	      "properties": {
			//	        "RealtimeMetricsSubscriptionStatus": {
			//	          "enum": [
			//	            "Enabled",
			//	            "Disabled"
			//	          ],
			//	          "type": "string"
			//	        }
			//	      },
			//	      "required": [
			//	        "RealtimeMetricsSubscriptionStatus"
			//	      ],
			//	      "type": "object"
			//	    }
			//	  },
			//	  "type": "object"
			//	}
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"realtime_metrics_subscription_config": {
						// Property: RealtimeMetricsSubscriptionConfig
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"realtime_metrics_subscription_status": {
									// Property: RealtimeMetricsSubscriptionStatus
									Type:     types.StringType,
									Computed: true,
								},
							},
						),
						Computed: true,
					},
				},
			),
			Computed: true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::CloudFront::MonitoringSubscription",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::CloudFront::MonitoringSubscription").WithTerraformTypeName("awscc_cloudfront_monitoring_subscription")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"distribution_id":                      "DistributionId",
		"monitoring_subscription":              "MonitoringSubscription",
		"realtime_metrics_subscription_config": "RealtimeMetricsSubscriptionConfig",
		"realtime_metrics_subscription_status": "RealtimeMetricsSubscriptionStatus",
	})

	v, err := NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
