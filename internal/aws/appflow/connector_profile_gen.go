// Code generated by generators/resource/main.go; DO NOT EDIT.

package appflow

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("awscc_appflow_connector_profile", connectorProfileResourceType)
}

// connectorProfileResourceType returns the Terraform awscc_appflow_connector_profile resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::AppFlow::ConnectorProfile resource type.
func connectorProfileResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"connection_mode": {
			// Property: ConnectionMode
			// CloudFormation resource type schema:
			// {
			//   "description": "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular",
			//   "enum": [
			//     "Public",
			//     "Private"
			//   ],
			//   "type": "string"
			// }
			Description: "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular",
			Type:        types.StringType,
			Required:    true,
		},
		"connector_profile_arn": {
			// Property: ConnectorProfileArn
			// CloudFormation resource type schema:
			// {
			//   "description": "Unique identifier for connector profile resources",
			//   "maxLength": 512,
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "Unique identifier for connector profile resources",
			Type:        types.StringType,
			Computed:    true,
		},
		"connector_profile_config": {
			// Property: ConnectorProfileConfig
			// CloudFormation resource type schema:
			// {
			//   "description": "Connector specific configurations needed to create connector profile",
			//   "properties": {
			//     "ConnectorProfileCredentials": {
			//       "description": "Connector specific configuration needed to create connector profile based on Authentication mechanism",
			//       "properties": {
			//         "Amplitude": {
			//           "properties": {
			//             "ApiKey": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SecretKey": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ApiKey",
			//             "SecretKey"
			//           ],
			//           "type": "object"
			//         },
			//         "Datadog": {
			//           "properties": {
			//             "ApiKey": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ApplicationKey": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ApiKey",
			//             "ApplicationKey"
			//           ],
			//           "type": "object"
			//         },
			//         "Dynatrace": {
			//           "properties": {
			//             "ApiToken": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ApiToken"
			//           ],
			//           "type": "object"
			//         },
			//         "GoogleAnalytics": {
			//           "properties": {
			//             "AccessToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientId": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientSecret": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ConnectorOAuthRequest": {
			//               "properties": {
			//                 "AuthCode": {
			//                   "description": "The code provided by the connector when it has been authenticated via the connected app.",
			//                   "type": "string"
			//                 },
			//                 "RedirectUri": {
			//                   "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "RefreshToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ClientId",
			//             "ClientSecret"
			//           ],
			//           "type": "object"
			//         },
			//         "InforNexus": {
			//           "properties": {
			//             "AccessKeyId": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Datakey": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SecretAccessKey": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "UserId": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "AccessKeyId",
			//             "UserId",
			//             "SecretAccessKey",
			//             "Datakey"
			//           ],
			//           "type": "object"
			//         },
			//         "Marketo": {
			//           "properties": {
			//             "AccessToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientId": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientSecret": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ConnectorOAuthRequest": {
			//               "properties": {
			//                 "AuthCode": {
			//                   "description": "The code provided by the connector when it has been authenticated via the connected app.",
			//                   "type": "string"
			//                 },
			//                 "RedirectUri": {
			//                   "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "required": [
			//             "ClientId",
			//             "ClientSecret"
			//           ],
			//           "type": "object"
			//         },
			//         "Redshift": {
			//           "properties": {
			//             "Password": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Username": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "Username",
			//             "Password"
			//           ],
			//           "type": "object"
			//         },
			//         "Salesforce": {
			//           "properties": {
			//             "AccessToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientCredentialsArn": {
			//               "maxLength": 2048,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ConnectorOAuthRequest": {
			//               "properties": {
			//                 "AuthCode": {
			//                   "description": "The code provided by the connector when it has been authenticated via the connected app.",
			//                   "type": "string"
			//                 },
			//                 "RedirectUri": {
			//                   "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "RefreshToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "ServiceNow": {
			//           "properties": {
			//             "Password": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Username": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "Username",
			//             "Password"
			//           ],
			//           "type": "object"
			//         },
			//         "Singular": {
			//           "properties": {
			//             "ApiKey": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ApiKey"
			//           ],
			//           "type": "object"
			//         },
			//         "Slack": {
			//           "properties": {
			//             "AccessToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientId": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientSecret": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ConnectorOAuthRequest": {
			//               "properties": {
			//                 "AuthCode": {
			//                   "description": "The code provided by the connector when it has been authenticated via the connected app.",
			//                   "type": "string"
			//                 },
			//                 "RedirectUri": {
			//                   "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "required": [
			//             "ClientId",
			//             "ClientSecret"
			//           ],
			//           "type": "object"
			//         },
			//         "Snowflake": {
			//           "properties": {
			//             "Password": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Username": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "Username",
			//             "Password"
			//           ],
			//           "type": "object"
			//         },
			//         "Trendmicro": {
			//           "properties": {
			//             "ApiSecretKey": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "ApiSecretKey"
			//           ],
			//           "type": "object"
			//         },
			//         "Veeva": {
			//           "properties": {
			//             "Password": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Username": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "Username",
			//             "Password"
			//           ],
			//           "type": "object"
			//         },
			//         "Zendesk": {
			//           "properties": {
			//             "AccessToken": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientId": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ClientSecret": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "ConnectorOAuthRequest": {
			//               "properties": {
			//                 "AuthCode": {
			//                   "description": "The code provided by the connector when it has been authenticated via the connected app.",
			//                   "type": "string"
			//                 },
			//                 "RedirectUri": {
			//                   "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "required": [
			//             "ClientId",
			//             "ClientSecret"
			//           ],
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "ConnectorProfileProperties": {
			//       "description": "Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular",
			//       "properties": {
			//         "Datadog": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Dynatrace": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "InforNexus": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Marketo": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Redshift": {
			//           "properties": {
			//             "BucketName": {
			//               "maxLength": 63,
			//               "minLength": 3,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "BucketPrefix": {
			//               "maxLength": 128,
			//               "type": "string"
			//             },
			//             "DatabaseUrl": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "RoleArn": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "DatabaseUrl",
			//             "BucketName",
			//             "RoleArn"
			//           ],
			//           "type": "object"
			//         },
			//         "Salesforce": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "isSandboxEnvironment": {
			//               "type": "boolean"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "ServiceNow": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Slack": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Snowflake": {
			//           "properties": {
			//             "AccountName": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "BucketName": {
			//               "maxLength": 63,
			//               "minLength": 3,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "BucketPrefix": {
			//               "maxLength": 128,
			//               "type": "string"
			//             },
			//             "PrivateLinkServiceName": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Region": {
			//               "maxLength": 64,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Stage": {
			//               "maxLength": 16,
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Warehouse": {
			//               "maxLength": 512,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "Warehouse",
			//             "Stage",
			//             "BucketName"
			//           ],
			//           "type": "object"
			//         },
			//         "Veeva": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         },
			//         "Zendesk": {
			//           "properties": {
			//             "InstanceUrl": {
			//               "maxLength": 256,
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "InstanceUrl"
			//           ],
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     }
			//   },
			//   "required": [
			//     "ConnectorProfileCredentials"
			//   ],
			//   "type": "object"
			// }
			Description: "Connector specific configurations needed to create connector profile",
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"connector_profile_credentials": {
						// Property: ConnectorProfileCredentials
						Description: "Connector specific configuration needed to create connector profile based on Authentication mechanism",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"amplitude": {
									// Property: Amplitude
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"api_key": {
												// Property: ApiKey
												Type:     types.StringType,
												Required: true,
											},
											"secret_key": {
												// Property: SecretKey
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"datadog": {
									// Property: Datadog
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"api_key": {
												// Property: ApiKey
												Type:     types.StringType,
												Required: true,
											},
											"application_key": {
												// Property: ApplicationKey
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"dynatrace": {
									// Property: Dynatrace
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"api_token": {
												// Property: ApiToken
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"google_analytics": {
									// Property: GoogleAnalytics
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_token": {
												// Property: AccessToken
												Type:     types.StringType,
												Optional: true,
											},
											"client_id": {
												// Property: ClientId
												Type:     types.StringType,
												Required: true,
											},
											"client_secret": {
												// Property: ClientSecret
												Type:     types.StringType,
												Required: true,
											},
											"connector_o_auth_request": {
												// Property: ConnectorOAuthRequest
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"auth_code": {
															// Property: AuthCode
															Description: "The code provided by the connector when it has been authenticated via the connected app.",
															Type:        types.StringType,
															Optional:    true,
														},
														"redirect_uri": {
															// Property: RedirectUri
															Description: "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"refresh_token": {
												// Property: RefreshToken
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"infor_nexus": {
									// Property: InforNexus
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_key_id": {
												// Property: AccessKeyId
												Type:     types.StringType,
												Required: true,
											},
											"datakey": {
												// Property: Datakey
												Type:     types.StringType,
												Required: true,
											},
											"secret_access_key": {
												// Property: SecretAccessKey
												Type:     types.StringType,
												Required: true,
											},
											"user_id": {
												// Property: UserId
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"marketo": {
									// Property: Marketo
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_token": {
												// Property: AccessToken
												Type:     types.StringType,
												Optional: true,
											},
											"client_id": {
												// Property: ClientId
												Type:     types.StringType,
												Required: true,
											},
											"client_secret": {
												// Property: ClientSecret
												Type:     types.StringType,
												Required: true,
											},
											"connector_o_auth_request": {
												// Property: ConnectorOAuthRequest
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"auth_code": {
															// Property: AuthCode
															Description: "The code provided by the connector when it has been authenticated via the connected app.",
															Type:        types.StringType,
															Optional:    true,
														},
														"redirect_uri": {
															// Property: RedirectUri
															Description: "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"redshift": {
									// Property: Redshift
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"password": {
												// Property: Password
												Type:     types.StringType,
												Required: true,
											},
											"username": {
												// Property: Username
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"salesforce": {
									// Property: Salesforce
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_token": {
												// Property: AccessToken
												Type:     types.StringType,
												Optional: true,
											},
											"client_credentials_arn": {
												// Property: ClientCredentialsArn
												Type:     types.StringType,
												Optional: true,
											},
											"connector_o_auth_request": {
												// Property: ConnectorOAuthRequest
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"auth_code": {
															// Property: AuthCode
															Description: "The code provided by the connector when it has been authenticated via the connected app.",
															Type:        types.StringType,
															Optional:    true,
														},
														"redirect_uri": {
															// Property: RedirectUri
															Description: "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"refresh_token": {
												// Property: RefreshToken
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"service_now": {
									// Property: ServiceNow
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"password": {
												// Property: Password
												Type:     types.StringType,
												Required: true,
											},
											"username": {
												// Property: Username
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"singular": {
									// Property: Singular
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"api_key": {
												// Property: ApiKey
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"slack": {
									// Property: Slack
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_token": {
												// Property: AccessToken
												Type:     types.StringType,
												Optional: true,
											},
											"client_id": {
												// Property: ClientId
												Type:     types.StringType,
												Required: true,
											},
											"client_secret": {
												// Property: ClientSecret
												Type:     types.StringType,
												Required: true,
											},
											"connector_o_auth_request": {
												// Property: ConnectorOAuthRequest
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"auth_code": {
															// Property: AuthCode
															Description: "The code provided by the connector when it has been authenticated via the connected app.",
															Type:        types.StringType,
															Optional:    true,
														},
														"redirect_uri": {
															// Property: RedirectUri
															Description: "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"snowflake": {
									// Property: Snowflake
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"password": {
												// Property: Password
												Type:     types.StringType,
												Required: true,
											},
											"username": {
												// Property: Username
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"trendmicro": {
									// Property: Trendmicro
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"api_secret_key": {
												// Property: ApiSecretKey
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"veeva": {
									// Property: Veeva
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"password": {
												// Property: Password
												Type:     types.StringType,
												Required: true,
											},
											"username": {
												// Property: Username
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"zendesk": {
									// Property: Zendesk
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"access_token": {
												// Property: AccessToken
												Type:     types.StringType,
												Optional: true,
											},
											"client_id": {
												// Property: ClientId
												Type:     types.StringType,
												Required: true,
											},
											"client_secret": {
												// Property: ClientSecret
												Type:     types.StringType,
												Required: true,
											},
											"connector_o_auth_request": {
												// Property: ConnectorOAuthRequest
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"auth_code": {
															// Property: AuthCode
															Description: "The code provided by the connector when it has been authenticated via the connected app.",
															Type:        types.StringType,
															Optional:    true,
														},
														"redirect_uri": {
															// Property: RedirectUri
															Description: "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Required: true,
					},
					"connector_profile_properties": {
						// Property: ConnectorProfileProperties
						Description: "Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"datadog": {
									// Property: Datadog
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"dynatrace": {
									// Property: Dynatrace
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"infor_nexus": {
									// Property: InforNexus
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"marketo": {
									// Property: Marketo
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"redshift": {
									// Property: Redshift
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"bucket_name": {
												// Property: BucketName
												Type:     types.StringType,
												Required: true,
											},
											"bucket_prefix": {
												// Property: BucketPrefix
												Type:     types.StringType,
												Optional: true,
											},
											"database_url": {
												// Property: DatabaseUrl
												Type:     types.StringType,
												Required: true,
											},
											"role_arn": {
												// Property: RoleArn
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"salesforce": {
									// Property: Salesforce
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Optional: true,
											},
											"is_sandbox_environment": {
												// Property: isSandboxEnvironment
												Type:     types.BoolType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"service_now": {
									// Property: ServiceNow
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"slack": {
									// Property: Slack
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"snowflake": {
									// Property: Snowflake
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"account_name": {
												// Property: AccountName
												Type:     types.StringType,
												Optional: true,
											},
											"bucket_name": {
												// Property: BucketName
												Type:     types.StringType,
												Required: true,
											},
											"bucket_prefix": {
												// Property: BucketPrefix
												Type:     types.StringType,
												Optional: true,
											},
											"private_link_service_name": {
												// Property: PrivateLinkServiceName
												Type:     types.StringType,
												Optional: true,
											},
											"region": {
												// Property: Region
												Type:     types.StringType,
												Optional: true,
											},
											"stage": {
												// Property: Stage
												Type:     types.StringType,
												Required: true,
											},
											"warehouse": {
												// Property: Warehouse
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"veeva": {
									// Property: Veeva
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"zendesk": {
									// Property: Zendesk
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"instance_url": {
												// Property: InstanceUrl
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
			),
			Optional: true,
			// ConnectorProfileConfig is a write-only attribute.
		},
		"connector_profile_name": {
			// Property: ConnectorProfileName
			// CloudFormation resource type schema:
			// {
			//   "description": "The maximum number of items to retrieve in a single batch.",
			//   "maxLength": 256,
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The maximum number of items to retrieve in a single batch.",
			Type:        types.StringType,
			Required:    true,
			// ConnectorProfileName is a force-new attribute.
		},
		"connector_type": {
			// Property: ConnectorType
			// CloudFormation resource type schema:
			// {
			//   "enum": [
			//     "Salesforce",
			//     "Singular",
			//     "Slack",
			//     "Redshift",
			//     "Marketo",
			//     "Googleanalytics",
			//     "Zendesk",
			//     "Servicenow",
			//     "Datadog",
			//     "Trendmicro",
			//     "Snowflake",
			//     "Dynatrace",
			//     "Infornexus",
			//     "Amplitude",
			//     "Veeva"
			//   ],
			//   "type": "string"
			// }
			Type:     types.StringType,
			Required: true,
			// ConnectorType is a force-new attribute.
		},
		"credentials_arn": {
			// Property: CredentialsArn
			// CloudFormation resource type schema:
			// {
			//   "description": "A unique Arn for Connector-Profile resource",
			//   "maxLength": 512,
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "A unique Arn for Connector-Profile resource",
			Type:        types.StringType,
			Computed:    true,
		},
		"kms_arn": {
			// Property: KMSArn
			// CloudFormation resource type schema:
			// {
			//   "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
			//   "maxLength": 2048,
			//   "minLength": 20,
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
			Type:        types.StringType,
			Optional:    true,
			Computed:    true,
			// KMSArn is a force-new attribute.
		},
	}

	// Required for acceptance testing.
	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := tfsdk.Schema{
		Description: "Resource Type definition for AWS::AppFlow::ConnectorProfile",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::AppFlow::ConnectorProfile").WithTerraformTypeName("awscc_appflow_connector_profile").WithTerraformSchema(schema)

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/ConnectorProfileConfig",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_appflow_connector_profile", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
