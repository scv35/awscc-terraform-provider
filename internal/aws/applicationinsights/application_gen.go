// Code generated by generators/resource/main.go; DO NOT EDIT.

package applicationinsights

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/schema"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-aws-cloudapi/internal/generic"
	"github.com/hashicorp/terraform-provider-aws-cloudapi/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("aws_applicationinsights_application", applicationResourceType)
}

// applicationResourceType returns the Terraform aws_applicationinsights_application resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::ApplicationInsights::Application resource type.
func applicationResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]schema.Attribute{
		"application_arn": {
			// Property: ApplicationARN
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The ARN of the ApplicationInsights application.",
			     "type": "string"
			   }
			*/
			Description: "The ARN of the ApplicationInsights application.",
			Type:        types.StringType,
			Computed:    true,
		},
		"auto_configuration_enabled": {
			// Property: AutoConfigurationEnabled
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "If set to true, application will be configured with recommended monitoring configuration.",
			     "type": "boolean"
			   }
			*/
			Description: "If set to true, application will be configured with recommended monitoring configuration.",
			Type:        types.BoolType,
			Optional:    true,
		},
		"cwe_monitor_enabled": {
			// Property: CWEMonitorEnabled
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources.",
			     "type": "boolean"
			   }
			*/
			Description: "Indicates whether Application Insights can listen to CloudWatch events for the application resources.",
			Type:        types.BoolType,
			Optional:    true,
		},
		"component_monitoring_settings": {
			// Property: ComponentMonitoringSettings
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The monitoring settings of the components.",
			     "items": {
			       "additionalProperties": false,
			       "description": "The monitoring setting of the component.",
			       "properties": {
			         "ComponentARN": {
			           "description": "The ARN of the compnonent.",
			           "maxLength": 300,
			           "minLength": 20,
			           "pattern": "",
			           "type": "string"
			         },
			         "ComponentConfigurationMode": {
			           "description": "The component monitoring configuration mode.",
			           "enum": [
			             "DEFAULT",
			             "DEFAULT_WITH_OVERWRITE",
			             "CUSTOM"
			           ],
			           "type": "string"
			         },
			         "ComponentName": {
			           "description": "The name of the component.",
			           "maxLength": 128,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         },
			         "CustomComponentConfiguration": {
			           "additionalProperties": false,
			           "description": "The configuration settings of the component.",
			           "properties": {
			             "ConfigurationDetails": {
			               "additionalProperties": false,
			               "description": "The configuration settings.",
			               "properties": {
			                 "AlarmMetrics": {
			                   "description": "A list of metrics to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A metric to be monitored for the component.",
			                     "properties": {
			                       "AlarmMetricName": {
			                         "description": "The name of the metric to be monitored for the component.",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/AlarmMetric",
			                     "required": [
			                       "AlarmMetricName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "Alarms": {
			                   "description": "A list of alarms to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A CloudWatch alarm to be monitored for the component.",
			                     "properties": {
			                       "AlarmName": {
			                         "description": "The name of the CloudWatch alarm to be monitored for the component.",
			                         "maxLength": 255,
			                         "minLength": 1,
			                         "type": "string"
			                       },
			                       "Severity": {
			                         "description": "Indicates the degree of outage when the alarm goes off.",
			                         "enum": [
			                           "HIGH",
			                           "MEDIUM",
			                           "LOW"
			                         ],
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/Alarm",
			                     "required": [
			                       "AlarmName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "JMXPrometheusExporter": {
			                   "additionalProperties": false,
			                   "description": "The JMX Prometheus Exporter settings.",
			                   "properties": {
			                     "HostPort": {
			                       "description": "Java agent host port",
			                       "type": "string"
			                     },
			                     "JMXURL": {
			                       "description": "JMX service URL.",
			                       "type": "string"
			                     },
			                     "PrometheusPort": {
			                       "description": "Prometheus exporter port",
			                       "type": "string"
			                     }
			                   },
			                   "$ref": "#/definitions/JMXPrometheusExporter",
			                   "type": "object"
			                 },
			                 "Logs": {
			                   "description": "A list of logs to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A log to be monitored for the component.",
			                     "properties": {
			                       "Encoding": {
			                         "description": "The type of encoding of the logs to be monitored.",
			                         "enum": [
			                           "utf-8",
			                           "utf-16",
			                           "ascii"
			                         ],
			                         "type": "string"
			                       },
			                       "LogGroupName": {
			                         "description": "The CloudWatch log group name to be associated to the monitored log.",
			                         "maxLength": 512,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogPath": {
			                         "description": "The path of the logs to be monitored.",
			                         "maxLength": 260,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogType": {
			                         "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "PatternSet": {
			                         "description": "The name of the log pattern set.",
			                         "maxLength": 30,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/Log",
			                     "required": [
			                       "LogType"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "WindowsEvents": {
			                   "description": "A list of Windows Events to log.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A Windows Event to be monitored for the component.",
			                     "properties": {
			                       "EventLevels": {
			                         "description": "The levels of event to log. ",
			                         "items": {
			                           "description": "The level of event to log.",
			                           "enum": [
			                             "INFORMATION",
			                             "WARNING",
			                             "ERROR",
			                             "CRITICAL",
			                             "VERBOSE"
			                           ],
			                           "$ref": "#/definitions/EventLevel",
			                           "type": "string"
			                         },
			                         "minItems": 1,
			                         "type": "array"
			                       },
			                       "EventName": {
			                         "description": "The type of Windows Events to log.",
			                         "maxLength": 260,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogGroupName": {
			                         "description": "The CloudWatch log group name to be associated to the monitored log.",
			                         "maxLength": 512,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "PatternSet": {
			                         "description": "The name of the log pattern set.",
			                         "maxLength": 30,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/WindowsEvent",
			                     "required": [
			                       "LogGroupName",
			                       "EventName",
			                       "EventLevels"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 }
			               },
			               "$ref": "#/definitions/ConfigurationDetails",
			               "type": "object"
			             },
			             "SubComponentTypeConfigurations": {
			               "description": "Sub component configurations of the component.",
			               "items": {
			                 "additionalProperties": false,
			                 "description": "One type sub component configurations for the component.",
			                 "properties": {
			                   "SubComponentConfigurationDetails": {
			                     "additionalProperties": false,
			                     "description": "The configuration settings of sub components.",
			                     "properties": {
			                       "AlarmMetrics": {
			                         "description": "A list of metrics to monitor for the component.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A metric to be monitored for the component.",
			                           "properties": {
			                             "AlarmMetricName": {
			                               "description": "The name of the metric to be monitored for the component.",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/AlarmMetric",
			                           "required": [
			                             "AlarmMetricName"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       },
			                       "Logs": {
			                         "description": "A list of logs to monitor for the component.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A log to be monitored for the component.",
			                           "properties": {
			                             "Encoding": {
			                               "description": "The type of encoding of the logs to be monitored.",
			                               "enum": [
			                                 "utf-8",
			                                 "utf-16",
			                                 "ascii"
			                               ],
			                               "type": "string"
			                             },
			                             "LogGroupName": {
			                               "description": "The CloudWatch log group name to be associated to the monitored log.",
			                               "maxLength": 512,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogPath": {
			                               "description": "The path of the logs to be monitored.",
			                               "maxLength": 260,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogType": {
			                               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "PatternSet": {
			                               "description": "The name of the log pattern set.",
			                               "maxLength": 30,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/Log",
			                           "required": [
			                             "LogType"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       },
			                       "WindowsEvents": {
			                         "description": "A list of Windows Events to log.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A Windows Event to be monitored for the component.",
			                           "properties": {
			                             "EventLevels": {
			                               "description": "The levels of event to log. ",
			                               "items": {
			                                 "description": "The level of event to log.",
			                                 "enum": [
			                                   "INFORMATION",
			                                   "WARNING",
			                                   "ERROR",
			                                   "CRITICAL",
			                                   "VERBOSE"
			                                 ],
			                                 "$ref": "#/definitions/EventLevel",
			                                 "type": "string"
			                               },
			                               "minItems": 1,
			                               "type": "array"
			                             },
			                             "EventName": {
			                               "description": "The type of Windows Events to log.",
			                               "maxLength": 260,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogGroupName": {
			                               "description": "The CloudWatch log group name to be associated to the monitored log.",
			                               "maxLength": 512,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "PatternSet": {
			                               "description": "The name of the log pattern set.",
			                               "maxLength": 30,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/WindowsEvent",
			                           "required": [
			                             "LogGroupName",
			                             "EventName",
			                             "EventLevels"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       }
			                     },
			                     "$ref": "#/definitions/SubComponentConfigurationDetails",
			                     "type": "object"
			                   },
			                   "SubComponentType": {
			                     "description": "The sub component type.",
			                     "enum": [
			                       "AWS::EC2::Instance",
			                       "AWS::EC2::Volume"
			                     ],
			                     "type": "string"
			                   }
			                 },
			                 "$ref": "#/definitions/SubComponentTypeConfiguration",
			                 "required": [
			                   "SubComponentType",
			                   "SubComponentConfigurationDetails"
			                 ],
			                 "type": "object"
			               },
			               "minItems": 1,
			               "type": "array"
			             }
			           },
			           "$ref": "#/definitions/ComponentConfiguration",
			           "type": "object"
			         },
			         "DefaultOverwriteComponentConfiguration": {
			           "additionalProperties": false,
			           "description": "The configuration settings of the component.",
			           "properties": {
			             "ConfigurationDetails": {
			               "additionalProperties": false,
			               "description": "The configuration settings.",
			               "properties": {
			                 "AlarmMetrics": {
			                   "description": "A list of metrics to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A metric to be monitored for the component.",
			                     "properties": {
			                       "AlarmMetricName": {
			                         "description": "The name of the metric to be monitored for the component.",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/AlarmMetric",
			                     "required": [
			                       "AlarmMetricName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "Alarms": {
			                   "description": "A list of alarms to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A CloudWatch alarm to be monitored for the component.",
			                     "properties": {
			                       "AlarmName": {
			                         "description": "The name of the CloudWatch alarm to be monitored for the component.",
			                         "maxLength": 255,
			                         "minLength": 1,
			                         "type": "string"
			                       },
			                       "Severity": {
			                         "description": "Indicates the degree of outage when the alarm goes off.",
			                         "enum": [
			                           "HIGH",
			                           "MEDIUM",
			                           "LOW"
			                         ],
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/Alarm",
			                     "required": [
			                       "AlarmName"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "JMXPrometheusExporter": {
			                   "additionalProperties": false,
			                   "description": "The JMX Prometheus Exporter settings.",
			                   "properties": {
			                     "HostPort": {
			                       "description": "Java agent host port",
			                       "type": "string"
			                     },
			                     "JMXURL": {
			                       "description": "JMX service URL.",
			                       "type": "string"
			                     },
			                     "PrometheusPort": {
			                       "description": "Prometheus exporter port",
			                       "type": "string"
			                     }
			                   },
			                   "$ref": "#/definitions/JMXPrometheusExporter",
			                   "type": "object"
			                 },
			                 "Logs": {
			                   "description": "A list of logs to monitor for the component.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A log to be monitored for the component.",
			                     "properties": {
			                       "Encoding": {
			                         "description": "The type of encoding of the logs to be monitored.",
			                         "enum": [
			                           "utf-8",
			                           "utf-16",
			                           "ascii"
			                         ],
			                         "type": "string"
			                       },
			                       "LogGroupName": {
			                         "description": "The CloudWatch log group name to be associated to the monitored log.",
			                         "maxLength": 512,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogPath": {
			                         "description": "The path of the logs to be monitored.",
			                         "maxLength": 260,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogType": {
			                         "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "PatternSet": {
			                         "description": "The name of the log pattern set.",
			                         "maxLength": 30,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/Log",
			                     "required": [
			                       "LogType"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 },
			                 "WindowsEvents": {
			                   "description": "A list of Windows Events to log.",
			                   "items": {
			                     "additionalProperties": false,
			                     "description": "A Windows Event to be monitored for the component.",
			                     "properties": {
			                       "EventLevels": {
			                         "description": "The levels of event to log. ",
			                         "items": {
			                           "description": "The level of event to log.",
			                           "enum": [
			                             "INFORMATION",
			                             "WARNING",
			                             "ERROR",
			                             "CRITICAL",
			                             "VERBOSE"
			                           ],
			                           "$ref": "#/definitions/EventLevel",
			                           "type": "string"
			                         },
			                         "minItems": 1,
			                         "type": "array"
			                       },
			                       "EventName": {
			                         "description": "The type of Windows Events to log.",
			                         "maxLength": 260,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "LogGroupName": {
			                         "description": "The CloudWatch log group name to be associated to the monitored log.",
			                         "maxLength": 512,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       },
			                       "PatternSet": {
			                         "description": "The name of the log pattern set.",
			                         "maxLength": 30,
			                         "minLength": 1,
			                         "pattern": "",
			                         "type": "string"
			                       }
			                     },
			                     "$ref": "#/definitions/WindowsEvent",
			                     "required": [
			                       "LogGroupName",
			                       "EventName",
			                       "EventLevels"
			                     ],
			                     "type": "object"
			                   },
			                   "type": "array"
			                 }
			               },
			               "$ref": "#/definitions/ConfigurationDetails",
			               "type": "object"
			             },
			             "SubComponentTypeConfigurations": {
			               "description": "Sub component configurations of the component.",
			               "items": {
			                 "additionalProperties": false,
			                 "description": "One type sub component configurations for the component.",
			                 "properties": {
			                   "SubComponentConfigurationDetails": {
			                     "additionalProperties": false,
			                     "description": "The configuration settings of sub components.",
			                     "properties": {
			                       "AlarmMetrics": {
			                         "description": "A list of metrics to monitor for the component.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A metric to be monitored for the component.",
			                           "properties": {
			                             "AlarmMetricName": {
			                               "description": "The name of the metric to be monitored for the component.",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/AlarmMetric",
			                           "required": [
			                             "AlarmMetricName"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       },
			                       "Logs": {
			                         "description": "A list of logs to monitor for the component.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A log to be monitored for the component.",
			                           "properties": {
			                             "Encoding": {
			                               "description": "The type of encoding of the logs to be monitored.",
			                               "enum": [
			                                 "utf-8",
			                                 "utf-16",
			                                 "ascii"
			                               ],
			                               "type": "string"
			                             },
			                             "LogGroupName": {
			                               "description": "The CloudWatch log group name to be associated to the monitored log.",
			                               "maxLength": 512,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogPath": {
			                               "description": "The path of the logs to be monitored.",
			                               "maxLength": 260,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogType": {
			                               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "PatternSet": {
			                               "description": "The name of the log pattern set.",
			                               "maxLength": 30,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/Log",
			                           "required": [
			                             "LogType"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       },
			                       "WindowsEvents": {
			                         "description": "A list of Windows Events to log.",
			                         "items": {
			                           "additionalProperties": false,
			                           "description": "A Windows Event to be monitored for the component.",
			                           "properties": {
			                             "EventLevels": {
			                               "description": "The levels of event to log. ",
			                               "items": {
			                                 "description": "The level of event to log.",
			                                 "enum": [
			                                   "INFORMATION",
			                                   "WARNING",
			                                   "ERROR",
			                                   "CRITICAL",
			                                   "VERBOSE"
			                                 ],
			                                 "$ref": "#/definitions/EventLevel",
			                                 "type": "string"
			                               },
			                               "minItems": 1,
			                               "type": "array"
			                             },
			                             "EventName": {
			                               "description": "The type of Windows Events to log.",
			                               "maxLength": 260,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "LogGroupName": {
			                               "description": "The CloudWatch log group name to be associated to the monitored log.",
			                               "maxLength": 512,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             },
			                             "PatternSet": {
			                               "description": "The name of the log pattern set.",
			                               "maxLength": 30,
			                               "minLength": 1,
			                               "pattern": "",
			                               "type": "string"
			                             }
			                           },
			                           "$ref": "#/definitions/WindowsEvent",
			                           "required": [
			                             "LogGroupName",
			                             "EventName",
			                             "EventLevels"
			                           ],
			                           "type": "object"
			                         },
			                         "type": "array"
			                       }
			                     },
			                     "$ref": "#/definitions/SubComponentConfigurationDetails",
			                     "type": "object"
			                   },
			                   "SubComponentType": {
			                     "description": "The sub component type.",
			                     "enum": [
			                       "AWS::EC2::Instance",
			                       "AWS::EC2::Volume"
			                     ],
			                     "type": "string"
			                   }
			                 },
			                 "$ref": "#/definitions/SubComponentTypeConfiguration",
			                 "required": [
			                   "SubComponentType",
			                   "SubComponentConfigurationDetails"
			                 ],
			                 "type": "object"
			               },
			               "minItems": 1,
			               "type": "array"
			             }
			           },
			           "$ref": "#/definitions/ComponentConfiguration",
			           "type": "object"
			         },
			         "Tier": {
			           "description": "The tier of the application component.",
			           "pattern": "",
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/ComponentMonitoringSetting",
			       "required": [
			         "Tier",
			         "ComponentConfigurationMode"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array"
			   }
			*/
			Description: "The monitoring settings of the components.",
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"component_arn": {
						// Property: ComponentARN
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The ARN of the compnonent.",
						     "maxLength": 300,
						     "minLength": 20,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The ARN of the compnonent.",
						Type:        types.StringType,
						Optional:    true,
					},
					"component_configuration_mode": {
						// Property: ComponentConfigurationMode
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The component monitoring configuration mode.",
						     "enum": [
						       "DEFAULT",
						       "DEFAULT_WITH_OVERWRITE",
						       "CUSTOM"
						     ],
						     "type": "string"
						   }
						*/
						Description: "The component monitoring configuration mode.",
						Type:        types.StringType,
						Required:    true,
					},
					"component_name": {
						// Property: ComponentName
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The name of the component.",
						     "maxLength": 128,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The name of the component.",
						Type:        types.StringType,
						Optional:    true,
					},
					"custom_component_configuration": {
						// Property: CustomComponentConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "The configuration settings of the component.",
						     "properties": {
						       "ConfigurationDetails": {
						         "additionalProperties": false,
						         "description": "The configuration settings.",
						         "properties": {
						           "AlarmMetrics": {
						             "description": "A list of metrics to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A metric to be monitored for the component.",
						               "properties": {
						                 "AlarmMetricName": {
						                   "description": "The name of the metric to be monitored for the component.",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/AlarmMetric",
						               "required": [
						                 "AlarmMetricName"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "Alarms": {
						             "description": "A list of alarms to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A CloudWatch alarm to be monitored for the component.",
						               "properties": {
						                 "AlarmName": {
						                   "description": "The name of the CloudWatch alarm to be monitored for the component.",
						                   "maxLength": 255,
						                   "minLength": 1,
						                   "type": "string"
						                 },
						                 "Severity": {
						                   "description": "Indicates the degree of outage when the alarm goes off.",
						                   "enum": [
						                     "HIGH",
						                     "MEDIUM",
						                     "LOW"
						                   ],
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/Alarm",
						               "required": [
						                 "AlarmName"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "JMXPrometheusExporter": {
						             "additionalProperties": false,
						             "description": "The JMX Prometheus Exporter settings.",
						             "properties": {
						               "HostPort": {
						                 "description": "Java agent host port",
						                 "type": "string"
						               },
						               "JMXURL": {
						                 "description": "JMX service URL.",
						                 "type": "string"
						               },
						               "PrometheusPort": {
						                 "description": "Prometheus exporter port",
						                 "type": "string"
						               }
						             },
						             "$ref": "#/definitions/JMXPrometheusExporter",
						             "type": "object"
						           },
						           "Logs": {
						             "description": "A list of logs to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A log to be monitored for the component.",
						               "properties": {
						                 "Encoding": {
						                   "description": "The type of encoding of the logs to be monitored.",
						                   "enum": [
						                     "utf-8",
						                     "utf-16",
						                     "ascii"
						                   ],
						                   "type": "string"
						                 },
						                 "LogGroupName": {
						                   "description": "The CloudWatch log group name to be associated to the monitored log.",
						                   "maxLength": 512,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogPath": {
						                   "description": "The path of the logs to be monitored.",
						                   "maxLength": 260,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogType": {
						                   "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "PatternSet": {
						                   "description": "The name of the log pattern set.",
						                   "maxLength": 30,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/Log",
						               "required": [
						                 "LogType"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "WindowsEvents": {
						             "description": "A list of Windows Events to log.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A Windows Event to be monitored for the component.",
						               "properties": {
						                 "EventLevels": {
						                   "description": "The levels of event to log. ",
						                   "items": {
						                     "description": "The level of event to log.",
						                     "enum": [
						                       "INFORMATION",
						                       "WARNING",
						                       "ERROR",
						                       "CRITICAL",
						                       "VERBOSE"
						                     ],
						                     "$ref": "#/definitions/EventLevel",
						                     "type": "string"
						                   },
						                   "minItems": 1,
						                   "type": "array"
						                 },
						                 "EventName": {
						                   "description": "The type of Windows Events to log.",
						                   "maxLength": 260,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogGroupName": {
						                   "description": "The CloudWatch log group name to be associated to the monitored log.",
						                   "maxLength": 512,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "PatternSet": {
						                   "description": "The name of the log pattern set.",
						                   "maxLength": 30,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/WindowsEvent",
						               "required": [
						                 "LogGroupName",
						                 "EventName",
						                 "EventLevels"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           }
						         },
						         "$ref": "#/definitions/ConfigurationDetails",
						         "type": "object"
						       },
						       "SubComponentTypeConfigurations": {
						         "description": "Sub component configurations of the component.",
						         "items": {
						           "additionalProperties": false,
						           "description": "One type sub component configurations for the component.",
						           "properties": {
						             "SubComponentConfigurationDetails": {
						               "additionalProperties": false,
						               "description": "The configuration settings of sub components.",
						               "properties": {
						                 "AlarmMetrics": {
						                   "description": "A list of metrics to monitor for the component.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A metric to be monitored for the component.",
						                     "properties": {
						                       "AlarmMetricName": {
						                         "description": "The name of the metric to be monitored for the component.",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/AlarmMetric",
						                     "required": [
						                       "AlarmMetricName"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 },
						                 "Logs": {
						                   "description": "A list of logs to monitor for the component.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A log to be monitored for the component.",
						                     "properties": {
						                       "Encoding": {
						                         "description": "The type of encoding of the logs to be monitored.",
						                         "enum": [
						                           "utf-8",
						                           "utf-16",
						                           "ascii"
						                         ],
						                         "type": "string"
						                       },
						                       "LogGroupName": {
						                         "description": "The CloudWatch log group name to be associated to the monitored log.",
						                         "maxLength": 512,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogPath": {
						                         "description": "The path of the logs to be monitored.",
						                         "maxLength": 260,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogType": {
						                         "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "PatternSet": {
						                         "description": "The name of the log pattern set.",
						                         "maxLength": 30,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/Log",
						                     "required": [
						                       "LogType"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 },
						                 "WindowsEvents": {
						                   "description": "A list of Windows Events to log.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A Windows Event to be monitored for the component.",
						                     "properties": {
						                       "EventLevels": {
						                         "description": "The levels of event to log. ",
						                         "items": {
						                           "description": "The level of event to log.",
						                           "enum": [
						                             "INFORMATION",
						                             "WARNING",
						                             "ERROR",
						                             "CRITICAL",
						                             "VERBOSE"
						                           ],
						                           "$ref": "#/definitions/EventLevel",
						                           "type": "string"
						                         },
						                         "minItems": 1,
						                         "type": "array"
						                       },
						                       "EventName": {
						                         "description": "The type of Windows Events to log.",
						                         "maxLength": 260,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogGroupName": {
						                         "description": "The CloudWatch log group name to be associated to the monitored log.",
						                         "maxLength": 512,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "PatternSet": {
						                         "description": "The name of the log pattern set.",
						                         "maxLength": 30,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/WindowsEvent",
						                     "required": [
						                       "LogGroupName",
						                       "EventName",
						                       "EventLevels"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 }
						               },
						               "$ref": "#/definitions/SubComponentConfigurationDetails",
						               "type": "object"
						             },
						             "SubComponentType": {
						               "description": "The sub component type.",
						               "enum": [
						                 "AWS::EC2::Instance",
						                 "AWS::EC2::Volume"
						               ],
						               "type": "string"
						             }
						           },
						           "$ref": "#/definitions/SubComponentTypeConfiguration",
						           "required": [
						             "SubComponentType",
						             "SubComponentConfigurationDetails"
						           ],
						           "type": "object"
						         },
						         "minItems": 1,
						         "type": "array"
						       }
						     },
						     "$ref": "#/definitions/ComponentConfiguration",
						     "type": "object"
						   }
						*/
						Description: "The configuration settings of the component.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"configuration_details": {
									// Property: ConfigurationDetails
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "The configuration settings.",
									     "properties": {
									       "AlarmMetrics": {
									         "description": "A list of metrics to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A metric to be monitored for the component.",
									           "properties": {
									             "AlarmMetricName": {
									               "description": "The name of the metric to be monitored for the component.",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/AlarmMetric",
									           "required": [
									             "AlarmMetricName"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "Alarms": {
									         "description": "A list of alarms to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A CloudWatch alarm to be monitored for the component.",
									           "properties": {
									             "AlarmName": {
									               "description": "The name of the CloudWatch alarm to be monitored for the component.",
									               "maxLength": 255,
									               "minLength": 1,
									               "type": "string"
									             },
									             "Severity": {
									               "description": "Indicates the degree of outage when the alarm goes off.",
									               "enum": [
									                 "HIGH",
									                 "MEDIUM",
									                 "LOW"
									               ],
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/Alarm",
									           "required": [
									             "AlarmName"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "JMXPrometheusExporter": {
									         "additionalProperties": false,
									         "description": "The JMX Prometheus Exporter settings.",
									         "properties": {
									           "HostPort": {
									             "description": "Java agent host port",
									             "type": "string"
									           },
									           "JMXURL": {
									             "description": "JMX service URL.",
									             "type": "string"
									           },
									           "PrometheusPort": {
									             "description": "Prometheus exporter port",
									             "type": "string"
									           }
									         },
									         "$ref": "#/definitions/JMXPrometheusExporter",
									         "type": "object"
									       },
									       "Logs": {
									         "description": "A list of logs to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A log to be monitored for the component.",
									           "properties": {
									             "Encoding": {
									               "description": "The type of encoding of the logs to be monitored.",
									               "enum": [
									                 "utf-8",
									                 "utf-16",
									                 "ascii"
									               ],
									               "type": "string"
									             },
									             "LogGroupName": {
									               "description": "The CloudWatch log group name to be associated to the monitored log.",
									               "maxLength": 512,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogPath": {
									               "description": "The path of the logs to be monitored.",
									               "maxLength": 260,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogType": {
									               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
									               "pattern": "",
									               "type": "string"
									             },
									             "PatternSet": {
									               "description": "The name of the log pattern set.",
									               "maxLength": 30,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/Log",
									           "required": [
									             "LogType"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "WindowsEvents": {
									         "description": "A list of Windows Events to log.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A Windows Event to be monitored for the component.",
									           "properties": {
									             "EventLevels": {
									               "description": "The levels of event to log. ",
									               "items": {
									                 "description": "The level of event to log.",
									                 "enum": [
									                   "INFORMATION",
									                   "WARNING",
									                   "ERROR",
									                   "CRITICAL",
									                   "VERBOSE"
									                 ],
									                 "$ref": "#/definitions/EventLevel",
									                 "type": "string"
									               },
									               "minItems": 1,
									               "type": "array"
									             },
									             "EventName": {
									               "description": "The type of Windows Events to log.",
									               "maxLength": 260,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogGroupName": {
									               "description": "The CloudWatch log group name to be associated to the monitored log.",
									               "maxLength": 512,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "PatternSet": {
									               "description": "The name of the log pattern set.",
									               "maxLength": 30,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/WindowsEvent",
									           "required": [
									             "LogGroupName",
									             "EventName",
									             "EventLevels"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       }
									     },
									     "$ref": "#/definitions/ConfigurationDetails",
									     "type": "object"
									   }
									*/
									Description: "The configuration settings.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"alarm_metrics": {
												// Property: AlarmMetrics
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of metrics to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A metric to be monitored for the component.",
												       "properties": {
												         "AlarmMetricName": {
												           "description": "The name of the metric to be monitored for the component.",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/AlarmMetric",
												       "required": [
												         "AlarmMetricName"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of metrics to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"alarm_metric_name": {
															// Property: AlarmMetricName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the metric to be monitored for the component.",
															     "type": "string"
															   }
															*/
															Description: "The name of the metric to be monitored for the component.",
															Type:        types.StringType,
															Required:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"alarms": {
												// Property: Alarms
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of alarms to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A CloudWatch alarm to be monitored for the component.",
												       "properties": {
												         "AlarmName": {
												           "description": "The name of the CloudWatch alarm to be monitored for the component.",
												           "maxLength": 255,
												           "minLength": 1,
												           "type": "string"
												         },
												         "Severity": {
												           "description": "Indicates the degree of outage when the alarm goes off.",
												           "enum": [
												             "HIGH",
												             "MEDIUM",
												             "LOW"
												           ],
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/Alarm",
												       "required": [
												         "AlarmName"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of alarms to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"alarm_name": {
															// Property: AlarmName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the CloudWatch alarm to be monitored for the component.",
															     "maxLength": 255,
															     "minLength": 1,
															     "type": "string"
															   }
															*/
															Description: "The name of the CloudWatch alarm to be monitored for the component.",
															Type:        types.StringType,
															Required:    true,
														},
														"severity": {
															// Property: Severity
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Indicates the degree of outage when the alarm goes off.",
															     "enum": [
															       "HIGH",
															       "MEDIUM",
															       "LOW"
															     ],
															     "type": "string"
															   }
															*/
															Description: "Indicates the degree of outage when the alarm goes off.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"jmx_prometheus_exporter": {
												// Property: JMXPrometheusExporter
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "The JMX Prometheus Exporter settings.",
												     "properties": {
												       "HostPort": {
												         "description": "Java agent host port",
												         "type": "string"
												       },
												       "JMXURL": {
												         "description": "JMX service URL.",
												         "type": "string"
												       },
												       "PrometheusPort": {
												         "description": "Prometheus exporter port",
												         "type": "string"
												       }
												     },
												     "$ref": "#/definitions/JMXPrometheusExporter",
												     "type": "object"
												   }
												*/
												Description: "The JMX Prometheus Exporter settings.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"host_port": {
															// Property: HostPort
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Java agent host port",
															     "type": "string"
															   }
															*/
															Description: "Java agent host port",
															Type:        types.StringType,
															Optional:    true,
														},
														"jmxurl": {
															// Property: JMXURL
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "JMX service URL.",
															     "type": "string"
															   }
															*/
															Description: "JMX service URL.",
															Type:        types.StringType,
															Optional:    true,
														},
														"prometheus_port": {
															// Property: PrometheusPort
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Prometheus exporter port",
															     "type": "string"
															   }
															*/
															Description: "Prometheus exporter port",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"logs": {
												// Property: Logs
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of logs to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A log to be monitored for the component.",
												       "properties": {
												         "Encoding": {
												           "description": "The type of encoding of the logs to be monitored.",
												           "enum": [
												             "utf-8",
												             "utf-16",
												             "ascii"
												           ],
												           "type": "string"
												         },
												         "LogGroupName": {
												           "description": "The CloudWatch log group name to be associated to the monitored log.",
												           "maxLength": 512,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogPath": {
												           "description": "The path of the logs to be monitored.",
												           "maxLength": 260,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogType": {
												           "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
												           "pattern": "",
												           "type": "string"
												         },
												         "PatternSet": {
												           "description": "The name of the log pattern set.",
												           "maxLength": 30,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/Log",
												       "required": [
												         "LogType"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of logs to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"encoding": {
															// Property: Encoding
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The type of encoding of the logs to be monitored.",
															     "enum": [
															       "utf-8",
															       "utf-16",
															       "ascii"
															     ],
															     "type": "string"
															   }
															*/
															Description: "The type of encoding of the logs to be monitored.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_group_name": {
															// Property: LogGroupName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The CloudWatch log group name to be associated to the monitored log.",
															     "maxLength": 512,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The CloudWatch log group name to be associated to the monitored log.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_path": {
															// Property: LogPath
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The path of the logs to be monitored.",
															     "maxLength": 260,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The path of the logs to be monitored.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_type": {
															// Property: LogType
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The log type decides the log patterns against which Application Insights analyzes the log.",
															Type:        types.StringType,
															Required:    true,
														},
														"pattern_set": {
															// Property: PatternSet
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the log pattern set.",
															     "maxLength": 30,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The name of the log pattern set.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"windows_events": {
												// Property: WindowsEvents
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of Windows Events to log.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A Windows Event to be monitored for the component.",
												       "properties": {
												         "EventLevels": {
												           "description": "The levels of event to log. ",
												           "items": {
												             "description": "The level of event to log.",
												             "enum": [
												               "INFORMATION",
												               "WARNING",
												               "ERROR",
												               "CRITICAL",
												               "VERBOSE"
												             ],
												             "$ref": "#/definitions/EventLevel",
												             "type": "string"
												           },
												           "minItems": 1,
												           "type": "array"
												         },
												         "EventName": {
												           "description": "The type of Windows Events to log.",
												           "maxLength": 260,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogGroupName": {
												           "description": "The CloudWatch log group name to be associated to the monitored log.",
												           "maxLength": 512,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "PatternSet": {
												           "description": "The name of the log pattern set.",
												           "maxLength": 30,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/WindowsEvent",
												       "required": [
												         "LogGroupName",
												         "EventName",
												         "EventLevels"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of Windows Events to log.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"event_levels": {
															// Property: EventLevels
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The levels of event to log. ",
															     "items": {
															       "description": "The level of event to log.",
															       "enum": [
															         "INFORMATION",
															         "WARNING",
															         "ERROR",
															         "CRITICAL",
															         "VERBOSE"
															       ],
															       "$ref": "#/definitions/EventLevel",
															       "type": "string"
															     },
															     "minItems": 1,
															     "type": "array"
															   }
															*/
															Description: "The levels of event to log. ",
															Type:        types.ListType{ElemType: types.StringType},
															Required:    true,
														},
														"event_name": {
															// Property: EventName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The type of Windows Events to log.",
															     "maxLength": 260,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The type of Windows Events to log.",
															Type:        types.StringType,
															Required:    true,
														},
														"log_group_name": {
															// Property: LogGroupName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The CloudWatch log group name to be associated to the monitored log.",
															     "maxLength": 512,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The CloudWatch log group name to be associated to the monitored log.",
															Type:        types.StringType,
															Required:    true,
														},
														"pattern_set": {
															// Property: PatternSet
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the log pattern set.",
															     "maxLength": 30,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The name of the log pattern set.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"sub_component_type_configurations": {
									// Property: SubComponentTypeConfigurations
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Sub component configurations of the component.",
									     "items": {
									       "additionalProperties": false,
									       "description": "One type sub component configurations for the component.",
									       "properties": {
									         "SubComponentConfigurationDetails": {
									           "additionalProperties": false,
									           "description": "The configuration settings of sub components.",
									           "properties": {
									             "AlarmMetrics": {
									               "description": "A list of metrics to monitor for the component.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A metric to be monitored for the component.",
									                 "properties": {
									                   "AlarmMetricName": {
									                     "description": "The name of the metric to be monitored for the component.",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/AlarmMetric",
									                 "required": [
									                   "AlarmMetricName"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             },
									             "Logs": {
									               "description": "A list of logs to monitor for the component.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A log to be monitored for the component.",
									                 "properties": {
									                   "Encoding": {
									                     "description": "The type of encoding of the logs to be monitored.",
									                     "enum": [
									                       "utf-8",
									                       "utf-16",
									                       "ascii"
									                     ],
									                     "type": "string"
									                   },
									                   "LogGroupName": {
									                     "description": "The CloudWatch log group name to be associated to the monitored log.",
									                     "maxLength": 512,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogPath": {
									                     "description": "The path of the logs to be monitored.",
									                     "maxLength": 260,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogType": {
									                     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "PatternSet": {
									                     "description": "The name of the log pattern set.",
									                     "maxLength": 30,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/Log",
									                 "required": [
									                   "LogType"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             },
									             "WindowsEvents": {
									               "description": "A list of Windows Events to log.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A Windows Event to be monitored for the component.",
									                 "properties": {
									                   "EventLevels": {
									                     "description": "The levels of event to log. ",
									                     "items": {
									                       "description": "The level of event to log.",
									                       "enum": [
									                         "INFORMATION",
									                         "WARNING",
									                         "ERROR",
									                         "CRITICAL",
									                         "VERBOSE"
									                       ],
									                       "$ref": "#/definitions/EventLevel",
									                       "type": "string"
									                     },
									                     "minItems": 1,
									                     "type": "array"
									                   },
									                   "EventName": {
									                     "description": "The type of Windows Events to log.",
									                     "maxLength": 260,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogGroupName": {
									                     "description": "The CloudWatch log group name to be associated to the monitored log.",
									                     "maxLength": 512,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "PatternSet": {
									                     "description": "The name of the log pattern set.",
									                     "maxLength": 30,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/WindowsEvent",
									                 "required": [
									                   "LogGroupName",
									                   "EventName",
									                   "EventLevels"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             }
									           },
									           "$ref": "#/definitions/SubComponentConfigurationDetails",
									           "type": "object"
									         },
									         "SubComponentType": {
									           "description": "The sub component type.",
									           "enum": [
									             "AWS::EC2::Instance",
									             "AWS::EC2::Volume"
									           ],
									           "type": "string"
									         }
									       },
									       "$ref": "#/definitions/SubComponentTypeConfiguration",
									       "required": [
									         "SubComponentType",
									         "SubComponentConfigurationDetails"
									       ],
									       "type": "object"
									     },
									     "minItems": 1,
									     "type": "array"
									   }
									*/
									Description: "Sub component configurations of the component.",
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"sub_component_configuration_details": {
												// Property: SubComponentConfigurationDetails
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "The configuration settings of sub components.",
												     "properties": {
												       "AlarmMetrics": {
												         "description": "A list of metrics to monitor for the component.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A metric to be monitored for the component.",
												           "properties": {
												             "AlarmMetricName": {
												               "description": "The name of the metric to be monitored for the component.",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/AlarmMetric",
												           "required": [
												             "AlarmMetricName"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       },
												       "Logs": {
												         "description": "A list of logs to monitor for the component.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A log to be monitored for the component.",
												           "properties": {
												             "Encoding": {
												               "description": "The type of encoding of the logs to be monitored.",
												               "enum": [
												                 "utf-8",
												                 "utf-16",
												                 "ascii"
												               ],
												               "type": "string"
												             },
												             "LogGroupName": {
												               "description": "The CloudWatch log group name to be associated to the monitored log.",
												               "maxLength": 512,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogPath": {
												               "description": "The path of the logs to be monitored.",
												               "maxLength": 260,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogType": {
												               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
												               "pattern": "",
												               "type": "string"
												             },
												             "PatternSet": {
												               "description": "The name of the log pattern set.",
												               "maxLength": 30,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/Log",
												           "required": [
												             "LogType"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       },
												       "WindowsEvents": {
												         "description": "A list of Windows Events to log.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A Windows Event to be monitored for the component.",
												           "properties": {
												             "EventLevels": {
												               "description": "The levels of event to log. ",
												               "items": {
												                 "description": "The level of event to log.",
												                 "enum": [
												                   "INFORMATION",
												                   "WARNING",
												                   "ERROR",
												                   "CRITICAL",
												                   "VERBOSE"
												                 ],
												                 "$ref": "#/definitions/EventLevel",
												                 "type": "string"
												               },
												               "minItems": 1,
												               "type": "array"
												             },
												             "EventName": {
												               "description": "The type of Windows Events to log.",
												               "maxLength": 260,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogGroupName": {
												               "description": "The CloudWatch log group name to be associated to the monitored log.",
												               "maxLength": 512,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "PatternSet": {
												               "description": "The name of the log pattern set.",
												               "maxLength": 30,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/WindowsEvent",
												           "required": [
												             "LogGroupName",
												             "EventName",
												             "EventLevels"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       }
												     },
												     "$ref": "#/definitions/SubComponentConfigurationDetails",
												     "type": "object"
												   }
												*/
												Description: "The configuration settings of sub components.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"alarm_metrics": {
															// Property: AlarmMetrics
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of metrics to monitor for the component.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A metric to be monitored for the component.",
															       "properties": {
															         "AlarmMetricName": {
															           "description": "The name of the metric to be monitored for the component.",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/AlarmMetric",
															       "required": [
															         "AlarmMetricName"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of metrics to monitor for the component.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"alarm_metric_name": {
																		// Property: AlarmMetricName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the metric to be monitored for the component.",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the metric to be monitored for the component.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
														"logs": {
															// Property: Logs
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of logs to monitor for the component.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A log to be monitored for the component.",
															       "properties": {
															         "Encoding": {
															           "description": "The type of encoding of the logs to be monitored.",
															           "enum": [
															             "utf-8",
															             "utf-16",
															             "ascii"
															           ],
															           "type": "string"
															         },
															         "LogGroupName": {
															           "description": "The CloudWatch log group name to be associated to the monitored log.",
															           "maxLength": 512,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogPath": {
															           "description": "The path of the logs to be monitored.",
															           "maxLength": 260,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogType": {
															           "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
															           "pattern": "",
															           "type": "string"
															         },
															         "PatternSet": {
															           "description": "The name of the log pattern set.",
															           "maxLength": 30,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/Log",
															       "required": [
															         "LogType"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of logs to monitor for the component.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"encoding": {
																		// Property: Encoding
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The type of encoding of the logs to be monitored.",
																		     "enum": [
																		       "utf-8",
																		       "utf-16",
																		       "ascii"
																		     ],
																		     "type": "string"
																		   }
																		*/
																		Description: "The type of encoding of the logs to be monitored.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_group_name": {
																		// Property: LogGroupName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The CloudWatch log group name to be associated to the monitored log.",
																		     "maxLength": 512,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The CloudWatch log group name to be associated to the monitored log.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_path": {
																		// Property: LogPath
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The path of the logs to be monitored.",
																		     "maxLength": 260,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The path of the logs to be monitored.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_type": {
																		// Property: LogType
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The log type decides the log patterns against which Application Insights analyzes the log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"pattern_set": {
																		// Property: PatternSet
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the log pattern set.",
																		     "maxLength": 30,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the log pattern set.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
														"windows_events": {
															// Property: WindowsEvents
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of Windows Events to log.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A Windows Event to be monitored for the component.",
															       "properties": {
															         "EventLevels": {
															           "description": "The levels of event to log. ",
															           "items": {
															             "description": "The level of event to log.",
															             "enum": [
															               "INFORMATION",
															               "WARNING",
															               "ERROR",
															               "CRITICAL",
															               "VERBOSE"
															             ],
															             "$ref": "#/definitions/EventLevel",
															             "type": "string"
															           },
															           "minItems": 1,
															           "type": "array"
															         },
															         "EventName": {
															           "description": "The type of Windows Events to log.",
															           "maxLength": 260,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogGroupName": {
															           "description": "The CloudWatch log group name to be associated to the monitored log.",
															           "maxLength": 512,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "PatternSet": {
															           "description": "The name of the log pattern set.",
															           "maxLength": 30,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/WindowsEvent",
															       "required": [
															         "LogGroupName",
															         "EventName",
															         "EventLevels"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of Windows Events to log.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"event_levels": {
																		// Property: EventLevels
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The levels of event to log. ",
																		     "items": {
																		       "description": "The level of event to log.",
																		       "enum": [
																		         "INFORMATION",
																		         "WARNING",
																		         "ERROR",
																		         "CRITICAL",
																		         "VERBOSE"
																		       ],
																		       "$ref": "#/definitions/EventLevel",
																		       "type": "string"
																		     },
																		     "minItems": 1,
																		     "type": "array"
																		   }
																		*/
																		Description: "The levels of event to log. ",
																		Type:        types.ListType{ElemType: types.StringType},
																		Required:    true,
																	},
																	"event_name": {
																		// Property: EventName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The type of Windows Events to log.",
																		     "maxLength": 260,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The type of Windows Events to log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"log_group_name": {
																		// Property: LogGroupName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The CloudWatch log group name to be associated to the monitored log.",
																		     "maxLength": 512,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The CloudWatch log group name to be associated to the monitored log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"pattern_set": {
																		// Property: PatternSet
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the log pattern set.",
																		     "maxLength": 30,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the log pattern set.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
													},
												),
												Required: true,
											},
											"sub_component_type": {
												// Property: SubComponentType
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The sub component type.",
												     "enum": [
												       "AWS::EC2::Instance",
												       "AWS::EC2::Volume"
												     ],
												     "type": "string"
												   }
												*/
												Description: "The sub component type.",
												Type:        types.StringType,
												Required:    true,
											},
										},
										schema.ListNestedAttributesOptions{
											MinItems: 1,
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"default_overwrite_component_configuration": {
						// Property: DefaultOverwriteComponentConfiguration
						// CloudFormation resource type schema:
						/*
						   {
						     "additionalProperties": false,
						     "description": "The configuration settings of the component.",
						     "properties": {
						       "ConfigurationDetails": {
						         "additionalProperties": false,
						         "description": "The configuration settings.",
						         "properties": {
						           "AlarmMetrics": {
						             "description": "A list of metrics to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A metric to be monitored for the component.",
						               "properties": {
						                 "AlarmMetricName": {
						                   "description": "The name of the metric to be monitored for the component.",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/AlarmMetric",
						               "required": [
						                 "AlarmMetricName"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "Alarms": {
						             "description": "A list of alarms to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A CloudWatch alarm to be monitored for the component.",
						               "properties": {
						                 "AlarmName": {
						                   "description": "The name of the CloudWatch alarm to be monitored for the component.",
						                   "maxLength": 255,
						                   "minLength": 1,
						                   "type": "string"
						                 },
						                 "Severity": {
						                   "description": "Indicates the degree of outage when the alarm goes off.",
						                   "enum": [
						                     "HIGH",
						                     "MEDIUM",
						                     "LOW"
						                   ],
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/Alarm",
						               "required": [
						                 "AlarmName"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "JMXPrometheusExporter": {
						             "additionalProperties": false,
						             "description": "The JMX Prometheus Exporter settings.",
						             "properties": {
						               "HostPort": {
						                 "description": "Java agent host port",
						                 "type": "string"
						               },
						               "JMXURL": {
						                 "description": "JMX service URL.",
						                 "type": "string"
						               },
						               "PrometheusPort": {
						                 "description": "Prometheus exporter port",
						                 "type": "string"
						               }
						             },
						             "$ref": "#/definitions/JMXPrometheusExporter",
						             "type": "object"
						           },
						           "Logs": {
						             "description": "A list of logs to monitor for the component.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A log to be monitored for the component.",
						               "properties": {
						                 "Encoding": {
						                   "description": "The type of encoding of the logs to be monitored.",
						                   "enum": [
						                     "utf-8",
						                     "utf-16",
						                     "ascii"
						                   ],
						                   "type": "string"
						                 },
						                 "LogGroupName": {
						                   "description": "The CloudWatch log group name to be associated to the monitored log.",
						                   "maxLength": 512,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogPath": {
						                   "description": "The path of the logs to be monitored.",
						                   "maxLength": 260,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogType": {
						                   "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "PatternSet": {
						                   "description": "The name of the log pattern set.",
						                   "maxLength": 30,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/Log",
						               "required": [
						                 "LogType"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           },
						           "WindowsEvents": {
						             "description": "A list of Windows Events to log.",
						             "items": {
						               "additionalProperties": false,
						               "description": "A Windows Event to be monitored for the component.",
						               "properties": {
						                 "EventLevels": {
						                   "description": "The levels of event to log. ",
						                   "items": {
						                     "description": "The level of event to log.",
						                     "enum": [
						                       "INFORMATION",
						                       "WARNING",
						                       "ERROR",
						                       "CRITICAL",
						                       "VERBOSE"
						                     ],
						                     "$ref": "#/definitions/EventLevel",
						                     "type": "string"
						                   },
						                   "minItems": 1,
						                   "type": "array"
						                 },
						                 "EventName": {
						                   "description": "The type of Windows Events to log.",
						                   "maxLength": 260,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "LogGroupName": {
						                   "description": "The CloudWatch log group name to be associated to the monitored log.",
						                   "maxLength": 512,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 },
						                 "PatternSet": {
						                   "description": "The name of the log pattern set.",
						                   "maxLength": 30,
						                   "minLength": 1,
						                   "pattern": "",
						                   "type": "string"
						                 }
						               },
						               "$ref": "#/definitions/WindowsEvent",
						               "required": [
						                 "LogGroupName",
						                 "EventName",
						                 "EventLevels"
						               ],
						               "type": "object"
						             },
						             "type": "array"
						           }
						         },
						         "$ref": "#/definitions/ConfigurationDetails",
						         "type": "object"
						       },
						       "SubComponentTypeConfigurations": {
						         "description": "Sub component configurations of the component.",
						         "items": {
						           "additionalProperties": false,
						           "description": "One type sub component configurations for the component.",
						           "properties": {
						             "SubComponentConfigurationDetails": {
						               "additionalProperties": false,
						               "description": "The configuration settings of sub components.",
						               "properties": {
						                 "AlarmMetrics": {
						                   "description": "A list of metrics to monitor for the component.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A metric to be monitored for the component.",
						                     "properties": {
						                       "AlarmMetricName": {
						                         "description": "The name of the metric to be monitored for the component.",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/AlarmMetric",
						                     "required": [
						                       "AlarmMetricName"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 },
						                 "Logs": {
						                   "description": "A list of logs to monitor for the component.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A log to be monitored for the component.",
						                     "properties": {
						                       "Encoding": {
						                         "description": "The type of encoding of the logs to be monitored.",
						                         "enum": [
						                           "utf-8",
						                           "utf-16",
						                           "ascii"
						                         ],
						                         "type": "string"
						                       },
						                       "LogGroupName": {
						                         "description": "The CloudWatch log group name to be associated to the monitored log.",
						                         "maxLength": 512,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogPath": {
						                         "description": "The path of the logs to be monitored.",
						                         "maxLength": 260,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogType": {
						                         "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "PatternSet": {
						                         "description": "The name of the log pattern set.",
						                         "maxLength": 30,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/Log",
						                     "required": [
						                       "LogType"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 },
						                 "WindowsEvents": {
						                   "description": "A list of Windows Events to log.",
						                   "items": {
						                     "additionalProperties": false,
						                     "description": "A Windows Event to be monitored for the component.",
						                     "properties": {
						                       "EventLevels": {
						                         "description": "The levels of event to log. ",
						                         "items": {
						                           "description": "The level of event to log.",
						                           "enum": [
						                             "INFORMATION",
						                             "WARNING",
						                             "ERROR",
						                             "CRITICAL",
						                             "VERBOSE"
						                           ],
						                           "$ref": "#/definitions/EventLevel",
						                           "type": "string"
						                         },
						                         "minItems": 1,
						                         "type": "array"
						                       },
						                       "EventName": {
						                         "description": "The type of Windows Events to log.",
						                         "maxLength": 260,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "LogGroupName": {
						                         "description": "The CloudWatch log group name to be associated to the monitored log.",
						                         "maxLength": 512,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       },
						                       "PatternSet": {
						                         "description": "The name of the log pattern set.",
						                         "maxLength": 30,
						                         "minLength": 1,
						                         "pattern": "",
						                         "type": "string"
						                       }
						                     },
						                     "$ref": "#/definitions/WindowsEvent",
						                     "required": [
						                       "LogGroupName",
						                       "EventName",
						                       "EventLevels"
						                     ],
						                     "type": "object"
						                   },
						                   "type": "array"
						                 }
						               },
						               "$ref": "#/definitions/SubComponentConfigurationDetails",
						               "type": "object"
						             },
						             "SubComponentType": {
						               "description": "The sub component type.",
						               "enum": [
						                 "AWS::EC2::Instance",
						                 "AWS::EC2::Volume"
						               ],
						               "type": "string"
						             }
						           },
						           "$ref": "#/definitions/SubComponentTypeConfiguration",
						           "required": [
						             "SubComponentType",
						             "SubComponentConfigurationDetails"
						           ],
						           "type": "object"
						         },
						         "minItems": 1,
						         "type": "array"
						       }
						     },
						     "$ref": "#/definitions/ComponentConfiguration",
						     "type": "object"
						   }
						*/
						Description: "The configuration settings of the component.",
						Attributes: schema.SingleNestedAttributes(
							map[string]schema.Attribute{
								"configuration_details": {
									// Property: ConfigurationDetails
									// CloudFormation resource type schema:
									/*
									   {
									     "additionalProperties": false,
									     "description": "The configuration settings.",
									     "properties": {
									       "AlarmMetrics": {
									         "description": "A list of metrics to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A metric to be monitored for the component.",
									           "properties": {
									             "AlarmMetricName": {
									               "description": "The name of the metric to be monitored for the component.",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/AlarmMetric",
									           "required": [
									             "AlarmMetricName"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "Alarms": {
									         "description": "A list of alarms to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A CloudWatch alarm to be monitored for the component.",
									           "properties": {
									             "AlarmName": {
									               "description": "The name of the CloudWatch alarm to be monitored for the component.",
									               "maxLength": 255,
									               "minLength": 1,
									               "type": "string"
									             },
									             "Severity": {
									               "description": "Indicates the degree of outage when the alarm goes off.",
									               "enum": [
									                 "HIGH",
									                 "MEDIUM",
									                 "LOW"
									               ],
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/Alarm",
									           "required": [
									             "AlarmName"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "JMXPrometheusExporter": {
									         "additionalProperties": false,
									         "description": "The JMX Prometheus Exporter settings.",
									         "properties": {
									           "HostPort": {
									             "description": "Java agent host port",
									             "type": "string"
									           },
									           "JMXURL": {
									             "description": "JMX service URL.",
									             "type": "string"
									           },
									           "PrometheusPort": {
									             "description": "Prometheus exporter port",
									             "type": "string"
									           }
									         },
									         "$ref": "#/definitions/JMXPrometheusExporter",
									         "type": "object"
									       },
									       "Logs": {
									         "description": "A list of logs to monitor for the component.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A log to be monitored for the component.",
									           "properties": {
									             "Encoding": {
									               "description": "The type of encoding of the logs to be monitored.",
									               "enum": [
									                 "utf-8",
									                 "utf-16",
									                 "ascii"
									               ],
									               "type": "string"
									             },
									             "LogGroupName": {
									               "description": "The CloudWatch log group name to be associated to the monitored log.",
									               "maxLength": 512,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogPath": {
									               "description": "The path of the logs to be monitored.",
									               "maxLength": 260,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogType": {
									               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
									               "pattern": "",
									               "type": "string"
									             },
									             "PatternSet": {
									               "description": "The name of the log pattern set.",
									               "maxLength": 30,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/Log",
									           "required": [
									             "LogType"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       },
									       "WindowsEvents": {
									         "description": "A list of Windows Events to log.",
									         "items": {
									           "additionalProperties": false,
									           "description": "A Windows Event to be monitored for the component.",
									           "properties": {
									             "EventLevels": {
									               "description": "The levels of event to log. ",
									               "items": {
									                 "description": "The level of event to log.",
									                 "enum": [
									                   "INFORMATION",
									                   "WARNING",
									                   "ERROR",
									                   "CRITICAL",
									                   "VERBOSE"
									                 ],
									                 "$ref": "#/definitions/EventLevel",
									                 "type": "string"
									               },
									               "minItems": 1,
									               "type": "array"
									             },
									             "EventName": {
									               "description": "The type of Windows Events to log.",
									               "maxLength": 260,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "LogGroupName": {
									               "description": "The CloudWatch log group name to be associated to the monitored log.",
									               "maxLength": 512,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             },
									             "PatternSet": {
									               "description": "The name of the log pattern set.",
									               "maxLength": 30,
									               "minLength": 1,
									               "pattern": "",
									               "type": "string"
									             }
									           },
									           "$ref": "#/definitions/WindowsEvent",
									           "required": [
									             "LogGroupName",
									             "EventName",
									             "EventLevels"
									           ],
									           "type": "object"
									         },
									         "type": "array"
									       }
									     },
									     "$ref": "#/definitions/ConfigurationDetails",
									     "type": "object"
									   }
									*/
									Description: "The configuration settings.",
									Attributes: schema.SingleNestedAttributes(
										map[string]schema.Attribute{
											"alarm_metrics": {
												// Property: AlarmMetrics
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of metrics to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A metric to be monitored for the component.",
												       "properties": {
												         "AlarmMetricName": {
												           "description": "The name of the metric to be monitored for the component.",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/AlarmMetric",
												       "required": [
												         "AlarmMetricName"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of metrics to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"alarm_metric_name": {
															// Property: AlarmMetricName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the metric to be monitored for the component.",
															     "type": "string"
															   }
															*/
															Description: "The name of the metric to be monitored for the component.",
															Type:        types.StringType,
															Required:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"alarms": {
												// Property: Alarms
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of alarms to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A CloudWatch alarm to be monitored for the component.",
												       "properties": {
												         "AlarmName": {
												           "description": "The name of the CloudWatch alarm to be monitored for the component.",
												           "maxLength": 255,
												           "minLength": 1,
												           "type": "string"
												         },
												         "Severity": {
												           "description": "Indicates the degree of outage when the alarm goes off.",
												           "enum": [
												             "HIGH",
												             "MEDIUM",
												             "LOW"
												           ],
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/Alarm",
												       "required": [
												         "AlarmName"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of alarms to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"alarm_name": {
															// Property: AlarmName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the CloudWatch alarm to be monitored for the component.",
															     "maxLength": 255,
															     "minLength": 1,
															     "type": "string"
															   }
															*/
															Description: "The name of the CloudWatch alarm to be monitored for the component.",
															Type:        types.StringType,
															Required:    true,
														},
														"severity": {
															// Property: Severity
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Indicates the degree of outage when the alarm goes off.",
															     "enum": [
															       "HIGH",
															       "MEDIUM",
															       "LOW"
															     ],
															     "type": "string"
															   }
															*/
															Description: "Indicates the degree of outage when the alarm goes off.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"jmx_prometheus_exporter": {
												// Property: JMXPrometheusExporter
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "The JMX Prometheus Exporter settings.",
												     "properties": {
												       "HostPort": {
												         "description": "Java agent host port",
												         "type": "string"
												       },
												       "JMXURL": {
												         "description": "JMX service URL.",
												         "type": "string"
												       },
												       "PrometheusPort": {
												         "description": "Prometheus exporter port",
												         "type": "string"
												       }
												     },
												     "$ref": "#/definitions/JMXPrometheusExporter",
												     "type": "object"
												   }
												*/
												Description: "The JMX Prometheus Exporter settings.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"host_port": {
															// Property: HostPort
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Java agent host port",
															     "type": "string"
															   }
															*/
															Description: "Java agent host port",
															Type:        types.StringType,
															Optional:    true,
														},
														"jmxurl": {
															// Property: JMXURL
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "JMX service URL.",
															     "type": "string"
															   }
															*/
															Description: "JMX service URL.",
															Type:        types.StringType,
															Optional:    true,
														},
														"prometheus_port": {
															// Property: PrometheusPort
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "Prometheus exporter port",
															     "type": "string"
															   }
															*/
															Description: "Prometheus exporter port",
															Type:        types.StringType,
															Optional:    true,
														},
													},
												),
												Optional: true,
											},
											"logs": {
												// Property: Logs
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of logs to monitor for the component.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A log to be monitored for the component.",
												       "properties": {
												         "Encoding": {
												           "description": "The type of encoding of the logs to be monitored.",
												           "enum": [
												             "utf-8",
												             "utf-16",
												             "ascii"
												           ],
												           "type": "string"
												         },
												         "LogGroupName": {
												           "description": "The CloudWatch log group name to be associated to the monitored log.",
												           "maxLength": 512,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogPath": {
												           "description": "The path of the logs to be monitored.",
												           "maxLength": 260,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogType": {
												           "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
												           "pattern": "",
												           "type": "string"
												         },
												         "PatternSet": {
												           "description": "The name of the log pattern set.",
												           "maxLength": 30,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/Log",
												       "required": [
												         "LogType"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of logs to monitor for the component.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"encoding": {
															// Property: Encoding
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The type of encoding of the logs to be monitored.",
															     "enum": [
															       "utf-8",
															       "utf-16",
															       "ascii"
															     ],
															     "type": "string"
															   }
															*/
															Description: "The type of encoding of the logs to be monitored.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_group_name": {
															// Property: LogGroupName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The CloudWatch log group name to be associated to the monitored log.",
															     "maxLength": 512,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The CloudWatch log group name to be associated to the monitored log.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_path": {
															// Property: LogPath
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The path of the logs to be monitored.",
															     "maxLength": 260,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The path of the logs to be monitored.",
															Type:        types.StringType,
															Optional:    true,
														},
														"log_type": {
															// Property: LogType
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The log type decides the log patterns against which Application Insights analyzes the log.",
															Type:        types.StringType,
															Required:    true,
														},
														"pattern_set": {
															// Property: PatternSet
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the log pattern set.",
															     "maxLength": 30,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The name of the log pattern set.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
											"windows_events": {
												// Property: WindowsEvents
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "A list of Windows Events to log.",
												     "items": {
												       "additionalProperties": false,
												       "description": "A Windows Event to be monitored for the component.",
												       "properties": {
												         "EventLevels": {
												           "description": "The levels of event to log. ",
												           "items": {
												             "description": "The level of event to log.",
												             "enum": [
												               "INFORMATION",
												               "WARNING",
												               "ERROR",
												               "CRITICAL",
												               "VERBOSE"
												             ],
												             "$ref": "#/definitions/EventLevel",
												             "type": "string"
												           },
												           "minItems": 1,
												           "type": "array"
												         },
												         "EventName": {
												           "description": "The type of Windows Events to log.",
												           "maxLength": 260,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "LogGroupName": {
												           "description": "The CloudWatch log group name to be associated to the monitored log.",
												           "maxLength": 512,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         },
												         "PatternSet": {
												           "description": "The name of the log pattern set.",
												           "maxLength": 30,
												           "minLength": 1,
												           "pattern": "",
												           "type": "string"
												         }
												       },
												       "$ref": "#/definitions/WindowsEvent",
												       "required": [
												         "LogGroupName",
												         "EventName",
												         "EventLevels"
												       ],
												       "type": "object"
												     },
												     "type": "array"
												   }
												*/
												Description: "A list of Windows Events to log.",
												Attributes: schema.ListNestedAttributes(
													map[string]schema.Attribute{
														"event_levels": {
															// Property: EventLevels
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The levels of event to log. ",
															     "items": {
															       "description": "The level of event to log.",
															       "enum": [
															         "INFORMATION",
															         "WARNING",
															         "ERROR",
															         "CRITICAL",
															         "VERBOSE"
															       ],
															       "$ref": "#/definitions/EventLevel",
															       "type": "string"
															     },
															     "minItems": 1,
															     "type": "array"
															   }
															*/
															Description: "The levels of event to log. ",
															Type:        types.ListType{ElemType: types.StringType},
															Required:    true,
														},
														"event_name": {
															// Property: EventName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The type of Windows Events to log.",
															     "maxLength": 260,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The type of Windows Events to log.",
															Type:        types.StringType,
															Required:    true,
														},
														"log_group_name": {
															// Property: LogGroupName
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The CloudWatch log group name to be associated to the monitored log.",
															     "maxLength": 512,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The CloudWatch log group name to be associated to the monitored log.",
															Type:        types.StringType,
															Required:    true,
														},
														"pattern_set": {
															// Property: PatternSet
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "The name of the log pattern set.",
															     "maxLength": 30,
															     "minLength": 1,
															     "pattern": "",
															     "type": "string"
															   }
															*/
															Description: "The name of the log pattern set.",
															Type:        types.StringType,
															Optional:    true,
														},
													},
													schema.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"sub_component_type_configurations": {
									// Property: SubComponentTypeConfigurations
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Sub component configurations of the component.",
									     "items": {
									       "additionalProperties": false,
									       "description": "One type sub component configurations for the component.",
									       "properties": {
									         "SubComponentConfigurationDetails": {
									           "additionalProperties": false,
									           "description": "The configuration settings of sub components.",
									           "properties": {
									             "AlarmMetrics": {
									               "description": "A list of metrics to monitor for the component.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A metric to be monitored for the component.",
									                 "properties": {
									                   "AlarmMetricName": {
									                     "description": "The name of the metric to be monitored for the component.",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/AlarmMetric",
									                 "required": [
									                   "AlarmMetricName"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             },
									             "Logs": {
									               "description": "A list of logs to monitor for the component.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A log to be monitored for the component.",
									                 "properties": {
									                   "Encoding": {
									                     "description": "The type of encoding of the logs to be monitored.",
									                     "enum": [
									                       "utf-8",
									                       "utf-16",
									                       "ascii"
									                     ],
									                     "type": "string"
									                   },
									                   "LogGroupName": {
									                     "description": "The CloudWatch log group name to be associated to the monitored log.",
									                     "maxLength": 512,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogPath": {
									                     "description": "The path of the logs to be monitored.",
									                     "maxLength": 260,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogType": {
									                     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "PatternSet": {
									                     "description": "The name of the log pattern set.",
									                     "maxLength": 30,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/Log",
									                 "required": [
									                   "LogType"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             },
									             "WindowsEvents": {
									               "description": "A list of Windows Events to log.",
									               "items": {
									                 "additionalProperties": false,
									                 "description": "A Windows Event to be monitored for the component.",
									                 "properties": {
									                   "EventLevels": {
									                     "description": "The levels of event to log. ",
									                     "items": {
									                       "description": "The level of event to log.",
									                       "enum": [
									                         "INFORMATION",
									                         "WARNING",
									                         "ERROR",
									                         "CRITICAL",
									                         "VERBOSE"
									                       ],
									                       "$ref": "#/definitions/EventLevel",
									                       "type": "string"
									                     },
									                     "minItems": 1,
									                     "type": "array"
									                   },
									                   "EventName": {
									                     "description": "The type of Windows Events to log.",
									                     "maxLength": 260,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "LogGroupName": {
									                     "description": "The CloudWatch log group name to be associated to the monitored log.",
									                     "maxLength": 512,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   },
									                   "PatternSet": {
									                     "description": "The name of the log pattern set.",
									                     "maxLength": 30,
									                     "minLength": 1,
									                     "pattern": "",
									                     "type": "string"
									                   }
									                 },
									                 "$ref": "#/definitions/WindowsEvent",
									                 "required": [
									                   "LogGroupName",
									                   "EventName",
									                   "EventLevels"
									                 ],
									                 "type": "object"
									               },
									               "type": "array"
									             }
									           },
									           "$ref": "#/definitions/SubComponentConfigurationDetails",
									           "type": "object"
									         },
									         "SubComponentType": {
									           "description": "The sub component type.",
									           "enum": [
									             "AWS::EC2::Instance",
									             "AWS::EC2::Volume"
									           ],
									           "type": "string"
									         }
									       },
									       "$ref": "#/definitions/SubComponentTypeConfiguration",
									       "required": [
									         "SubComponentType",
									         "SubComponentConfigurationDetails"
									       ],
									       "type": "object"
									     },
									     "minItems": 1,
									     "type": "array"
									   }
									*/
									Description: "Sub component configurations of the component.",
									Attributes: schema.ListNestedAttributes(
										map[string]schema.Attribute{
											"sub_component_configuration_details": {
												// Property: SubComponentConfigurationDetails
												// CloudFormation resource type schema:
												/*
												   {
												     "additionalProperties": false,
												     "description": "The configuration settings of sub components.",
												     "properties": {
												       "AlarmMetrics": {
												         "description": "A list of metrics to monitor for the component.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A metric to be monitored for the component.",
												           "properties": {
												             "AlarmMetricName": {
												               "description": "The name of the metric to be monitored for the component.",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/AlarmMetric",
												           "required": [
												             "AlarmMetricName"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       },
												       "Logs": {
												         "description": "A list of logs to monitor for the component.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A log to be monitored for the component.",
												           "properties": {
												             "Encoding": {
												               "description": "The type of encoding of the logs to be monitored.",
												               "enum": [
												                 "utf-8",
												                 "utf-16",
												                 "ascii"
												               ],
												               "type": "string"
												             },
												             "LogGroupName": {
												               "description": "The CloudWatch log group name to be associated to the monitored log.",
												               "maxLength": 512,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogPath": {
												               "description": "The path of the logs to be monitored.",
												               "maxLength": 260,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogType": {
												               "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
												               "pattern": "",
												               "type": "string"
												             },
												             "PatternSet": {
												               "description": "The name of the log pattern set.",
												               "maxLength": 30,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/Log",
												           "required": [
												             "LogType"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       },
												       "WindowsEvents": {
												         "description": "A list of Windows Events to log.",
												         "items": {
												           "additionalProperties": false,
												           "description": "A Windows Event to be monitored for the component.",
												           "properties": {
												             "EventLevels": {
												               "description": "The levels of event to log. ",
												               "items": {
												                 "description": "The level of event to log.",
												                 "enum": [
												                   "INFORMATION",
												                   "WARNING",
												                   "ERROR",
												                   "CRITICAL",
												                   "VERBOSE"
												                 ],
												                 "$ref": "#/definitions/EventLevel",
												                 "type": "string"
												               },
												               "minItems": 1,
												               "type": "array"
												             },
												             "EventName": {
												               "description": "The type of Windows Events to log.",
												               "maxLength": 260,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "LogGroupName": {
												               "description": "The CloudWatch log group name to be associated to the monitored log.",
												               "maxLength": 512,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             },
												             "PatternSet": {
												               "description": "The name of the log pattern set.",
												               "maxLength": 30,
												               "minLength": 1,
												               "pattern": "",
												               "type": "string"
												             }
												           },
												           "$ref": "#/definitions/WindowsEvent",
												           "required": [
												             "LogGroupName",
												             "EventName",
												             "EventLevels"
												           ],
												           "type": "object"
												         },
												         "type": "array"
												       }
												     },
												     "$ref": "#/definitions/SubComponentConfigurationDetails",
												     "type": "object"
												   }
												*/
												Description: "The configuration settings of sub components.",
												Attributes: schema.SingleNestedAttributes(
													map[string]schema.Attribute{
														"alarm_metrics": {
															// Property: AlarmMetrics
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of metrics to monitor for the component.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A metric to be monitored for the component.",
															       "properties": {
															         "AlarmMetricName": {
															           "description": "The name of the metric to be monitored for the component.",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/AlarmMetric",
															       "required": [
															         "AlarmMetricName"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of metrics to monitor for the component.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"alarm_metric_name": {
																		// Property: AlarmMetricName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the metric to be monitored for the component.",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the metric to be monitored for the component.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
														"logs": {
															// Property: Logs
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of logs to monitor for the component.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A log to be monitored for the component.",
															       "properties": {
															         "Encoding": {
															           "description": "The type of encoding of the logs to be monitored.",
															           "enum": [
															             "utf-8",
															             "utf-16",
															             "ascii"
															           ],
															           "type": "string"
															         },
															         "LogGroupName": {
															           "description": "The CloudWatch log group name to be associated to the monitored log.",
															           "maxLength": 512,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogPath": {
															           "description": "The path of the logs to be monitored.",
															           "maxLength": 260,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogType": {
															           "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
															           "pattern": "",
															           "type": "string"
															         },
															         "PatternSet": {
															           "description": "The name of the log pattern set.",
															           "maxLength": 30,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/Log",
															       "required": [
															         "LogType"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of logs to monitor for the component.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"encoding": {
																		// Property: Encoding
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The type of encoding of the logs to be monitored.",
																		     "enum": [
																		       "utf-8",
																		       "utf-16",
																		       "ascii"
																		     ],
																		     "type": "string"
																		   }
																		*/
																		Description: "The type of encoding of the logs to be monitored.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_group_name": {
																		// Property: LogGroupName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The CloudWatch log group name to be associated to the monitored log.",
																		     "maxLength": 512,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The CloudWatch log group name to be associated to the monitored log.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_path": {
																		// Property: LogPath
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The path of the logs to be monitored.",
																		     "maxLength": 260,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The path of the logs to be monitored.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																	"log_type": {
																		// Property: LogType
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The log type decides the log patterns against which Application Insights analyzes the log.",
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The log type decides the log patterns against which Application Insights analyzes the log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"pattern_set": {
																		// Property: PatternSet
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the log pattern set.",
																		     "maxLength": 30,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the log pattern set.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
														"windows_events": {
															// Property: WindowsEvents
															// CloudFormation resource type schema:
															/*
															   {
															     "description": "A list of Windows Events to log.",
															     "items": {
															       "additionalProperties": false,
															       "description": "A Windows Event to be monitored for the component.",
															       "properties": {
															         "EventLevels": {
															           "description": "The levels of event to log. ",
															           "items": {
															             "description": "The level of event to log.",
															             "enum": [
															               "INFORMATION",
															               "WARNING",
															               "ERROR",
															               "CRITICAL",
															               "VERBOSE"
															             ],
															             "$ref": "#/definitions/EventLevel",
															             "type": "string"
															           },
															           "minItems": 1,
															           "type": "array"
															         },
															         "EventName": {
															           "description": "The type of Windows Events to log.",
															           "maxLength": 260,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "LogGroupName": {
															           "description": "The CloudWatch log group name to be associated to the monitored log.",
															           "maxLength": 512,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         },
															         "PatternSet": {
															           "description": "The name of the log pattern set.",
															           "maxLength": 30,
															           "minLength": 1,
															           "pattern": "",
															           "type": "string"
															         }
															       },
															       "$ref": "#/definitions/WindowsEvent",
															       "required": [
															         "LogGroupName",
															         "EventName",
															         "EventLevels"
															       ],
															       "type": "object"
															     },
															     "type": "array"
															   }
															*/
															Description: "A list of Windows Events to log.",
															Attributes: schema.ListNestedAttributes(
																map[string]schema.Attribute{
																	"event_levels": {
																		// Property: EventLevels
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The levels of event to log. ",
																		     "items": {
																		       "description": "The level of event to log.",
																		       "enum": [
																		         "INFORMATION",
																		         "WARNING",
																		         "ERROR",
																		         "CRITICAL",
																		         "VERBOSE"
																		       ],
																		       "$ref": "#/definitions/EventLevel",
																		       "type": "string"
																		     },
																		     "minItems": 1,
																		     "type": "array"
																		   }
																		*/
																		Description: "The levels of event to log. ",
																		Type:        types.ListType{ElemType: types.StringType},
																		Required:    true,
																	},
																	"event_name": {
																		// Property: EventName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The type of Windows Events to log.",
																		     "maxLength": 260,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The type of Windows Events to log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"log_group_name": {
																		// Property: LogGroupName
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The CloudWatch log group name to be associated to the monitored log.",
																		     "maxLength": 512,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The CloudWatch log group name to be associated to the monitored log.",
																		Type:        types.StringType,
																		Required:    true,
																	},
																	"pattern_set": {
																		// Property: PatternSet
																		// CloudFormation resource type schema:
																		/*
																		   {
																		     "description": "The name of the log pattern set.",
																		     "maxLength": 30,
																		     "minLength": 1,
																		     "pattern": "",
																		     "type": "string"
																		   }
																		*/
																		Description: "The name of the log pattern set.",
																		Type:        types.StringType,
																		Optional:    true,
																	},
																},
																schema.ListNestedAttributesOptions{},
															),
															Optional: true,
														},
													},
												),
												Required: true,
											},
											"sub_component_type": {
												// Property: SubComponentType
												// CloudFormation resource type schema:
												/*
												   {
												     "description": "The sub component type.",
												     "enum": [
												       "AWS::EC2::Instance",
												       "AWS::EC2::Volume"
												     ],
												     "type": "string"
												   }
												*/
												Description: "The sub component type.",
												Type:        types.StringType,
												Required:    true,
											},
										},
										schema.ListNestedAttributesOptions{
											MinItems: 1,
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"tier": {
						// Property: Tier
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The tier of the application component.",
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The tier of the application component.",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Optional: true,
		},
		"custom_components": {
			// Property: CustomComponents
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The custom grouped components.",
			     "items": {
			       "additionalProperties": false,
			       "description": "The custom grouped component.",
			       "properties": {
			         "ComponentName": {
			           "description": "The name of the component.",
			           "maxLength": 128,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         },
			         "ResourceList": {
			           "description": "The list of resource ARNs that belong to the component.",
			           "items": {
			             "maxLength": 300,
			             "minLength": 20,
			             "pattern": "",
			             "type": "string"
			           },
			           "minItems": 1,
			           "type": "array"
			         }
			       },
			       "$ref": "#/definitions/CustomComponent",
			       "required": [
			         "ComponentName",
			         "ResourceList"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array"
			   }
			*/
			Description: "The custom grouped components.",
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"component_name": {
						// Property: ComponentName
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The name of the component.",
						     "maxLength": 128,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The name of the component.",
						Type:        types.StringType,
						Required:    true,
					},
					"resource_list": {
						// Property: ResourceList
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The list of resource ARNs that belong to the component.",
						     "items": {
						       "maxLength": 300,
						       "minLength": 20,
						       "pattern": "",
						       "type": "string"
						     },
						     "minItems": 1,
						     "type": "array"
						   }
						*/
						Description: "The list of resource ARNs that belong to the component.",
						Type:        types.ListType{ElemType: types.StringType},
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Optional: true,
		},
		"log_pattern_sets": {
			// Property: LogPatternSets
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The log pattern sets.",
			     "items": {
			       "additionalProperties": false,
			       "description": "The log pattern set.",
			       "properties": {
			         "LogPatterns": {
			           "description": "The log patterns of a set.",
			           "items": {
			             "additionalProperties": false,
			             "description": "The log pattern.",
			             "properties": {
			               "Pattern": {
			                 "description": "The log pattern.",
			                 "maxLength": 50,
			                 "minLength": 1,
			                 "type": "string"
			               },
			               "PatternName": {
			                 "description": "The name of the log pattern.",
			                 "maxLength": 50,
			                 "minLength": 1,
			                 "pattern": "",
			                 "type": "string"
			               },
			               "Rank": {
			                 "description": "Rank of the log pattern.",
			                 "type": "integer"
			               }
			             },
			             "$ref": "#/definitions/LogPattern",
			             "required": [
			               "PatternName",
			               "Pattern",
			               "Rank"
			             ],
			             "type": "object"
			           },
			           "minItems": 1,
			           "type": "array"
			         },
			         "PatternSetName": {
			           "description": "The name of the log pattern set.",
			           "maxLength": 30,
			           "minLength": 1,
			           "pattern": "",
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/LogPatternSet",
			       "required": [
			         "PatternSetName",
			         "LogPatterns"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array"
			   }
			*/
			Description: "The log pattern sets.",
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"log_patterns": {
						// Property: LogPatterns
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The log patterns of a set.",
						     "items": {
						       "additionalProperties": false,
						       "description": "The log pattern.",
						       "properties": {
						         "Pattern": {
						           "description": "The log pattern.",
						           "maxLength": 50,
						           "minLength": 1,
						           "type": "string"
						         },
						         "PatternName": {
						           "description": "The name of the log pattern.",
						           "maxLength": 50,
						           "minLength": 1,
						           "pattern": "",
						           "type": "string"
						         },
						         "Rank": {
						           "description": "Rank of the log pattern.",
						           "type": "integer"
						         }
						       },
						       "$ref": "#/definitions/LogPattern",
						       "required": [
						         "PatternName",
						         "Pattern",
						         "Rank"
						       ],
						       "type": "object"
						     },
						     "minItems": 1,
						     "type": "array"
						   }
						*/
						Description: "The log patterns of a set.",
						Attributes: schema.ListNestedAttributes(
							map[string]schema.Attribute{
								"pattern": {
									// Property: Pattern
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "The log pattern.",
									     "maxLength": 50,
									     "minLength": 1,
									     "type": "string"
									   }
									*/
									Description: "The log pattern.",
									Type:        types.StringType,
									Required:    true,
								},
								"pattern_name": {
									// Property: PatternName
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "The name of the log pattern.",
									     "maxLength": 50,
									     "minLength": 1,
									     "pattern": "",
									     "type": "string"
									   }
									*/
									Description: "The name of the log pattern.",
									Type:        types.StringType,
									Required:    true,
								},
								"rank": {
									// Property: Rank
									// CloudFormation resource type schema:
									/*
									   {
									     "description": "Rank of the log pattern.",
									     "type": "integer"
									   }
									*/
									Description: "Rank of the log pattern.",
									Type:        types.NumberType,
									Required:    true,
								},
							},
							schema.ListNestedAttributesOptions{
								MinItems: 1,
							},
						),
						Required: true,
					},
					"pattern_set_name": {
						// Property: PatternSetName
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The name of the log pattern set.",
						     "maxLength": 30,
						     "minLength": 1,
						     "pattern": "",
						     "type": "string"
						   }
						*/
						Description: "The name of the log pattern set.",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Optional: true,
		},
		"ops_center_enabled": {
			// Property: OpsCenterEnabled
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "When set to true, creates opsItems for any problems detected on an application.",
			     "type": "boolean"
			   }
			*/
			Description: "When set to true, creates opsItems for any problems detected on an application.",
			Type:        types.BoolType,
			Optional:    true,
		},
		"ops_item_sns_topic_arn": {
			// Property: OpsItemSNSTopicArn
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The SNS topic provided to Application Insights that is associated to the created opsItem.",
			     "maxLength": 300,
			     "minLength": 20,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "The SNS topic provided to Application Insights that is associated to the created opsItem.",
			Type:        types.StringType,
			Optional:    true,
		},
		"resource_group_name": {
			// Property: ResourceGroupName
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The name of the resource group.",
			     "maxLength": 256,
			     "minLength": 1,
			     "pattern": "",
			     "type": "string"
			   }
			*/
			Description: "The name of the resource group.",
			Type:        types.StringType,
			Required:    true,
			// ResourceGroupName is a force-new attribute.
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			/*
			   {
			     "description": "The tags of Application Insights application.",
			     "items": {
			       "additionalProperties": false,
			       "description": "A key-value pair to associate with a resource.",
			       "properties": {
			         "Key": {
			           "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			           "maxLength": 128,
			           "minLength": 1,
			           "type": "string"
			         },
			         "Value": {
			           "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
			           "maxLength": 256,
			           "minLength": 0,
			           "type": "string"
			         }
			       },
			       "$ref": "#/definitions/Tag",
			       "required": [
			         "Key",
			         "Value"
			       ],
			       "type": "object"
			     },
			     "minItems": 1,
			     "type": "array"
			   }
			*/
			Description: "The tags of Application Insights application.",
			Attributes: schema.ListNestedAttributes(
				map[string]schema.Attribute{
					"key": {
						// Property: Key
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						     "maxLength": 128,
						     "minLength": 1,
						     "type": "string"
						   }
						*/
						Description: "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Required:    true,
					},
					"value": {
						// Property: Value
						// CloudFormation resource type schema:
						/*
						   {
						     "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						     "maxLength": 256,
						     "minLength": 0,
						     "type": "string"
						   }
						*/
						Description: "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Type:        types.StringType,
						Required:    true,
					},
				},
				schema.ListNestedAttributesOptions{
					MinItems: 1,
				},
			),
			Optional: true,
		},
	}

	// Required for acceptance testing.
	attributes["id"] = schema.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := schema.Schema{
		Description: "Resource schema for AWS::ApplicationInsights::Application",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::ApplicationInsights::Application").WithTerraformTypeName("aws_applicationinsights_application").WithTerraformSchema(schema)

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "aws_applicationinsights_application", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
