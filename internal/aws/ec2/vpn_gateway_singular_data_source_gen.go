// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_ec2_vpn_gateway", vPNGatewayDataSourceType)
}

// vPNGatewayDataSourceType returns the Terraform awscc_ec2_vpn_gateway data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::EC2::VPNGateway resource type.
func vPNGatewayDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"amazon_side_asn": {
			// Property: AmazonSideAsn
			// CloudFormation resource type schema:
			// {
			//   "description": "The private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
			//   "format": "int64",
			//   "type": "integer"
			// }
			Description: "The private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
			Type:        types.Int64Type,
			Computed:    true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "Any tags assigned to the virtual private gateway.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Key": {
			//         "type": "string"
			//       },
			//       "Value": {
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Value",
			//       "Key"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array",
			//   "uniqueItems": false
			// }
			Description: "Any tags assigned to the virtual private gateway.",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Type:     types.StringType,
						Computed: true,
					},
					"value": {
						// Property: Value
						Type:     types.StringType,
						Computed: true,
					},
				},
			),
			Computed: true,
		},
		"type": {
			// Property: Type
			// CloudFormation resource type schema:
			// {
			//   "description": "The type of VPN connection the virtual private gateway supports.",
			//   "type": "string"
			// }
			Description: "The type of VPN connection the virtual private gateway supports.",
			Type:        types.StringType,
			Computed:    true,
		},
		"vpn_gateway_id": {
			// Property: VPNGatewayId
			// CloudFormation resource type schema:
			// {
			//   "description": "VPN Gateway ID generated by service",
			//   "type": "string"
			// }
			Description: "VPN Gateway ID generated by service",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::EC2::VPNGateway",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::EC2::VPNGateway").WithTerraformTypeName("awscc_ec2_vpn_gateway")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"amazon_side_asn": "AmazonSideAsn",
		"key":             "Key",
		"tags":            "Tags",
		"type":            "Type",
		"value":           "Value",
		"vpn_gateway_id":  "VPNGatewayId",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return singularDataSourceType, nil
}
